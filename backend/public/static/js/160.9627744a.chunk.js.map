{"version":3,"file":"static/js/160.9627744a.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/ArrowBack.js","../node_modules/@mui/material/internal/switchBaseClasses.js","../node_modules/@mui/material/internal/SwitchBase.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-gfm-footnote/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-gfm-strikethrough/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/** @license React v17.0.2\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\nexports.typeOf=y;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array.<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array.<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array.<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array.<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const footnoteOrder = h.footnoteOrder\n  const identifier = String(node.identifier)\n  const index = footnoteOrder.indexOf(identifier)\n  const marker = String(\n    index === -1 ? footnoteOrder.push(identifier) : index + 1\n  )\n\n  return h(\n    node,\n    'a',\n    {\n      href: '#fn' + marker,\n      className: ['footnote-ref'],\n      id: 'fnref' + marker,\n      role: 'doc-noteref'\n    },\n    [h(node.position, 'sup', [u('text', marker)])]\n  )\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array.<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array.<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  // No need to check if `identifier` exists in `footnoteOrder`, it’s guaranteed\n  // to not exist because we just generated it.\n  footnoteOrder.push(identifier)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array.<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    let pos = node.align ? align.length : row.length\n    /** @type {Array.<Content>} */\n    const out = []\n\n    while (pos--) {\n      const cell = row[pos]\n      out[pos] = h(cell, name, {align: align[pos]}, cell ? all(h, cell) : [])\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array.<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Object.<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array.<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array.<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Object.<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array.<string>} footnoteOrder Order in which footnotes occur\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array.<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false] Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {Handlers} [handlers] Object mapping mdast nodes to functions handling them\n * @property {Array.<string>} [passThrough] List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler] Handler for all unknown nodes.\n *\n * @typedef {Record.<string, Handler>} Handlers Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Object.<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array.<string>} */\n  h.footnoteOrder = []\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('./index.js').H} H\n */\n\nimport {thematicBreak} from './handlers/thematic-break.js'\nimport {list} from './handlers/list.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  const footnoteById = h.footnoteById\n  const footnoteOrder = h.footnoteOrder\n  let index = -1\n  /** @type {Array.<ListItem>} */\n  const listItems = []\n\n  while (++index < footnoteOrder.length) {\n    const def = footnoteById[footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const marker = String(index + 1)\n    const content = [...def.children]\n    /** @type {Link} */\n    const backReference = {\n      type: 'link',\n      url: '#fnref' + marker,\n      data: {hProperties: {className: ['footnote-back'], role: 'doc-backlink'}},\n      children: [{type: 'text', value: '↩'}]\n    }\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'paragraph') {\n      tail.children.push(backReference)\n    } else {\n      // @ts-expect-error Indeed, link directly added in block content.\n      // Which we do because that way at least the handlers will be called\n      // for the other HTML we’re generating (as markdown).\n      content.push(backReference)\n    }\n\n    listItems.push({\n      type: 'listItem',\n      data: {hProperties: {id: 'fn' + marker, role: 'doc-endnote'}},\n      children: content,\n      position: def.position\n    })\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return h(\n    null,\n    'section',\n    {className: ['footnotes'], role: 'doc-endnotes'},\n    wrap(\n      [\n        thematicBreak(h),\n        list(h, {type: 'list', ordered: true, children: listItems})\n      ],\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin to bridge or mutate to rehype.\n *\n * If a destination is given, runs the destination with the new hast tree\n * (bridge-mode).\n * Without destination, returns the hast tree: further plugins run on that tree\n * (mutate-mode).\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further transformers run on the nlcst tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned for `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [plugins=[]] **deprecated**: use `remarkPlugins` instead\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    // TODO: deprecate `plugins` in v8.0.0.\n    .use(options.remarkPlugins || options.plugins || [])\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]))\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","_objectWithoutPropertiesLoose","useControlled","controlled","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","options","enumerable","configurable","newValue","writable","getProperty","module","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","b","e","f","g","h","k","n","p","q","r","u","v","w","Symbol","for","x","y","a","t","$$typeof","z","A","B","C","D","E","F","G","H","I","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","parse","iterator","output","hasIterator","len","_possibleConstructorReturn","self","assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","isNativeReflectConstruct","Super","getPrototypeOf","NewTarget","Reflect","construct","apply","_getPrototypeOf","o","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_isNativeReflectConstruct","sham","Proxy","valueOf","_toArray","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","max","limit","Number","POSITIVE_INFINITY","markdownSpace","enter","prefix","consume","exit","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","regex","splice","list","remove","items","parameters","chunkStart","from","unshift","classifyCharacter","combineExtensions","extensions","all","index","syntaxExtension","extension","hook","right","constructs","existing","before","add","decodeNumericCharacterReference","base","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","normalizeIdentifier","toLowerCase","resolveAll","events","context","called","resolve","includes","_construct","Parent","args","Class","instance","Function","_wrapNativeSuper","_cache","Map","fn","indexOf","has","get","set","Wrapper","stringifyPosition","point","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","assertNonEmpty","assertPart","stem","encoding","part","bail","toStringTag","wrap","middleware","callback","fnExpectsCallback","done","exception","Promise","then","unified","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","settings","addPlugin","addList","addPreset","assign","plugin","plugins","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","tree","runSync","complete","assertDone","process","processSync","destination","keys","asyncName","looksLikeAVFile","includeImageAlt","one","alt","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","disable","null","subtokenize","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","visit","visitor","reverse","visitParents","parents","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","loose","properties","footnoteReference","footnoteOrder","revert","subtype","suffix","contents","listItemLoose","blockquote","break","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","child","table","rows","align","row","out","cell","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","backReference","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","checks","types","DefinedInfo","mask","mark","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onCancel","onCanPlay","onCanPlayThrough","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","referrerPolicy","rel","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","span","spellCheck","srcDoc","srcLang","srcSet","step","translate","typeMustMatch","useMap","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y1","y2","yChannelSelector","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","components","basic","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","RegExp","ignored","convert","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","whole","gfmFootnoteToMarkdown","peek","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","codePointAt","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","castFactory","typeFactory","anyFactory","propsFactory","tests","subresult","grandparents","toResult"],"sourceRoot":""}