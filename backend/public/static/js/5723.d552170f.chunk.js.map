{"version":3,"file":"static/js/5723.d552170f.chunk.js","mappings":"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","sources":["components/AnimationDialog.js","components/DialogConfirmation.js","components/ReactTableBase/GlobalFilter.js","components/ReactTableBase/IndeterminateCheckbox.js","components/ReactTableBase/index.js","components/TourComponent.js","components/form/inputs/InputHook.js","components/form/inputs/InputPasswordHook.js","components/form/inputs/InputMaskHook.js","components/form/inputs/AutoCompleteHook.js","components/form/inputs/AutoCompleteAsyncHook.js","hooks/useAsyncDebounce.js","components/form/select/index.js","components/form/switch/index.js","hooks/useNotifier.js","pages/gedure/lotes_deudas/TourLotesDeudas.js","pages/gedure/lotes_deudas/Table.js","pages/gedure/lotes_deudas/EditLoteDeuda.js","pages/gedure/lotes_deudas/CreateLoteDeuda.js","pages/gedure/lotes_deudas/VerifySolvencia.js","pages/gedure/lotes_deudas/index.js"],"sourcesContent":["import React from 'react';\n\n// MUI\nimport { Slide } from '@mui/material';\n\nconst AnimationDialog = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default AnimationDialog;","import React from 'react';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n// Components\nimport AnimationDialog from './AnimationDialog';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nexport default function DialogConfirmation({ rdx1, rdx2, close, request, children }) {\n  const { open, loading, data } = useSelector(state => state[rdx1][rdx2]);\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const handleRequest = () => {\n    dispatch(request(data));\n  }\n\n  const handleClose = () => {\n    dispatch(close);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n      fullScreen={fullScreen}\n      aria-labelledby=\"confirm-dialog-title\"\n      aria-describedby=\"confirm-dialog-description\"\n    >\n      <DialogTitle>¿Está seguro?</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"confirm-dialog-description\">\n          {children(data)}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n\t\t\t\t<Button disabled={loading} onClick={handleClose} color=\"inherit\">\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n        <LoadingButton onClick={handleRequest} loading={loading} color=\"inherit\">\n          Confirmar\n        </LoadingButton>\n\t\t\t</DialogActions>\n    </Dialog>\n  )\n}","import React, { useState } from \"react\";\n\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nimport { useAsyncDebounce } from \"react-table\";\n\nexport function GlobalFilter({ state, setGlobalFilter, gotoPage, dataTourGlobal }) {\n  const [value, setValue] = useState(state.globalFilter);\n\n  const onDebounce = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n    gotoPage(0);\n  }, 500);\n\n  const handleClear = () => {\n    setValue(\"\");\n    setGlobalFilter(undefined);\n    gotoPage(0);\n  }\n\n  return (\n    <TextField\n      data-tour={dataTourGlobal}\n      size=\"small\"\n      value={value || \"\"}\n      placeholder=\"Buscar...\"\n      variant='standard'\n      autoComplete=\"off\"\n      onChange={(event) => {\n        onDebounce(event.target.value);\n        setValue(event.target.value);\n      }}\n      sx={{\n        mr: 1,\n      }}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>,\n        endAdornment: <IconButton disabled={!value} onClick={handleClear}><ClearIcon /></IconButton>\n      }} />\n  );\n}\n","import React from \"react\";\nimport { Checkbox } from \"@mui/material\";\n\nexport const IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <Checkbox\n        type=\"checkbox\"\n        ref={resolvedRef}\n        indeterminate={indeterminate}\n        color={indeterminate ? 'default' : 'primary'}\n        {...rest} />\n    );\n  }\n);\n","import React, { useEffect } from \"react\";\n\n// MUI\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  Grid,\n  IconButton,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { alpha } from \"@mui/material/styles\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\n// Table\nimport {\n  useTable,\n  useGlobalFilter,\n  useRowSelect,\n  usePagination,\n} from \"react-table\";\n\n// Components\nimport { GlobalFilter } from \"./GlobalFilter\";\nimport { IndeterminateCheckbox } from \"./IndeterminateCheckbox\";\n\nexport default function ReactTableBase({\n  data,\n  columns,\n  pageSizeData,\n  pageCountData,\n  loading,\n  handleGlobalFilter,\n  handleChange,\n  filter,\n  massiveOptions,\n  title,\n  refresh,\n  dataTourMassive = 'gdTable__massive',\n  dataTourGlobal = 'gdTable__search',\n  ...rest\n}) {\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        hiddenColumns: [\"massiveSelection\"],\n        pageSize: pageSizeData,\n        pageIndex: 0,\n      },\n      manualPagination: true,\n      pageCount: pageCountData,\n    },\n    useGlobalFilter,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      hooks.visibleColumns.push((columns) => [\n        {\n          id: \"massiveSelection\",\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n          ),\n          Cell: ({ row }) => (\n            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n          ),\n        },\n        ...columns,\n      ]);\n    }\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    selectedFlatRows,\n    allColumns,\n    canPreviousPage,\n    canNextPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    pageOptions,\n    gotoPage,\n    pageCount,\n  } = tableInstance;\n\n  const { pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    handleChange({ pageIndex: pageIndex+1, pageSize });\n    // eslint-disable-next-line\n  }, [pageIndex, pageSize]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Paper sx={{ position: \"relative\" }} {...rest}>\n          <Backdrop\n            sx={{\n              color: \"#fff\",\n              zIndex: (theme) => theme.zIndex.appBar - 1,\n              position: \"absolute\",\n            }}\n            open={loading}\n          >\n            <CircularProgress />\n          </Backdrop>\n          <Toolbar\n            sx={{\n              ...(selectedFlatRows.length > 0 && {\n                bgcolor: (theme) =>\n                  alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.activatedOpacity\n                  ),\n              }),\n            }}\n          >\n            {selectedFlatRows.length > 0 ? (\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                color=\"inherit\"\n                variant=\"subtitle1\"\n                component=\"div\"\n                noWrap\n              >\n                {selectedFlatRows.length} seleccionada(s)\n              </Typography>\n            ) : (\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                variant=\"h6\"\n                id=\"registros\"\n                component=\"div\"\n                noWrap\n              >\n                {title}\n              </Typography>\n            )}\n            <GlobalFilter\n              state={state}\n              setGlobalFilter={handleGlobalFilter}\n              gotoPage={gotoPage}\n              dataTourGlobal={dataTourGlobal}\n            />\n            {selectedFlatRows.length > 0 ? (\n              massiveOptions(selectedFlatRows.map(\n                (d) => d.original\n              ))\n            ) : (\n              <>\n                {massiveOptions && (\n                  <Tooltip title=\"Opciones massivas\" arrow>\n                    <IconButton\n                      component=\"span\"\n                      onClick={() => {\n                        allColumns.map((column) => {\n                          if (column.id  === 'massiveSelection') {\n                            column.toggleHidden();\n                          } else if (column.id === 'options') {\n                            column.toggleHidden();\n                          }\n                          return null;\n                        });\n                      }}\n                      data-tour={dataTourMassive}\n                      disabled={selectedFlatRows.length > 0}\n                    >\n                      <GroupIcon />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                <Tooltip title='Recargar' arrow>\n                  <IconButton\n                    component=\"span\"\n                    onClick={refresh}\n                    data-tour=\"gdTable__refresh\"\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n                {filter && filter(gotoPage)}\n              </>\n            )}\n          </Toolbar>\n          <TableContainer>\n            <Box overflow=\"auto\" minWidth={352}>\n              <Table\n                sx={{ minWidth: 650 }}\n                aria-label=\"React Table\"\n                {...getTableProps()}\n              >\n                <TableHead sx={{ th: { border: 0 } }}>\n                  {headerGroups.map((headerGroup) => (\n                    <TableRow\n                      sx={{ td: { border: 0 } }}\n                      {...headerGroup.getHeaderGroupProps()}\n                    >\n                      {headerGroup.headers.map((column) => {\n                        if (column.id === \"massiveSelection\") {\n                          return (\n                            <TableCell\n                              padding=\"checkbox\"\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render(\"Header\")}\n                            </TableCell>\n                          );\n                        } else if (column.Header === \"Opciones\") {\n                          return (\n                            <TableCell\n                              align=\"right\"\n                              data-tour='table-Opciones'\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render(\"Header\")}\n                            </TableCell>\n                          );\n                        }\n\n                        return (\n                          <TableCell data-tour={`table-${column.render(\"Header\")}`} {...column.getHeaderProps()}>\n                            {column.render(\"Header\")}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                  {page.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <TableRow sx={{ height: \"73px\" }} {...row.getRowProps()}>\n                        {row.cells.map((cell) => {\n                          if (cell.column.id === \"massiveSelection\") {\n                            return (\n                              <TableCell\n                                padding=\"checkbox\"\n                                {...cell.getCellProps()}\n                              >\n                                {cell.render(\"Cell\")}\n                              </TableCell>\n                            );\n                          } else if (cell.column.Header === \"Opciones\") {\n                            return (\n                              <TableCell align=\"right\" {...cell.getCellProps()}>\n                                {cell.render(\"Cell\")}\n                              </TableCell>\n                            );\n                          }\n\n                          return (\n                            <TableCell {...cell.getCellProps()}>\n                              {cell.render(\"Cell\")}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                  {page.length === 0 && (\n                    <TableRow>\n                      <TableCell colSpan=\"100%\">\n                        <Typography textAlign=\"center\">\n                          No se han encontrado resultados\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n            <Box overflow=\"auto\" minWidth={352}>\n              <Table>\n                <TableFooter>\n                  <TableRow>\n                    <TableCell colSpan=\"100%\" sx={{ border: 0 }}>\n                      <Grid\n                        container\n                        justifyContent=\"flex-end\"\n                        alignItems=\"center\"\n                        spacing={1}\n                        item\n                        xs={12}\n                      >\n                        <Grid item>\n                          <Select\n                            labelId=\"page-size-table-label\"\n                            id=\"page-size-table\"\n                            value={pageSize}\n                            label=\"Filas\"\n                            variant=\"standard\"\n                            onChange={(e) => {\n                              setPageSize(Number(e.target.value));\n                            }}\n                          >\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                              <MenuItem key={pageSize} value={pageSize}>\n                                {pageSize} Filas\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Primera página\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={() => gotoPage(0)}\n                              disabled={!canPreviousPage}\n                            >\n                              <FirstPageIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Anterior\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={previousPage}\n                              disabled={!canPreviousPage}\n                            >\n                              <NavigateBeforeIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Box\n                            component=\"span\"\n                            fontSize=\"body2.fontSize\"\n                            color=\"text.secondary\"\n                          >\n                            {pageIndex + 1} de {pageOptions.length}\n                          </Box>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Siguiente\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={nextPage}\n                              disabled={!canNextPage}\n                            >\n                              <NavigateNextIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Última página\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={() => gotoPage(pageCount - 1)}\n                              disabled={!canNextPage}\n                            >\n                              <LastPageIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                      </Grid>\n                    </TableCell>\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </Box>\n          </TableContainer>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\n\nimport Tour from 'reactour';\n\n// MUI\nimport { Button } from '@mui/material';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateTour } from '../store/slices/configs';\n\nfunction TourComponent({ steps, select, version = 'v1' }) {\n\tconst { tourOpen } = useSelector((state) => ({\n\t\ttourOpen: state.configs.tour[select],\n\t}));\n\tconst dispatch = useDispatch();\n\t\n\tconst handleClose = ()=>{\n\t\tdispatch(updateTour({open: true, tour: select, version}));\n\t}\n\t\n\treturn (\n\t\t<Tour \n\t\t\tsteps={steps}\n\t\t\tisOpen={!tourOpen}\n\t\t\tdisableInteraction={true}\n\t\t\tonAfterOpen={() => {document.body.style.overflowY = 'hidden'}}\n\t\t\tonBeforeClose={() => {document.body.style.overflowY = 'auto'}}\n\t\t\tshowNavigationNumber={false}\n\t\t\tshowCloseButton={false}\n\t\t\trounded={5}\n\t\t\tlastStepNextButton={\n\t\t\t\t<Button component='span' size='small' color='primary' onClick={handleClose}>Terminar guía</Button>\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default TourComponent;","import { TextField } from \"@mui/material\";\n\nimport { useController } from \"react-hook-form\";\n\nexport function InputHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\t\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t/>\n\t);\n}","import React, { useState } from 'react';\n\n// MUI\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\n// Icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n// FormHook\nimport { useController } from \"react-hook-form\";\n\nexport function InputPasswordHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n  const [visibility, setVisibility] = useState(false);\n\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\tconst handleClick = () => {\n\t\tsetVisibility(!visibility);\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n      type={visibility ? 'text' : 'password'}\n      InputProps={{\n\t\t\t\tendAdornment: (\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<IconButton onClick={handleClick} size={rest?.size}>\n\t\t\t\t\t\t\t{visibility ? <VisibilityOffIcon /> : <VisibilityIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n}","import { TextField } from \"@mui/material\";\nimport { useController } from \"react-hook-form\";\n\nimport NumberFormat from 'react-number-format';\n\nexport function InputMaskHook({ \n\tname, \n\tcontrol,\n\trules = null,\n\tdefaultValue = '',\n\thelperText = '',\n\t...rest \n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<NumberFormat\n\t\t\t{...rest}\n\t\t\t{...inputProps}\n\t\t\tvalue={(rest.format ? value : parseFloat(value)) || ''}\n\t\t\tcustomInput={TextField}\n\t\t\terror={invalid}\n\t\t\tonValueChange={(values) => {\n\t\t\t\tonChange(values?.value || '');\n\t\t\t}}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t\tmask='_'\n\t\t/>\n\t);\n}","import { Autocomplete, TextField } from '@mui/material'\nimport React from 'react'\nimport { useController } from 'react-hook-form';\n\nexport function AutoCompleteHook({\n  multiple,\n  options,\n  name,\n  control,\n  defaultValue,\n  rules = { required: '* Campo requerido' },\n  isOptionEqualToValue,\n  getOptionLabel,\n  helperText,\n  disabled,\n  ...rest\n}) {\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  return (\n    <Autocomplete\n\t\t\t{...inputProps}\n\t\t\tonChange={(e, newValue) => {\n\t\t\t\tonChange(newValue);\n\t\t\t}}\n\t\t\tmultiple={multiple}\n\t\t\toptions={options}\n\t\t\tnoOptionsText='No hay resultados'\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disabled={disabled}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\terror={invalid}\n\t\t\t\t\thelperText={error ? error.message : helperText}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\n\n// MUI\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\n\n// Form\nimport { useController } from \"react-hook-form\";\nimport useAsyncDebounce from '../../../hooks/useAsyncDebounce';\n\nexport function AutoCompleteAsyncHook({\n  name,\n  control,\n  rules = null, \n  data = [],\n\tdefaultValue = '',\n  helperText = '',\n  getOptionLabel,\n  isOptionEqualToValue,\n  multiple,\n  handleRequest,\n  disabled,\n  renderOption,\n  renderTags,\n  limitTags,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasFinish, setHasFinish] = useState(true);\n  const loading = hasFinish && (open && options.length === 0);\n\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let active = true;\n\n    const request = async () => {\n      await handleRequest(inputValue);\n    }\n\n    if (!loading) {\n      return undefined;\n    }\n\n    if (active) {\n      request();\n    }\n\n    return () => {\n      active = false;\n    };\n\n    // eslint-disable-next-line\n  }, [loading]);\n\n\n  // NOTA(RECKER): Reset\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setHasFinish(true);\n    }\n\n    // eslint-disable-next-line\n  }, [open]);\n\n  // NOTA(RECKER): Actualizar options\n  useEffect(() => {\n    if (data !== null) {\n      setOptions(data);\n      setHasFinish(false);\n    }\n  }, [data]);\n\n  // NOTA(REKCER): Refresh data\n  // eslint-disable-next-line\n\tconst refreshResults = useCallback(\n\t\tuseAsyncDebounce(() => {\n      setOptions([]);\n      setHasFinish(true);\n\t\t},500),\n\t[]);\n\n  return (\n    <Autocomplete\n      multiple={multiple}\n      id={`autocomplete-${name}`}\n      options={options}\n      open={open}\n      onOpen={() => {\n\t\t\t\tsetOpen(true);\n        setHasFinish(true);\n\t\t\t}}\n\t\t\tonClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n      onChange={(e,value) => {\n        onChange(value);\n      }}\n      inputValue={inputValue}\n      onInputChange={(e, newValue) => {\n\t\t\t\tsetInputValue(newValue);\n        if (e?.type === 'change') {\n          refreshResults();\n        }\n\t\t\t}}\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      loading={loading}\n      loadingText='Cargando...'\n\t\t\tnoOptionsText='No hay resultados'\n      renderTags={renderTags}\n      disabled={disabled}\n      renderOption={renderOption}\n      limitTags={limitTags}\n      renderInput={(params) => (\n        <TextField \n          {...params}\n          {...inputProps}\n          {...rest}\n          inputRef={ref}\n          error={Boolean(error)}\n          helperText={error ? error.message : helperText}\n          InputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress color='inherit' size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n        />\n      )}\n    />\n  )\n}\n","export default function useAsyncDebounce(callback, delay) {\n\tlet timer;\n\t\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => callback(...args), delay)\n\t}\n}","import React from 'react';\n\nimport {\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tFormHelperText,\n} from '@mui/material';\n\nimport { useController } from \"react-hook-form\";\n\nexport function SelectHook({\n\tname,\n\tlabel,\n\tcontrol,\n\thelperText = '',\n\tdefaultValue = '',\n\trules = { required: '* Campo requerido' },\n\tchildren,\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<FormControl\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t>\n\t\t\t<InputLabel id={name + '-label'}>{label}</InputLabel>\n\t\t\t<Select labelId={name + '-label'} label={label} id={name} {...inputProps}>\n\t\t\t\t{children}\n\t\t\t</Select>\n\t\t\t<FormHelperText>{error ? error.message : helperText}</FormHelperText>\n\t\t</FormControl>\n\t);\n}","import React from 'react';\n\nimport {\n\tFormControlLabel,\n\tSwitch,\n} from '@mui/material';\n\nimport { useController } from \"react-hook-form\";\n\nexport function SwitchHook({ \n\tlabel, \n\tname, \n\tcontrol, \n\tdefaultValue = false,\n\tlabelPlacement = 'end', \n\t...rest\n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n  } = useController({\n    name,\n    control,\n    defaultValue: defaultValue,\n  });\n\t\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Switch\n\t\t\t\t\t{...rest}\n\t\t\t\t\t{...inputProps}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\tonChange={e => onChange(e.currentTarget.checked)}\n\t\t\t\t\tchecked={value}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t\tsx={{userSelect: 'none'}}\n\t\t\tlabelPlacement={labelPlacement}\n\t\t/>\n\t);\n}","import { useEffect } from \"react\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetNotistack } from \"../store/slices/notistack\";\nimport { logoutApp } from \"../store/slices/auth\";\n\nexport default function useNotifier({\n  messageTo200 = true,\n  messageTo400 = true,\n  message400 = false,\n  messageTo404 = true,\n  message404 = 'Ruta URL no encontrada',\n  messageTo422 = true,\n  message422 = 'Error al verificar los datos',\n} = {}) {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { notiText, notiStatus, notiVariant } = useSelector((state) => state.notistack);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (notiStatus === 200 || notiStatus === 201) {\n      messageTo200 &&\n        enqueueSnackbar(notiText, {\n          variant: notiVariant,\n        });\n    } else if (notiStatus === 400) {\n      messageTo400 &&\n        enqueueSnackbar(message400 ? message400 : notiText, {\n          variant: \"warning\",\n        });\n    }else if (notiStatus === 401) {\n      enqueueSnackbar(\"Sesión expirada\", {\n        variant: \"info\",\n      });\n\n      dispatch(logoutApp());\n    } else if (notiStatus === 403) {\n      enqueueSnackbar(\"No tienes permisos para esta acción\", {\n        variant: \"error\",\n      });\n    } else if (notiStatus === 404) {\n      messageTo404 &&\n        enqueueSnackbar(notiText ? notiText : message404, {\n          variant: \"warning\",\n        });\n    } else if (notiStatus === 422) {\n      messageTo422 &&\n        enqueueSnackbar(message422, {\n          variant: \"error\",\n        });\n    }else if (notiStatus === 429) {\n      enqueueSnackbar(\"Demasiadas peticiones\", {\n        variant: \"info\",\n      });\n\n      dispatch(logoutApp());\n    } else if (notiStatus === 500) {\n      enqueueSnackbar(\"No se ha podido conectar con la base de datos\", {\n        variant: \"error\",\n      });\n    } else if (notiStatus === \"offline\") {\n      enqueueSnackbar(\"Revise su conexión a internet\", {\n        variant: \"error\",\n      });\n    }\n\n    return () => {\n      dispatch(resetNotistack());\n    };\n  }, [\n    notiText,\n    notiStatus,\n    notiVariant,\n    dispatch,\n    enqueueSnackbar,\n    messageTo200,\n    messageTo400,\n    message400,\n    messageTo404,\n    message404,\n    messageTo422,\n    message422,\n  ]);\n}\n","import React from 'react';\n\nimport { \n\tTypography,\n\tButton,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// Components\nimport TourComponent from '../../../components/TourComponent';\n\nexport default function TourLotesDeudas() {\n\tconst theme = useTheme();\n\t\n\tconst steps = [\n\t\t{\n\t\t\tselector: '',\n\t\t\tcontent: ({goTo}) => (\n\t\t\t\t<div>\n\t\t\t\t\t<Typography color='primary' className='text__bold--big' variant='h5'>\n\t\t\t\t\t\tLotes de deudas\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\t\tEn esta sección podrá <strong>administrar</strong> los <strong>lotes de deudas</strong> dentro del sistema, lo cuál le permite asignarle distintas deudas a los estudiantes registrados en el sistema.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button size='small' color='primary' onClick={()=>{goTo(10)}}>\n\t\t\t\t\t\tSaltar tour\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"create-lote-deuda\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEste botón le permite <strong>crear un lote de deudas</strong> en el sistema.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"verify-solvencia\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEste botón le permite <strong>verificar la solvencia</strong> de un estudiante en el sistema.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"table\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tAquí podrá visualizar los <strong>lotes de deudas creados</strong> en el sistema.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"gdTable__search\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tPuede <strong>buscar</strong> los lotes de deudas que desee utilizándo el <strong>ID o el motivo</strong>.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"table-Id\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEn esta columna puede <strong>visualizar</strong> el <strong>ID</strong> que tiene el lote de deudas <strong>en el sistema</strong>.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"table-Motivo\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEn esta columna puede <strong>visualizar</strong> el <strong>motivo</strong> por el cuál se ha creado este lote de deuda.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"table-Monto a pagar\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEn esta columna puede <strong>visualizar</strong> el <strong>monto a pagar</strong>, este puede estar representado en Bs. o en $, todo depende de qué tipo de moneda esté usando el lote de dueda.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"table-Fecha\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEn esta columna puede <strong>visualizar</strong> la <strong>fecha</strong> en la que se creó el lote de deuda.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"table-Opciones\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tEn esta columna puede <strong>visualizar</strong> las <strong>opciones disponibles</strong> que puede hacer con un lote de deudas. En estos momentos usted puede <strong>ver</strong> más información, <strong>editar</strong>, o <strong>eliminar</strong> un lote de deudas.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tCon esto finaliza esta guía, navegue entre otras partes del sistema para encontrar más guías.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t}\n\t];\n\t\n\treturn (\n\t\t<TourComponent select='lotes_deudas' steps={steps} />\n\t);\n}","import React, { useMemo, useEffect } from 'react';\n\n// Router\nimport { useNavigate } from 'react-router-dom';\n\n// MUI\nimport { IconButton, Tooltip } from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\n// Components\nimport ReactTableBase from '../../../components/ReactTableBase';\nimport { parseFloatToMoneyString } from '../../../components/Utils/ParseString';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport { refresh, resetTableConfig, setConfigTable, setSearch } from '../../../store/slices/tablesWallet';\nimport { setRequestStatus } from '../../../store/slices/requestStatusWallet';\nimport { getLotesDeudas } from '../../../store/slices/tablesWallet/async_trunk/lotes_deudas/TableLotesDeudas';\n\nexport default function Table() {\n  const { dataR, loading, pageSize, pageCount, administrar_transac } = useSelector(state => ({\n    dataR: state.tablesWallet.lotes_deudas.tableData.data,\n    loading: state.tablesWallet.lotes_deudas.tableData.loading,\n    pageSize: state.tablesWallet.lotes_deudas.tableData.pageSize,\n    pageCount: state.tablesWallet.lotes_deudas.tableData.pageCount,\n    administrar_transac: state.auth.permissions.administrar_transac,\n  }));\n  const { debt_lote_delete, debt_lote_edit } = administrar_transac;\n  const dispatch = useDispatch();\n\n  const navigate = useNavigate();\n\n  const columns = useMemo(() => [\n    {\n      Header: 'Id',\n      accessor: 'id',\n    },\n    {\n      Header: 'Motivo',\n      accessor: 'reason',\n    },\n    {\n      Header: 'Monto a pagar',\n      accessor: 'amount_to_pay',\n      Cell: ({ cell: { row: { original: { amount_to_pay, exchange_amount, exchange_rate } } } }) => {\n        if (exchange_rate?.type === 'USD') {\n          return parseFloatToMoneyString(exchange_amount, '$ ');\n        }else {\n          return parseFloatToMoneyString(amount_to_pay);\n        }\n      },\n    },\n    {\n      Header: 'Fecha',\n      accessor: 'created_at',\n    },\n    {\n      Header: 'Importante',\n      accessor: 'important',\n      Cell: ({ value }) => {\n        if (value) {\n          return 'Si';\n        }else {\n          return 'No';\n        }\n      },\n    },\n    {\n      id: 'options',\n      Header: 'Opciones',\n      accessor: 'options',\n      Cell: ({ cell: { row: { original } } }) => (\n        <>\n          <Tooltip title='Ver' arrow>\n            <IconButton\n              onClick={() => {\n                navigate(`ver/${original.id}`);\n              }}\n            >\n              <VisibilityIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Editar' arrow>\n            <IconButton\n              disabled={!debt_lote_edit}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: original, select: 'editLoteDeuda'}));\n              }}\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Eliminar' arrow>\n            <IconButton\n              disabled={!debt_lote_delete}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: original, select: 'deleteLoteDeuda'}));\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      )\n    },\n    // eslint-disable-next-line\n  ],[]);\n\n  const data = useMemo(() => dataR, [dataR]);\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let promise = null;\n\n    if (loading) {\n      promise = dispatch(getLotesDeudas());\n    }\n\n    return () => {\n      if (loading) {\n        promise.abort(); \n      }\n    }\n    // eslint-disable-next-line\n  }, [loading]);\n\n  // NOTA(RECKER): Reinicar config al desmontar\n  useEffect(() => {\n    return () => {\n      dispatch(resetTableConfig({ select: 'lotes_deudas' }));\n    }\n    // eslint-disable-next-line\n  },[]);\n\n  const handleGlobalFilter = value => {\n    dispatch(setSearch({search: value || \"\", select: 'lotes_deudas'}));\n  }\n\n  const handleChange = value => {\n    dispatch(setConfigTable({ ...value, select: 'lotes_deudas' }));\n  }\n\n  const handleRefresh = () => {\n    dispatch(refresh({ select: 'lotes_deudas' }));\n  }\n\n  return (\n    <ReactTableBase\n      title='Lotes de deudas'\n      data-tour='table'\n      data={data}\n      columns={columns}\n      pageCountData={pageCount}\n      pageSizeData={pageSize}\n      loading={loading}\n      handleGlobalFilter={handleGlobalFilter}\n      handleChange={handleChange}\n      refresh={handleRefresh}\n    />\n  )\n}","import React from 'react';\n\n// Router\nimport { NavLink } from 'react-router-dom';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Link, MenuItem, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n// Form\nimport { useForm } from 'react-hook-form';\n\n// Components\nimport AnimationDialog from '../../../components/AnimationDialog';\nimport { SelectHook } from '../../../components/form/select';\nimport { AutoCompleteAsyncHook, InputHook, InputMaskHook } from '../../../components/form/inputs';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../store/slices/requestStatusWallet';\nimport { getUserSelectedWithoutDebt } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/getUserSelectedWithoutDebt';\nimport { editLoteDebts } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/editLoteDebts';\nimport { getCursos } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/getCursos';\n\nexport default function EditLoteDeuda() {\n  const { loading, open, data, dataSelected, dataCursos, administrar_transac } = useSelector(state => ({\n    loading: state.requestStatusWallet.editLoteDeuda.loading,\n    open: state.requestStatusWallet.editLoteDeuda.open,\n    data: state.requestStatusWallet.editLoteDeuda.data,\n    dataSelected: state.requestStatusWallet.editLoteDeuda.dataSelected,\n    dataCursos: state.requestStatusWallet.editLoteDeuda.dataCursos,\n    administrar_transac: state.auth.permissions.administrar_transac,\n  }));\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const { control, watch, handleSubmit } = useForm({\n\t\tshouldUnregister: true,\n\t});\n\n  const handleGetSelectedWithoutDebt = async (search) => {\n    await dispatch(getUserSelectedWithoutDebt({ search, id: data.id }));\n  }\n\n  const handleGetCurso = async (valueInput) => {\n    await dispatch(getCursos(valueInput));\n  }\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({ select: 'editLoteDeuda', open: false }));\n  }\n\n  const onSubmit = submitData => {\n    // NOTA(RECKER): Acomodar arrays\n\t\tif (submitData.selected_users) {\n\t\t\tconst users = submitData.selected_users.map(obj => obj.id);\n\t\t\tsubmitData.selected_users = users;\n\t\t}else if (submitData.cursos) {\n\t\t\tconst cursos = submitData.cursos.map(obj => obj.id);\n\t\t\tsubmitData.cursos = cursos;\n\t\t}\n\n    submitData._method = 'PUT';\n\n    dispatch(editLoteDebts({ submitData, id: data.id }));\n  }\n  \n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n      fullScreen={fullScreen}\n    >\n      <DialogTitle >Editar lote de deuda #{data.id}</DialogTitle>\n      <DialogContent>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<DialogContentText>\n                NOTA: Al usar otra moneda que no sea el bolivar, el sistema convertirá a bolívares el equivalente al precio actual registrado en el sistema, para más información vaya <Link component={NavLink} to='/gedure/preguntas-frecuentes'>aquí</Link>.\n              </DialogContentText>\n\t\t\t\t\t\t</Grid>\n            <Grid sx={{mt: 4}} item xs={12}>\n              <Typography color='text.secondary'>\n                Configuraciones\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='important'\n\t\t\t\t\t\t\t\tlabel='Deuda importante'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tdefaultValue={Boolean(data.important)}\n\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\thelperText='Seleccione la importancia de la deuda'\n\t\t\t\t\t\t\t\trules={null}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value={false}>No</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={true}>Si</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='exchange_rate_type'\n\t\t\t\t\t\t\t\tlabel='Tipo de moneda'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n\t\t\t\t\t\t\t\thelperText='Seleccione la moneda que desea usar para esta deuda'\n                defaultValue={data.exchange_rate_id !== null ? '$' : 'Bs.'}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value='$'>USD</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='Bs.'>Bs.</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n            <Grid sx={{mt: 4}} item xs={12}>\n              <Typography color='text.secondary'>\n                Datos de la deuda\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<InputHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tminLength: { value: 6, message: 'Error: Demaciado corto' },\n\t\t\t\t\t\t\t\t\tmaxLength: { value: 100, message: 'Error: Demaciado largo' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='reason'\n\t\t\t\t\t\t\t\tlabel='Motivo'\n\t\t\t\t\t\t\t\thelperText='Ingrese el motivo de la deuda'\n\t\t\t\t\t\t\t\tdefaultValue={data.reason}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12} sm={administrar_transac.debt_create ? 6 : 12}>\n\t\t\t\t\t\t\t<InputMaskHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tmin: { value: 0, message: 'Error: El monto debe ser mayor a 0' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='amount_to_pay'\n\t\t\t\t\t\t\t\tlabel='Monto a pagar'\n\t\t\t\t\t\t\t\thelperText='Ingrese el monto a pagar de la deuda'\n\t\t\t\t\t\t\t\tfullWidth\n                size='small'\n\t\t\t\t\t\t\t\tdisabled={loading}\n                decimalScale={2}\n                thousandSeparator='.'\n                decimalSeparator=','\n                defaultValue={data.exchange_rate_id !== null ? data.exchange_amount : data.amount_to_pay}\n                allowNegative={false}\n\t\t\t\t\t\t\t\tprefix={watch('exchange_rate_type') ? watch('exchange_rate_type')+' ' : data.exchange_rate?.type === 'USD' ? '$ ' : 'Bs. '}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            {administrar_transac.debt_create && (\n              <>\n                <Grid item xs={12} sm={6}>\n                  <SelectHook\n                    name='type'\n                    label='Deuda para'\n                    control={control}\n                    disabled={loading}\n                    helperText='Seleccione a los estudiantes que recibirán esta deuda'\n                    size='small'\n                    rules={{}}\n                    fullWidth\n                  >\n                    <MenuItem value=''><em>Ninguno</em></MenuItem>\n                    <MenuItem value='all_studiends'>Todos los estudiantes</MenuItem>\n                    <MenuItem value='selected'>Estudiantes seleccionados</MenuItem>\n                    <MenuItem value='cursos'>Cursos</MenuItem>\n                  </SelectHook>\n                </Grid>\n                \n                {watch('type') === 'selected' && (\n                  <Grid item xs={12}>\n                    <Grid item xs={12}>\n                      <AutoCompleteAsyncHook\n                        data={dataSelected}\n                        multiple\n                        name='selected_users'\n                        label='Agregar estudiantes'\n                        helperText='Ingrese a los estudiantes que desea agregar a esta deuda'\n                        placeholder=\"Cédula\"\n                        control={control}\n                        disabled={loading}\n                        getOptionLabel={(option) => (`${option.privilegio}${option.username} - ${option.name}`) || ''}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        limitTags={2}\n                        handleRequest={handleGetSelectedWithoutDebt}\n                        rules={{\n                          required: { value: true, message: '* Campo requerido' },\n                          validate: value => value.length > 0 || 'Error: Debe de seleccionar al menos a 1 usuario',\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n\n                {watch('type') === 'cursos' && (\n                  <Grid item xs={12}>\n                    <AutoCompleteAsyncHook\n                      data={dataCursos}\n                      multiple\n                      label='Buscar cursos'\n                      name='cursos'\n                      handleRequest={handleGetCurso}\n                      getOptionLabel={(option) => option.code}\n                      isOptionEqualToValue={(option, value) => option.code === value.code}\n                      limitTags={2}\n                      placeholder='Código'\n                      control={control}\n                      disabled={loading}\n                      rules={{\n                        required: { value: true, message: '* Campo requerido' },\n                        validate: value => value.length > 0 || 'Error: Debe de seleccionar al menos a 1 usuario',\n                      }}\n                    />\n                  </Grid>\n                )}\n              </>\n\t\t\t\t\t\t)}\n          </Grid>\n          <input type='submit' hidden />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleClose}\n          color='inherit'\n        >\n          Cancelar\n        </Button>\n        <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} variant=\"text\" color=\"inherit\">\n          Actualizar\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\n\n// Router\nimport { NavLink } from 'react-router-dom';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, Link, MenuItem, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n// Form\nimport { useForm } from \"react-hook-form\";\nimport { AutoCompleteAsyncHook, InputHook, InputMaskHook } from '../../../components/form/inputs';\nimport { SelectHook } from '../../../components/form/select';\nimport { SwitchHook } from '../../../components/form/switch';\n\n// Components\nimport AnimationDialog from '../../../components/AnimationDialog';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../store/slices/requestStatusWallet';\nimport { getUserSelected } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/getUserSelected';\nimport { getCursos } from '../../../store/slices/requestStatus/async_trunk/users/getCursos';\nimport { createLoteDebts } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/createLoteDebts';\n\nexport default function CreateLoteDeuda() {\n  const { loading, open, dataUserSelected, dataCurso } = useSelector(state => ({\n    loading: state.requestStatusWallet.createLoteDeuda.loading,\n    open: state.requestStatusWallet.createLoteDeuda.open,\n    dataUserSelected: state.requestStatusWallet.createLoteDeuda.dataUserSelected,\n    dataCurso: state.requestStatus.createUser.data,\n  }));\n  const dispatch = useDispatch();\n\n\tconst theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const { control, watch, handleSubmit } = useForm({\n\t\tshouldUnregister: true,\n\t});\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({ select: 'createLoteDeuda', open: false }));\n  }\n\n  const handleGetSelected = async (valueInput) => {\n    await dispatch(getUserSelected(valueInput));\n  }\n\n  const handleGetCurso = async (valueInput) => {\n    await dispatch(getCursos(valueInput));\n  }\n\n  const onSubmit = submitData => {\n    // NOTA(RECKER): Acomodar arrays\n\t\tif (submitData.selected_users) {\n\t\t\tconst users = submitData.selected_users.map(obj => obj.id);\n\t\t\tsubmitData.selected_users = users;\n\t\t}else if (submitData.cursos) {\n\t\t\tconst cursos = submitData.cursos.map(obj => obj.id);\n\t\t\tsubmitData.cursos = cursos;\n\t\t}\n\n    dispatch(createLoteDebts({ submitData, handleClose }));\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n\t\t\tfullScreen={fullScreen}\n    >\n      <DialogTitle>Crear lote de deudas</DialogTitle>\n      <DialogContent>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<DialogContentText>\n                NOTA: Al usar otra moneda que no sea el bolivar, el sistema convertirá a bolívares el equivalente al precio actual registrado en el sistema, para más información vaya <Link component={NavLink} to='/gedure/preguntas-frecuentes'>aquí</Link>.\n              </DialogContentText>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid sx={{mt: 4}} item xs={12}>\n              <Typography color='text.secondary'>\n                Configuraciones\n              </Typography>\n            </Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='important'\n\t\t\t\t\t\t\t\tlabel='Deuda importante'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tdefaultValue={false}\n\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\thelperText='Seleccione la importancia de la deuda'\n\t\t\t\t\t\t\t\trules={null}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value={false}>No</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value={true}>Si</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='exchange_rate_type'\n\t\t\t\t\t\t\t\tlabel='Tipo de moneda'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n\t\t\t\t\t\t\t\thelperText='Seleccione la moneda que desea usar para esta deuda'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t>\n                <MenuItem value=''><em>Ninguno</em></MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='$'>USD</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='Bs.'>Bs.</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid sx={{mt: 4}} item xs={12}>\n              <Typography color='text.secondary'>\n                Datos de la deuda\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<InputHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tminLength: { value: 6, message: 'Error: Demaciado corto' },\n\t\t\t\t\t\t\t\t\tmaxLength: { value: 100, message: 'Error: Demaciado largo' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='reason'\n\t\t\t\t\t\t\t\tlabel='Motivo'\n                size='small'\n\t\t\t\t\t\t\t\thelperText='Ingrese el motivo de la deuda'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<InputMaskHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tmin: { value: 0, message: 'Error: El monto debe ser mayor a 0' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='amount_to_pay'\n\t\t\t\t\t\t\t\tlabel='Monto a pagar'\n\t\t\t\t\t\t\t\thelperText='Ingrese el monto a pagar de la deuda'\n\t\t\t\t\t\t\t\tfullWidth\n                size='small'\n\t\t\t\t\t\t\t\tdisabled={loading || !watch('exchange_rate_type')?.length}\n                decimalScale={2}\n                thousandSeparator='.'\n                decimalSeparator=','\n                allowNegative={false}\n\t\t\t\t\t\t\t\tprefix={watch('exchange_rate_type')+' '}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12} sm={6}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='type'\n\t\t\t\t\t\t\t\tlabel='Deuda para'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\thelperText='Seleccione a los estudiantes que recibirán esta deuda'\n                size='small'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=''><em>Ninguno</em></MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='all_studiends'>Todos los estudiantes</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='selected'>Estudiantes seleccionados</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='cursos'>Cursos</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n\n            {watch('type') === 'selected' && (\n\t\t\t\t\t\t\t<Grid item xs={12}>\n                <AutoCompleteAsyncHook\n                  data={dataUserSelected}\n                  multiple\n                  name='selected_users'\n                  label='Buscar estudiantes'\n                  control={control}\n                  disabled={loading}\n                  getOptionLabel={(option) => (`${option.privilegio}${option.username} - ${option.name}`) || ''}\n                  isOptionEqualToValue={(option, value) => option.id === value.id}\n                  limitTags={2}\n                  placeholder=\"Cédula\"\n                  handleRequest={handleGetSelected}\n                  rules={{\n                    required: { value: true, message: '* Campo requerido' },\n                    validate: value => value.length > 0 || 'Error: Debe de seleccionar al menos a 1 usuario',\n                  }}\n                />\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n\n            {watch('type') === 'cursos' && (\n\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<AutoCompleteAsyncHook\n                  data={dataCurso}\n\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\tlabel='Buscar cursos'\n\t\t\t\t\t\t\t\t\tname='cursos'\n\t\t\t\t\t\t\t\t\thandleRequest={handleGetCurso}\n\t\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.code}\n                  isOptionEqualToValue={(option, value) => option.code === value.code}\n                  limitTags={2}\n                  placeholder='Código'\n\t\t\t\t\t\t\t\t\tcontrol={control}\n                  disabled={loading}\n\t\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\t\trequired: { value: true, message: '* Campo requerido' },\n\t\t\t\t\t\t\t\t\t\tvalidate: value => value.length > 0 || 'Error: Debe de seleccionar al menos a 1 usuario',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t)}\n          </Grid>\n\t\t\t\t\t<input type='submit' hidden />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <SwitchHook\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tname='create_more'\n\t\t\t\t\tlabel=\"Crear más de uno\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t/>\n        <Button\n\t\t\t\t\tsx={{ml: 1}}\n          onClick={handleClose}\n          color='inherit'\n        >\n          Cancelar\n        </Button>\n        <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} variant=\"text\" color=\"inherit\">\n          crear\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\n\n// MUI\nimport { Box, Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Table, TableBody, TableCell, TableHead, TableRow, Typography } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n// Components\nimport AnimationDialog from '../../../components/AnimationDialog';\nimport { parseFloatToMoneyString } from '../../../components/Utils/ParseString';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { AutoCompleteAsyncHook } from '../../../components/form/inputs';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../store/slices/requestStatusWallet';\nimport { getSolvencia } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/getSolvencia';\n\nconst colorChip = {\n  'no pagada': 'error',\n  'pagada': 'success',\n  'exonerada': 'info',\n}\n\nexport default function VerifySolvencia() {\n  const { loading, open, dataUserSelected } = useSelector(state => ({\n    loading: state.requestStatusWallet.verifySolvencia.loading,\n    open: state.requestStatusWallet.verifySolvencia.open,\n    dataUserSelected: state.requestStatusWallet.verifySolvencia.dataUserSelected,\n  }));\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const { control, handleSubmit, watch } = useForm({\n\t\tshouldUnregister: true,\n\t});\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({ select: 'verifySolvencia', open: false }));\n  }\n\n  const handleGetUser = async (valueInput) => {\n    await dispatch(getSolvencia(valueInput));\n  }\n\n  const onSubmit = submitData => {\n    console.log(submitData);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n\t\t\tfullScreen={fullScreen}\n      fullWidth\n    >\n      <DialogTitle>Verificar solvencia</DialogTitle>\n      <DialogContent>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Typography color='text.secondary'>\n                Usuario seleccionado\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <AutoCompleteAsyncHook\n                data={dataUserSelected}\n                label='Buscar estudiante'\n                name='user'\n                handleRequest={handleGetUser}\n                getOptionLabel={(option) => option.username || ''}\n                renderOption={(props, option) => (\n                  <Box component=\"li\" {...props}>\n                    {option.privilegio}{option.username} - {option.name}\n                  </Box>\n                )}\n                isOptionEqualToValue={(option, value) => option.id === value.id}\n                placeholder='Cédula'\n                control={control}\n                disabled={loading}\n                rules={{\n                  required: { value: true, message: '* Campo requerido' },\n                }}\n              />\n            </Grid>\n\n            <Grid sx={{mt: 4}} item xs={12}>\n              <Typography color='text.secondary'>\n                Información de estado\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography>\n                Estado en el sistema\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: watch('user')?.is_solvente ? 'success.main' : 'error.main' }}>\n                {watch('user')?.is_solvente ? 'Solvente' : 'No solvente'}\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography>\n                Total de deudas\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\n                {watch('user')?.debts_count ? watch('user')?.debts_count : 0} deuda(s)\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography>\n                Deudas pagadas\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\n                {watch('user')?.debts_pagas_count ? watch('user')?.debts_pagas_count : 0} deuda(s)\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography>\n                Deudas no pagadas\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\n                {watch('user')?.debts_no_pagadas_count ? watch('user')?.debts_no_pagadas_count : 0} deuda(s)\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12} sm={6} md={4}>\n              <Typography>\n                Deudas exoneradas\n              </Typography>\n              <Typography variant=\"body2\" sx={{ color: \"text.secondary\" }}>\n                {watch('user')?.debts_exoneradas_count ? watch('user')?.debts_exoneradas_count : 0} deuda(s)\n              </Typography>\n            </Grid>\n\n            <Grid sx={{mt: 4}} item xs={12}>\n              <Typography color='text.secondary'>\n                Deudas no pagadas\n              </Typography>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Table size=\"small\" aria-label=\"table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Deuda</TableCell>\n                    <TableCell>Estado</TableCell>\n                    <TableCell>Monto</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {watch('user')?.debts && watch('user')?.debts.map((item, i) => (\n                    <TableRow key={i}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.debt_lote.reason}\n                      </TableCell>\n                      <TableCell>\n                        <Chip\n                          color={colorChip[item.status]}\n                          variant='outlined'\n                          label={item.status}\n                        />\n                      </TableCell>\n                      <TableCell>{parseFloatToMoneyString(item.debt_lote.amount_to_pay)}</TableCell>\n                    </TableRow>\n                  ))}\n                  {(!watch('user')?.id || watch('user')?.debts.length === 0) && (\n                    <TableRow>\n                      <TableCell component=\"th\" scope=\"row\" colSpan={3} sx={{textAlign: 'center'}}>\n                        No hay resultados\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={handleClose}\n          color='inherit'\n        >\n          Entendido\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\n\n// MUI\nimport { Box, Button, Container, Grid } from '@mui/material';\n\n// Components\nimport TourLotesDeudas from './TourLotesDeudas';\nimport DialogConfirmation from '../../../components/DialogConfirmation';\nimport useNotifier from '../../../hooks/useNotifier';\nimport Table from './Table';\nimport EditLoteDeuda from './EditLoteDeuda';\nimport CreateLoteDeuda from './CreateLoteDeuda';\nimport VerifySolvencia from './VerifySolvencia';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../store/slices/requestStatusWallet';\nimport { destroyLoteDebts } from '../../../store/slices/requestStatusWallet/async_trunk/lotes_deudas/destroyLoteDebts';\n\nconst classes = {\n  container: {\n    flexGrow: 1,\n    paddingBottom: 6,\n    marginTop: { xs: \"80px\", sm: 12 },\n  },\n};\n\nexport default function LotesDeudas() {\n  useNotifier();\n\n  const { administrar_transac: { debt_lote_create }, count_notify } = useSelector((state) => ({\n    administrar_transac: state.auth.permissions.administrar_transac,\n    count_notify: state.auth.notify.count,\n  }));\n  const dispatch = useDispatch();\n\n  // NOTA(RECKER): Title\n  document.title = count_notify > 0 ? `(${count_notify}) Lotes de deudas - La Candelaria` : 'Lotes de deudas - La Candelaria';\n\n  const handleOpenCreate = () => {\n    dispatch(setRequestStatus({ select: 'createLoteDeuda', open: true }));\n  }\n\n  const handleOpenVerify = () => {\n    dispatch(setRequestStatus({ select: 'verifySolvencia', open: true }));\n  }\n\n  return (\n    <Box component=\"main\" sx={classes.container}>\n      <Container>\n        <Box fontSize=\"h4.fontSize\" mb={3} className=\"text__bold--big\">\n          Lotes de deudas\n        </Box>\n        <Grid container spacing={2}>\n          <Grid container spacing={1} justifyContent=\"flex-end\" item xs={12}>\n            <Grid item>\n              <Button \n                variant=\"contained\"\n                onClick={handleOpenVerify}\n                data-tour=\"verify-solvencia\"\n              >\n                Verificar solvencia\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button \n                variant=\"contained\" \n                onClick={handleOpenCreate} \n                disabled={!debt_lote_create}\n                data-tour=\"create-lote-deuda\"\n              >\n                Crear lote de deudas\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid item xs={12}>\n            <Table />\n          </Grid>\n        </Grid>\n        <CreateLoteDeuda />\n        <EditLoteDeuda />\n        <VerifySolvencia />\n        <DialogConfirmation \n          rdx1='requestStatusWallet' \n          rdx2='deleteLoteDeuda'\n          close={\n            setRequestStatus({open: false, select: 'deleteLoteDeuda'})\n          }\n          request={\n            data => destroyLoteDebts(data.id)\n          }\n        >\n          {(dataR) => (<span>Está a punto de eliminar el lote de deuda <strong>{dataR.reason} (#{dataR.id})</strong>. Una vez realizada no se podrá deshacer esta acción.</span>)}\n        </DialogConfirmation>\n      </Container>\n      <TourLotesDeudas />\n    </Box>\n  )\n}\n"],"names":["AnimationDialog","React","props","ref","direction","DialogConfirmation","rdx1","rdx2","close","request","children","useSelector","state","open","loading","data","dispatch","useDispatch","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","TransitionComponent","id","disabled","onClick","color","GlobalFilter","setGlobalFilter","gotoPage","dataTourGlobal","useState","globalFilter","value","setValue","onDebounce","useAsyncDebounce","undefined","TextField","size","placeholder","variant","autoComplete","onChange","event","target","sx","mr","InputProps","startAdornment","InputAdornment","position","Search","endAdornment","IconButton","Clear","IndeterminateCheckbox","indeterminate","rest","defaultRef","resolvedRef","current","Checkbox","type","ReactTableBase","columns","pageSizeData","pageCountData","handleGlobalFilter","handleChange","filter","massiveOptions","title","refresh","dataTourMassive","tableInstance","useTable","initialState","hiddenColumns","pageSize","pageIndex","manualPagination","pageCount","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","selectedFlatRows","allColumns","canPreviousPage","canNextPage","nextPage","previousPage","setPageSize","pageOptions","useEffect","Grid","container","spacing","item","xs","Paper","Backdrop","zIndex","appBar","CircularProgress","Toolbar","length","bgcolor","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","component","noWrap","map","d","original","Tooltip","arrow","column","toggleHidden","Group","Refresh","TableContainer","Box","overflow","minWidth","Table","TableHead","th","border","headerGroup","TableRow","td","getHeaderGroupProps","headers","TableCell","padding","getHeaderProps","render","align","TableBody","height","getRowProps","cells","cell","getCellProps","colSpan","textAlign","TableFooter","justifyContent","alignItems","Select","labelId","label","e","Number","MenuItem","FirstPage","NavigateBefore","fontSize","NavigateNext","LastPage","steps","select","version","tourOpen","configs","tour","isOpen","disableInteraction","onAfterOpen","document","body","style","overflowY","onBeforeClose","showNavigationNumber","showCloseButton","rounded","lastStepNextButton","updateTour","InputHook","name","control","rules","defaultValue","helperText","useController","field","inputProps","fieldState","invalid","error","inputRef","message","InputPasswordHook","visibility","setVisibility","InputMaskHook","format","parseFloat","customInput","onValueChange","values","mask","AutoCompleteHook","multiple","options","required","isOptionEqualToValue","getOptionLabel","Autocomplete","newValue","noOptionsText","renderInput","params","AutoCompleteAsyncHook","handleRequest","renderOption","renderTags","limitTags","setOpen","setOptions","inputValue","setInputValue","hasFinish","setHasFinish","active","refreshResults","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","onOpen","onClose","onInputChange","loadingText","Boolean","SelectHook","SwitchHook","labelPlacement","currentTarget","checked","userSelect","useNotifier","messageTo200","messageTo400","message400","messageTo404","message404","messageTo422","message422","useSnackbar","enqueueSnackbar","notistack","notiText","notiStatus","notiVariant","logoutApp","resetNotistack","TourLotesDeudas","selector","content","goTo","className","Button","backgroundColor","background","paper","TourComponent","dataR","tablesWallet","lotes_deudas","tableData","administrar_transac","auth","permissions","debt_lote_delete","debt_lote_edit","navigate","useNavigate","useMemo","accessor","amount_to_pay","exchange_amount","exchange_rate","parseFloatToMoneyString","Visibility","setRequestStatus","Edit","DeleteForever","promise","getLotesDeudas","abort","resetTableConfig","setSearch","search","setConfigTable","EditLoteDeuda","requestStatusWallet","editLoteDeuda","dataSelected","dataCursos","useForm","shouldUnregister","watch","handleSubmit","handleGetSelectedWithoutDebt","getUserSelectedWithoutDebt","handleGetCurso","valueInput","getCursos","onSubmit","submitData","selected_users","users","obj","cursos","_method","editLoteDebts","Dialog","DialogTitle","DialogContent","DialogContentText","Link","NavLink","to","mt","sm","important","fullWidth","exchange_rate_id","minLength","maxLength","reason","debt_create","min","decimalScale","thousandSeparator","decimalSeparator","allowNegative","prefix","option","privilegio","username","validate","code","hidden","DialogActions","LoadingButton","CreateLoteDeuda","createLoteDeuda","dataUserSelected","dataCurso","requestStatus","createUser","handleClose","handleGetSelected","getUserSelected","createLoteDebts","ml","colorChip","VerifySolvencia","verifySolvencia","handleGetUser","getSolvencia","console","log","md","is_solvente","debts_count","debts_pagas_count","debts_no_pagadas_count","debts_exoneradas_count","debts","i","scope","debt_lote","Chip","status","classes","flexGrow","paddingBottom","marginTop","LotesDeudas","count_notify","notify","count","debt_lote_create","Container","mb","destroyLoteDebts"],"sourceRoot":""}