{"version":3,"file":"static/js/1373.52ea6cda.chunk.js","mappings":"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","sources":["components/Utils/GeneratePassword.js","components/form/inputs/InputHook.js","components/form/inputs/InputPasswordHook.js","components/form/inputs/InputMaskHook.js","components/form/inputs/AutoCompleteHook.js","components/form/inputs/AutoCompleteAsyncHook.js","hooks/useAsyncDebounce.js","pages/gedure/cuenta/credenciales/CPassword.js","pages/gedure/usuarios/ver/credenciales/PPassword.js"],"sourcesContent":["function generatePassword(size) {\n\tlet charset = \"ABCDEFGHIJKMNPQRSTUVWXYZ123456789\";\n\tlet password = \"\";\n\tfor (var i = 0, n = charset.length; i < size; ++i) {\n\t\t\tpassword += charset.charAt(Math.floor(Math.random() * n));\n\t}\n\treturn password;\n}\n\nexport default generatePassword;","import { TextField } from \"@mui/material\";\n\nimport { useController } from \"react-hook-form\";\n\nexport function InputHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\t\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t/>\n\t);\n}","import React, { useState } from 'react';\n\n// MUI\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\n// Icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n// FormHook\nimport { useController } from \"react-hook-form\";\n\nexport function InputPasswordHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n  const [visibility, setVisibility] = useState(false);\n\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\tconst handleClick = () => {\n\t\tsetVisibility(!visibility);\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n      type={visibility ? 'text' : 'password'}\n      InputProps={{\n\t\t\t\tendAdornment: (\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<IconButton onClick={handleClick} size={rest?.size}>\n\t\t\t\t\t\t\t{visibility ? <VisibilityOffIcon /> : <VisibilityIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n}","import { TextField } from \"@mui/material\";\nimport { useController } from \"react-hook-form\";\n\nimport NumberFormat from 'react-number-format';\n\nexport function InputMaskHook({ \n\tname, \n\tcontrol,\n\trules = null,\n\tdefaultValue = '',\n\thelperText = '',\n\t...rest \n}) {\n\tconst {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<NumberFormat \n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\tcustomInput={TextField}\n\t\t\terror={invalid}\n\t\t\tonValueChange={(values) => {\n\t\t\t\tonChange(values?.value || '');\n\t\t\t}}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t\tmask='_'\n\t\t/>\n\t);\n}","import { Autocomplete, TextField } from '@mui/material'\nimport React from 'react'\nimport { useController } from 'react-hook-form';\n\nexport function AutoCompleteHook({\n  multiple,\n  options,\n  name,\n  control,\n  defaultValue,\n  rules = { required: '* Campo requerido' },\n  isOptionEqualToValue,\n  getOptionLabel,\n  helperText,\n  disabled,\n  ...rest\n}) {\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  return (\n    <Autocomplete\n\t\t\t{...inputProps}\n\t\t\tonChange={(e, newValue) => {\n\t\t\t\tonChange(newValue);\n\t\t\t}}\n\t\t\tmultiple={multiple}\n\t\t\toptions={options}\n\t\t\tnoOptionsText='No hay resultados'\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disabled={disabled}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\terror={invalid}\n\t\t\t\t\thelperText={error ? error.message : helperText}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\n\n// MUI\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\n\n// Form\nimport { useController } from \"react-hook-form\";\nimport useAsyncDebounce from '../../../hooks/useAsyncDebounce';\n\nexport function AutoCompleteAsyncHook({\n  name,\n  control,\n  rules = null, \n  data = [],\n\tdefaultValue = '',\n  helperText = '',\n  getOptionLabel,\n  isOptionEqualToValue,\n  multiple,\n  handleRequest,\n  disabled,\n  renderOption,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasFinish, setHasFinish] = useState(true);\n  const loading = hasFinish && (open && options.length === 0);\n\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let active = true;\n\n    const request = async () => {\n      await handleRequest(inputValue);\n    }\n\n    if (!loading) {\n      return undefined;\n    }\n\n    if (active) {\n      request();\n    }\n\n    return () => {\n      active = false;\n    };\n\n    // eslint-disable-next-line\n  }, [loading]);\n\n\n  // NOTA(RECKER): Reset\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setHasFinish(true);\n    }\n\n    // eslint-disable-next-line\n  }, [open]);\n\n  // NOTA(RECKER): Actualizar options\n  useEffect(() => {\n    if (data !== null) {\n      setOptions(data);\n      setHasFinish(false);\n    }\n  }, [data]);\n\n  // NOTA(REKCER): Refresh data\n  // eslint-disable-next-line\n\tconst refreshResults = useCallback(\n\t\tuseAsyncDebounce(() => {\n      setOptions([]);\n      setHasFinish(true);\n\t\t},500),\n\t[]);\n\n  return (\n    <Autocomplete\n      multiple={multiple}\n      id={`autocomplete-${name}`}\n      options={options}\n      open={open}\n      onOpen={() => {\n\t\t\t\tsetOpen(true);\n        setHasFinish(true);\n\t\t\t}}\n\t\t\tonClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n      onChange={(e,value) => {\n        onChange(value);\n      }}\n      inputValue={inputValue}\n      onInputChange={(e, newValue) => {\n\t\t\t\tsetInputValue(newValue);\n        if (e?.type === 'change') {\n          refreshResults();\n        }\n\t\t\t}}\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      loading={loading}\n      loadingText='Cargando...'\n\t\t\tnoOptionsText='No hay resultados'\n      disabled={disabled}\n      renderOption={renderOption}\n      renderInput={(params) => (\n        <TextField \n          {...params}\n          {...inputProps}\n          {...rest}\n          inputRef={ref}\n          error={Boolean(error)}\n          helperText={error ? error.message : helperText}\n          InputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress color='inherit' size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n        />\n      )}\n    />\n  )\n}\n","export default function useAsyncDebounce(callback, delay) {\n\tlet timer;\n\t\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => callback(...args), delay)\n\t}\n}","import React from 'react';\n\n// Form\nimport { useForm } from 'react-hook-form';\n\n// Components\nimport { PPasswordForm } from '../../usuarios/ver/credenciales/PPassword';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateData } from '../../../../store/slices/requestStatus/async_trunk/users/updateData';\nimport { updateUserData } from '../../../../store/slices/auth';\n\nexport default function CPassword() {\n  const loading = useSelector(state => state.requestStatus.personalData.loadingPP);\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control, setValue } = useForm();\n\n  const handleUpdate = ({ user }) => {\n    dispatch(updateUserData({ user }));\n  }\n\n  const onSubmit = submitData => {\n    submitData._method = 'PUT';\n\n    dispatch(updateData({\n      submitData, \n      loading: 'loadingPP', \n      personal: true,\n      handleUpdate,\n    }));\n  }\n\n  return (\n    <PPasswordForm\n      control={control}\n      handleSubmit={handleSubmit(onSubmit)}\n      loading={loading}\n      setValue={setValue}\n      helperText='* Campo requerido'\n    />\n  )\n}\n","import React, { useState } from 'react'\n\n// Router\nimport { useParams } from 'react-router-dom'\n\n// MUI\nimport { Divider, Grid, Typography, Box, FormControlLabel, Switch } from '@mui/material'\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm, useWatch } from 'react-hook-form'\nimport { InputPasswordHook } from '../../../../../components/form/inputs';\n\n// Components\nimport generatePassword from '../../../../../components/Utils/GeneratePassword';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateData } from '../../../../../store/slices/requestStatus/async_trunk/users/updateData';\n\nexport function PPasswordForm({ control, handleSubmit, setValue, loading, helperText }) {\n  const [generatePass, setGeneratePass] = useState(false);\n  const password = useWatch({\n    name: 'password',\n    control,\n  });\n\n  const handleGeneratePass = (event) => {\n\t\tif (event.target.checked) {\n\t\t\tconst simplePW = generatePassword(4);\n\t\t\tsetValue('password', simplePW);\n\t\t\tsetValue('repeat_password', simplePW);\n\t\t\tsetGeneratePass(event.target.checked);\n\t\t}else {\n\t\t\tsetValue('password', '');\n\t\t\tsetValue('repeat_password', '');\n\t\t\tsetGeneratePass(event.target.checked);\n\t\t}\n\t}\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6' component='span' className='text__bold--semi'>\n          Cambiar contraseña\n        </Typography>\n        <Box mt={1}>\n          <Divider />\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <InputPasswordHook\n          control={control}\n          rules={{\n            required: '* Campo requerido',\n            minLength: { value: 4, message: 'Error: No válido' },\n            maxLength: { value: 25, message: 'Error: No válida' }\n          }}\n          name='password'\n          label='Contraseña'\n          helperText={helperText}\n          size='small'\n          fullWidth\n          disabled={loading}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputPasswordHook\n          control={control}\n          rules={{\n            required: '* Campo requerido',\n            minLength: { value: 4, message: 'Error: No válido' },\n            maxLength: { value: 25, message: 'Error: No válida' },\n            validate: value => value === password || 'Error: La contraseña no coincide'\n          }}\n          name='repeat_password'\n          label='Repetir contraseña'\n          helperText='* Campo requerido'\n          size='small'\n          fullWidth\n          disabled={loading}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControlLabel\n          control={<Switch value={generatePass} onChange={handleGeneratePass} disabled={loading} color=\"primary\" />}\n          label=\"Generar contraseña\"\n        />\n      </Grid>\n      {generatePass && (\n        <Grid item xs={12}>\n          <Typography className='text__opacity--semi'>\n            Contraseña generada: {password}\n          </Typography>\n        </Grid>\n      )}\n      <Grid container justifyContent='flex-end' item xs={12}>\n        <LoadingButton\n          variant='contained' \n          loading={loading}\n          disableElevation\n          onClick={handleSubmit}\n        >\n          Cambiar contraseña\n        </LoadingButton>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default function PPassword() {\n  const { id } = useParams();\n\n  const loading = useSelector(state => state.requestStatus.personalData.loadingPP);\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control, setValue } = useForm();\n\n  const onSubmit = submitData => {\n    submitData._method = 'PUT';\n\n    dispatch(updateData({submitData, id, loading: 'loadingPP'}));\n  }\n\n  return (\n    <PPasswordForm\n      control={control}\n      handleSubmit={handleSubmit(onSubmit)}\n      loading={loading}\n      setValue={setValue}\n      helperText='Tenga en cuenta que una vez cambiada la contraseña el usuario ya no podrá acceder con su contraseña antigüa, asegurese de informar al usuario de este cambio'\n    />\n  )\n}\n"],"names":["size","charset","password","i","n","length","charAt","Math","floor","random","InputHook","name","control","rules","defaultValue","helperText","rest","useController","field","ref","inputProps","fieldState","invalid","error","inputRef","message","InputPasswordHook","useState","visibility","setVisibility","type","InputProps","endAdornment","position","onClick","InputMaskHook","onChange","customInput","TextField","onValueChange","values","value","mask","AutoCompleteHook","multiple","options","required","isOptionEqualToValue","getOptionLabel","disabled","Autocomplete","e","newValue","noOptionsText","renderInput","params","AutoCompleteAsyncHook","data","handleRequest","renderOption","open","setOpen","setOptions","inputValue","setInputValue","hasFinish","setHasFinish","loading","useEffect","active","request","refreshResults","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","useAsyncDebounce","id","onOpen","onClose","onInputChange","loadingText","Boolean","CircularProgress","color","CPassword","useSelector","state","requestStatus","personalData","loadingPP","dispatch","useDispatch","useForm","handleSubmit","setValue","handleUpdate","user","updateUserData","PPasswordForm","submitData","_method","updateData","personal","generatePass","setGeneratePass","useWatch","container","spacing","item","xs","variant","component","className","mt","minLength","maxLength","label","fullWidth","validate","event","target","checked","simplePW","generatePassword","justifyContent","disableElevation","PPassword","useParams"],"sourceRoot":""}