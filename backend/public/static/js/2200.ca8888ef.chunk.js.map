{"version":3,"file":"static/js/2200.ca8888ef.chunk.js","mappings":"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","sources":["components/form/inputs/InputHook.js","components/form/inputs/InputPasswordHook.js","components/form/inputs/InputMaskHook.js","components/form/inputs/AutoCompleteHook.js","components/form/inputs/AutoCompleteAsyncHook.js","hooks/useAsyncDebounce.js","pages/gedure/usuarios/ver/perfil/PDatos.js"],"sourcesContent":["import { TextField } from \"@mui/material\";\n\nimport { useController } from \"react-hook-form\";\n\nexport function InputHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\t\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t/>\n\t);\n}","import React, { useState } from 'react';\n\n// MUI\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\n// Icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n// FormHook\nimport { useController } from \"react-hook-form\";\n\nexport function InputPasswordHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n  const [visibility, setVisibility] = useState(false);\n\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\tconst handleClick = () => {\n\t\tsetVisibility(!visibility);\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n      type={visibility ? 'text' : 'password'}\n      InputProps={{\n\t\t\t\tendAdornment: (\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<IconButton onClick={handleClick} size={rest?.size}>\n\t\t\t\t\t\t\t{visibility ? <VisibilityOffIcon /> : <VisibilityIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n}","import { TextField } from \"@mui/material\";\nimport { useController } from \"react-hook-form\";\n\nimport NumberFormat from 'react-number-format';\n\nexport function InputMaskHook({ \n\tname, \n\tcontrol,\n\trules = null,\n\tdefaultValue = '',\n\thelperText = '',\n\t...rest \n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<NumberFormat\n\t\t\t{...rest}\n\t\t\t{...inputProps}\n\t\t\tvalue={Number(value) || ''}\n\t\t\tcustomInput={TextField}\n\t\t\terror={invalid}\n\t\t\tonValueChange={(values) => {\n\t\t\t\tonChange(values?.value || '');\n\t\t\t}}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t\tmask='_'\n\t\t/>\n\t);\n}","import { Autocomplete, TextField } from '@mui/material'\nimport React from 'react'\nimport { useController } from 'react-hook-form';\n\nexport function AutoCompleteHook({\n  multiple,\n  options,\n  name,\n  control,\n  defaultValue,\n  rules = { required: '* Campo requerido' },\n  isOptionEqualToValue,\n  getOptionLabel,\n  helperText,\n  disabled,\n  ...rest\n}) {\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  return (\n    <Autocomplete\n\t\t\t{...inputProps}\n\t\t\tonChange={(e, newValue) => {\n\t\t\t\tonChange(newValue);\n\t\t\t}}\n\t\t\tmultiple={multiple}\n\t\t\toptions={options}\n\t\t\tnoOptionsText='No hay resultados'\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disabled={disabled}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\terror={invalid}\n\t\t\t\t\thelperText={error ? error.message : helperText}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\n\n// MUI\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\n\n// Form\nimport { useController } from \"react-hook-form\";\nimport useAsyncDebounce from '../../../hooks/useAsyncDebounce';\n\nexport function AutoCompleteAsyncHook({\n  name,\n  control,\n  rules = null, \n  data = [],\n\tdefaultValue = '',\n  helperText = '',\n  getOptionLabel,\n  isOptionEqualToValue,\n  multiple,\n  handleRequest,\n  disabled,\n  renderOption,\n  renderTags,\n  limitTags,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasFinish, setHasFinish] = useState(true);\n  const loading = hasFinish && (open && options.length === 0);\n\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let active = true;\n\n    const request = async () => {\n      await handleRequest(inputValue);\n    }\n\n    if (!loading) {\n      return undefined;\n    }\n\n    if (active) {\n      request();\n    }\n\n    return () => {\n      active = false;\n    };\n\n    // eslint-disable-next-line\n  }, [loading]);\n\n\n  // NOTA(RECKER): Reset\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setHasFinish(true);\n    }\n\n    // eslint-disable-next-line\n  }, [open]);\n\n  // NOTA(RECKER): Actualizar options\n  useEffect(() => {\n    if (data !== null) {\n      setOptions(data);\n      setHasFinish(false);\n    }\n  }, [data]);\n\n  // NOTA(REKCER): Refresh data\n  // eslint-disable-next-line\n\tconst refreshResults = useCallback(\n\t\tuseAsyncDebounce(() => {\n      setOptions([]);\n      setHasFinish(true);\n\t\t},500),\n\t[]);\n\n  return (\n    <Autocomplete\n      multiple={multiple}\n      id={`autocomplete-${name}`}\n      options={options}\n      open={open}\n      onOpen={() => {\n\t\t\t\tsetOpen(true);\n        setHasFinish(true);\n\t\t\t}}\n\t\t\tonClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n      onChange={(e,value) => {\n        onChange(value);\n      }}\n      inputValue={inputValue}\n      onInputChange={(e, newValue) => {\n\t\t\t\tsetInputValue(newValue);\n        if (e?.type === 'change') {\n          refreshResults();\n        }\n\t\t\t}}\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      loading={loading}\n      loadingText='Cargando...'\n\t\t\tnoOptionsText='No hay resultados'\n      renderTags={renderTags}\n      disabled={disabled}\n      renderOption={renderOption}\n      limitTags={limitTags}\n      renderInput={(params) => (\n        <TextField \n          {...params}\n          {...inputProps}\n          {...rest}\n          inputRef={ref}\n          error={Boolean(error)}\n          helperText={error ? error.message : helperText}\n          InputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress color='inherit' size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n        />\n      )}\n    />\n  )\n}\n","export default function useAsyncDebounce(callback, delay) {\n\tlet timer;\n\t\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => callback(...args), delay)\n\t}\n}","import React from 'react';\n\n// Router\nimport { useParams } from 'react-router-dom';\n\n// MUI\nimport { Box, Divider, Grid, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { InputHook } from '../../../../../components/form/inputs';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateData } from '../../../../../store/slices/requestStatus/async_trunk/users/updateData';\n\nexport function PDatosForm({ control, loading, handleSubmit, userField = true, nameField = true, user = {} }) {\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6' component='span' className='text__bold--semi'>\n          Perfil del usuario\n\t\t\t\t</Typography>\n\t\t\t\t<Box mt={1}>\n\t\t\t\t\t<Divider />\n\t\t\t\t</Box>\n      </Grid>\n      {userField && (\n        <Grid item xs={12}>\n          <InputHook\n              control={control}\n              rules={{\n                required: '* Campo requerido',\n                minLength: { value: 3, message: 'Error: Demaciado corto' },\n                maxLength: { value: 30, message: 'Error: Demaciado largo' },\n              }}\n              name='username'\n              label='Usuario o cédula'\n              helperText='El usuario identificará a esta cuenta dentro del sistema'\n              defaultValue={user.username} \n              variant='outlined'\n              size='small'\n              fullWidth\n              disabled={loading}\n            />\n        </Grid>\n      )}\n      {nameField && (\n        <Grid item xs={12}>\n          <InputHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 3, message: 'Error: Demaciado corto' },\n              maxLength: { value: 90, message: 'Error: Demaciado largo' },\n            }}\n            name='name'\n            label='Nombre de la cuenta'\n            helperText='El nombre puede ser visto por otros usuarios, tenga discreción con lo que coloque aquí'\n            defaultValue={user.name}\n            variant='outlined'\n            size='small'\n            fullWidth\n            disabled={loading}\n          />\n        </Grid>\n      )}\n      <Grid item xs={12}>\n        <InputHook\n          control={control}\n          rules={{\n            required: '* Campo requerido',\n            pattern: {\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n              message: 'Error: Correo no válido',\n            },\n          }}\n          name='email'\n          label='Correo electónico'\n          helperText='Este correo será usado en distintas partes del sistema para una comunicación directa con el usuario'\n          defaultValue={user.email || ''}\n          variant='outlined'\n          size='small'\n          fullWidth\n          disabled={loading}\n        />\n      </Grid>\n      <Grid container justifyContent='flex-end' item xs={12}>\n        <LoadingButton \n          variant='contained' \n          loading={loading}\n          disableElevation\n          onClick={handleSubmit}\n        >\n          Actualizar\n        </LoadingButton>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default function PDatos() {\n  const { id } = useParams();\n\n  const { userSelected, loading } = useSelector(state => ({\n    userSelected: state.requestStatus.userShow.userSelected,\n    loading: state.requestStatus.personalData.loadingPD,\n  }))\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control, setError } = useForm();\n\n  const onSubmit = submitData => {\n    // NOTA(RECKER): Quitar datos únicos\n    if(userSelected.username === submitData.username) {\n      delete submitData.username;\n    }\n\n    if(userSelected.email === submitData.email) {\n      delete submitData.email;\n    }\n\n    submitData._method = 'PUT';\n    dispatch(updateData({submitData, id, errors: setError, loading: 'loadingPD'}));\n  }\n\n  return (\n    <PDatosForm\n      control={control}\n      user={userSelected}\n      handleSubmit={handleSubmit(onSubmit)}\n      loading={loading}\n    />\n  )\n}\n"],"names":["InputHook","name","control","rules","defaultValue","helperText","rest","useController","field","ref","inputProps","fieldState","invalid","error","inputRef","message","InputPasswordHook","useState","visibility","setVisibility","type","InputProps","endAdornment","position","onClick","size","InputMaskHook","onChange","value","Number","customInput","TextField","onValueChange","values","mask","AutoCompleteHook","multiple","options","required","isOptionEqualToValue","getOptionLabel","disabled","Autocomplete","e","newValue","noOptionsText","renderInput","params","AutoCompleteAsyncHook","data","handleRequest","renderOption","renderTags","limitTags","open","setOpen","setOptions","inputValue","setInputValue","hasFinish","setHasFinish","loading","length","useEffect","active","request","refreshResults","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","useAsyncDebounce","id","onOpen","onClose","onInputChange","loadingText","Boolean","CircularProgress","color","PDatosForm","handleSubmit","userField","nameField","user","container","spacing","item","xs","variant","component","className","mt","minLength","maxLength","label","username","fullWidth","pattern","email","justifyContent","disableElevation","PDatos","useParams","useSelector","state","userSelected","requestStatus","userShow","personalData","loadingPD","dispatch","useDispatch","useForm","setError","submitData","_method","updateData","errors"],"sourceRoot":""}