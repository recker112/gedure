{"version":3,"file":"static/js/5601.e7f43c33.chunk.js","mappings":"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","sources":["components/AnimationDialog.js","components/DialogConfirmation.js","components/ReactTableBase/GlobalFilter.js","components/ReactTableBase/IndeterminateCheckbox.js","components/ReactTableBase/index.js","components/TourComponent.js","components/Utils/BankList.js","components/form/inputs/InputHook.js","components/form/inputs/InputPasswordHook.js","components/form/inputs/InputMaskHook.js","components/form/inputs/AutoCompleteHook.js","components/form/inputs/AutoCompleteAsyncHook.js","hooks/useAsyncDebounce.js","components/form/select/index.js","components/form/switch/index.js","pages/gedure/configuracion/TourPagos.js","pages/gedure/configuracion/pagos/CreateBankAccount.js","pages/gedure/configuracion/pagos/TableAccounts.js","pages/gedure/configuracion/pagos/EditBankAccount.js","pages/gedure/configuracion/pagos/UploadTransactions.js","pages/gedure/configuracion/pagos/TableTransactions.js","pages/gedure/configuracion/pagos/AssignTransaction.js","pages/gedure/configuracion/pagos/index.js"],"sourcesContent":["import React from 'react';\n\n// MUI\nimport { Slide } from '@mui/material';\n\nconst AnimationDialog = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default AnimationDialog;","import React from 'react';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Components\nimport AnimationDialog from './AnimationDialog';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function DialogConfirmation({ rdx1, rdx2, close, request, children }) {\n  const { open, loading, data } = useSelector(state => state[rdx1][rdx2]);\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const handleRequest = () => {\n    dispatch(request(data));\n  }\n\n  const handleClose = () => {\n    dispatch(close);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n      fullScreen={fullScreen}\n      aria-labelledby=\"confirm-dialog-title\"\n      aria-describedby=\"confirm-dialog-description\"\n    >\n      <DialogTitle>¿Está seguro?</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"confirm-dialog-description\">\n          {children(data)}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n\t\t\t\t<Button disabled={loading} onClick={handleClose} color=\"inherit\">\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n        <LoadingButton onClick={handleRequest} loading={loading} color=\"inherit\">\n          Confirmar\n        </LoadingButton>\n\t\t\t</DialogActions>\n    </Dialog>\n  )\n}","import React, { useState } from \"react\";\n\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nimport { useAsyncDebounce } from \"react-table\";\n\nexport function GlobalFilter({ state, setGlobalFilter, gotoPage, dataTourGlobal }) {\n  const [value, setValue] = useState(state.globalFilter);\n\n  const onDebounce = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n    gotoPage(0);\n  }, 500);\n\n  const handleClear = () => {\n    setValue(\"\");\n    setGlobalFilter(undefined);\n    gotoPage(0);\n  }\n\n  return (\n    <TextField\n      data-tour={dataTourGlobal}\n      size=\"small\"\n      value={value || \"\"}\n      placeholder=\"Buscar...\"\n      variant='standard'\n      autoComplete=\"off\"\n      onChange={(event) => {\n        onDebounce(event.target.value);\n        setValue(event.target.value);\n      }}\n      sx={{\n        mr: 1,\n      }}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>,\n        endAdornment: <IconButton disabled={!value} onClick={handleClear}><ClearIcon /></IconButton>\n      }} />\n  );\n}\n","import React from \"react\";\nimport { Checkbox } from \"@mui/material\";\n\nexport const IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <Checkbox\n        type=\"checkbox\"\n        ref={resolvedRef}\n        indeterminate={indeterminate}\n        color={indeterminate ? 'default' : 'primary'}\n        {...rest} />\n    );\n  }\n);\n","import React, { useEffect } from \"react\";\n\n// MUI\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  Grid,\n  IconButton,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { alpha } from \"@mui/material/styles\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\n// Table\nimport {\n  useTable,\n  useGlobalFilter,\n  useRowSelect,\n  usePagination,\n} from \"react-table\";\n\n// Components\nimport { GlobalFilter } from \"./GlobalFilter\";\nimport { IndeterminateCheckbox } from \"./IndeterminateCheckbox\";\n\nexport default function ReactTableBase({\n  data,\n  columns,\n  pageSizeData,\n  pageCountData,\n  loading,\n  handleGlobalFilter,\n  handleChange,\n  filter,\n  massiveOptions,\n  title,\n  refresh,\n  dataTourMassive = 'gdTable__massive',\n  dataTourGlobal = 'gdTable__search',\n  ...rest\n}) {\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        hiddenColumns: [\"massiveSelection\"],\n        pageSize: pageSizeData,\n        pageIndex: 0,\n      },\n      manualPagination: true,\n      pageCount: pageCountData,\n    },\n    useGlobalFilter,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      hooks.visibleColumns.push((columns) => [\n        {\n          id: \"massiveSelection\",\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n          ),\n          Cell: ({ row }) => (\n            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n          ),\n        },\n        ...columns,\n      ]);\n    }\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    selectedFlatRows,\n    allColumns,\n    canPreviousPage,\n    canNextPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    pageOptions,\n    gotoPage,\n    pageCount,\n  } = tableInstance;\n\n  const { pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    handleChange({ pageIndex: pageIndex+1, pageSize });\n    // eslint-disable-next-line\n  }, [pageIndex, pageSize]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Paper sx={{ position: \"relative\" }} {...rest}>\n          <Backdrop\n            sx={{\n              color: \"#fff\",\n              zIndex: (theme) => theme.zIndex.appBar - 1,\n              position: \"absolute\",\n            }}\n            open={loading}\n          >\n            <CircularProgress />\n          </Backdrop>\n          <Toolbar\n            sx={{\n              ...(selectedFlatRows.length > 0 && {\n                bgcolor: (theme) =>\n                  alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.activatedOpacity\n                  ),\n              }),\n            }}\n          >\n            {selectedFlatRows.length > 0 ? (\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                color=\"inherit\"\n                variant=\"subtitle1\"\n                component=\"div\"\n                noWrap\n              >\n                {selectedFlatRows.length} seleccionada(s)\n              </Typography>\n            ) : (\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                variant=\"h6\"\n                id=\"registros\"\n                component=\"div\"\n                noWrap\n              >\n                {title}\n              </Typography>\n            )}\n            <GlobalFilter\n              state={state}\n              setGlobalFilter={handleGlobalFilter}\n              gotoPage={gotoPage}\n              dataTourGlobal={dataTourGlobal}\n            />\n            {selectedFlatRows.length > 0 ? (\n              massiveOptions(selectedFlatRows.map(\n                (d) => d.original\n              ))\n            ) : (\n              <>\n                {massiveOptions && (\n                  <Tooltip title=\"Opciones massivas\" arrow>\n                    <IconButton\n                      component=\"span\"\n                      onClick={() => {\n                        allColumns.map((column) => {\n                          if (column.id  === 'massiveSelection') {\n                            column.toggleHidden();\n                          } else if (column.id === 'options') {\n                            column.toggleHidden();\n                          }\n                          return null;\n                        });\n                      }}\n                      data-tour={dataTourMassive}\n                      disabled={selectedFlatRows.length > 0}\n                    >\n                      <GroupIcon />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                <Tooltip title='Recargar' arrow>\n                  <IconButton\n                    component=\"span\"\n                    onClick={refresh}\n                    data-tour=\"gdTable__refresh\"\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n                {filter && filter(gotoPage)}\n              </>\n            )}\n          </Toolbar>\n          <TableContainer>\n            <Box overflow=\"auto\" minWidth={352}>\n              <Table\n                sx={{ minWidth: 650 }}\n                aria-label=\"React Table\"\n                {...getTableProps()}\n              >\n                <TableHead sx={{ th: { border: 0 } }}>\n                  {headerGroups.map((headerGroup) => (\n                    <TableRow\n                      sx={{ td: { border: 0 } }}\n                      {...headerGroup.getHeaderGroupProps()}\n                    >\n                      {headerGroup.headers.map((column) => {\n                        if (column.id === \"massiveSelection\") {\n                          return (\n                            <TableCell\n                              padding=\"checkbox\"\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render(\"Header\")}\n                            </TableCell>\n                          );\n                        } else if (column.Header === \"Opciones\") {\n                          return (\n                            <TableCell\n                              align=\"right\"\n                              data-tour='table-Opciones'\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render(\"Header\")}\n                            </TableCell>\n                          );\n                        }\n\n                        return (\n                          <TableCell data-tour={`table-${column.render(\"Header\")}`} {...column.getHeaderProps()}>\n                            {column.render(\"Header\")}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                  {page.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <TableRow sx={{ height: \"73px\" }} {...row.getRowProps()}>\n                        {row.cells.map((cell) => {\n                          if (cell.column.id === \"massiveSelection\") {\n                            return (\n                              <TableCell\n                                padding=\"checkbox\"\n                                {...cell.getCellProps()}\n                              >\n                                {cell.render(\"Cell\")}\n                              </TableCell>\n                            );\n                          } else if (cell.column.Header === \"Opciones\") {\n                            return (\n                              <TableCell align=\"right\" {...cell.getCellProps()}>\n                                {cell.render(\"Cell\")}\n                              </TableCell>\n                            );\n                          }\n\n                          return (\n                            <TableCell {...cell.getCellProps()}>\n                              {cell.render(\"Cell\")}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                  {page.length === 0 && (\n                    <TableRow>\n                      <TableCell colSpan=\"100%\">\n                        <Typography textAlign=\"center\">\n                          No se han encontrado resultados\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n            <Box overflow=\"auto\" minWidth={352}>\n              <Table>\n                <TableFooter>\n                  <TableRow>\n                    <TableCell colSpan=\"100%\" sx={{ border: 0 }}>\n                      <Grid\n                        container\n                        justifyContent=\"flex-end\"\n                        alignItems=\"center\"\n                        spacing={1}\n                        item\n                        xs={12}\n                      >\n                        <Grid item>\n                          <Select\n                            labelId=\"page-size-table-label\"\n                            id=\"page-size-table\"\n                            value={pageSize}\n                            label=\"Filas\"\n                            variant=\"standard\"\n                            onChange={(e) => {\n                              setPageSize(Number(e.target.value));\n                            }}\n                          >\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                              <MenuItem key={pageSize} value={pageSize}>\n                                {pageSize} Filas\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Primera página\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={() => gotoPage(0)}\n                              disabled={!canPreviousPage}\n                            >\n                              <FirstPageIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Anterior\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={previousPage}\n                              disabled={!canPreviousPage}\n                            >\n                              <NavigateBeforeIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Box\n                            component=\"span\"\n                            fontSize=\"body2.fontSize\"\n                            color=\"text.secondary\"\n                          >\n                            {pageIndex + 1} de {pageOptions.length}\n                          </Box>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Siguiente\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={nextPage}\n                              disabled={!canNextPage}\n                            >\n                              <NavigateNextIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Última página\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={() => gotoPage(pageCount - 1)}\n                              disabled={!canNextPage}\n                            >\n                              <LastPageIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                      </Grid>\n                    </TableCell>\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </Box>\n          </TableContainer>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\n\nimport Tour from 'reactour';\n\n// MUI\nimport { Button } from '@mui/material';\n\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateTour } from '../store/slices/configs';\n\nfunction TourComponent({ steps, select, version = 'v1' }) {\n\tconst { tourOpen } = useSelector((state) => ({\n\t\ttourOpen: state.configs.tour[select],\n\t}));\n\tconst dispatch = useDispatch();\n\t\n\tconst handleClose = ()=>{\n\t\tdispatch(updateTour({open: true, tour: select, version}));\n\t}\n\t\n\treturn (\n\t\t<Tour \n\t\t\tsteps={steps}\n\t\t\tisOpen={!tourOpen}\n\t\t\tdisableInteraction={true}\n\t\t\tonAfterOpen={() => {document.body.style.overflowY = 'hidden'}}\n\t\t\tonBeforeClose={() => {document.body.style.overflowY = 'auto'}}\n\t\t\tshowNavigationNumber={false}\n\t\t\tshowCloseButton={false}\n\t\t\trounded={5}\n\t\t\tlastStepNextButton={\n\t\t\t\t<Button component='span' size='small' color='primary' onClick={handleClose}>Terminar guía</Button>\n\t\t\t}\n\t\t/>\n\t);\n}\n\nexport default TourComponent;","export const BankList = [\n\t{\n\t\tvalue: '0102',\n\t\tlabel: 'Banco de Venezuela'\n\t},\n\t{\n\t\tvalue: '0104',\n\t\tlabel: 'Venezolano de Crédito'\n\t},\n\t{\n\t\tvalue: '0105',\n\t\tlabel: 'Mercantil'\n\t},\n\t{\n\t\tvalue: '0108',\n\t\tlabel: 'Provincial'\n\t},\n\t{\n\t\tvalue: '0114',\n\t\tlabel: 'Bancaribe'\n\t},\n\t{\n\t\tvalue: '0115',\n\t\tlabel: 'Exterior'\n\t},\n\t{\n\t\tvalue: '0116',\n\t\tlabel: 'Occidental de Descuento'\n\t},\n\t{\n\t\tvalue: '0128',\n\t\tlabel: 'Banco Caroní'\n\t},\n\t{\n\t\tvalue: '0134',\n\t\tlabel: 'Banesco'\n\t},\n\t{\n\t\tvalue: '0138',\n\t\tlabel: 'Banco Plaza'\n\t},\n\t{\n\t\tvalue: '0151',\n\t\tlabel: 'BFC Banco Fondo Común'\n\t},\n\t{\n\t\tvalue: '0156',\n\t\tlabel: '100% Banco'\n\t},\n\t{\n\t\tvalue: '0157',\n\t\tlabel: 'Delsur'\n\t},\n\t{\n\t\tvalue: '0163',\n\t\tlabel: 'Banco del Tesoro'\n\t},\n\t{\n\t\tvalue: '0166',\n\t\tlabel: 'Banco Agrícola de Venezuela'\n\t},\n\t{\n\t\tvalue: '0168',\n\t\tlabel: 'Bancrecer'\n\t},\n\t{\n\t\tvalue: '0169',\n\t\tlabel: 'Mi Banco'\n\t},\n\t{\n\t\tvalue: '0171',\n\t\tlabel: 'Banco Activo'\n\t},\n\t{\n\t\tvalue: '0172',\n\t\tlabel: 'Bancamiga'\n\t},\n\t{\n\t\tvalue: '0174',\n\t\tlabel: 'Banplus'\n\t},\n\t{\n\t\tvalue: '0175',\n\t\tlabel: 'Bicentenario del Pueblo'\n\t},\n\t{\n\t\tvalue: '0177',\n\t\tlabel: 'Banfanb'\n\t},\n\t{\n\t\tvalue: '0191',\n\t\tlabel: 'BNC Nacional de Crédito'\n\t},\n];\n\nexport const BankListSearch = {\n\t'0102': 'Banco de Venezuela',\n\t'0104': 'Venezolano de Crédito',\n\t'0105': 'Mercantil',\n\t'0108': 'Provincial',\n\t'0114': 'Bancaribe',\n\t'0115': 'Exterior',\n\t'0116': 'Occidental de Descuento',\n\t'0128': 'Banco Caroní',\n\t'0134': 'Banesco',\n\t'0138': 'Banco Plaza',\n\t'0151': 'BFC Banco Fondo Común',\n\t'0156': '100% Banco',\n\t'0157': 'Delsur',\n\t'0163': 'Banco del Tesoro',\n\t'0166': 'Banco Agrícola de Venezuela',\n\t'0168': 'Bancrecer',\n\t'0169': 'Mi Banco',\n\t'0171': 'Banco Activo',\n\t'0172': 'Bancamiga',\n\t'0174': 'Banplus',\n\t'0175': 'Bicentenario del Pueblo',\n\t'0177': 'Banfanb',\n\t'0191': 'BNC Nacional de Crédito'\n}","import { TextField } from \"@mui/material\";\n\nimport { useController } from \"react-hook-form\";\n\nexport function InputHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\t\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t/>\n\t);\n}","import React, { useState } from 'react';\n\n// MUI\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\n// Icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n// FormHook\nimport { useController } from \"react-hook-form\";\n\nexport function InputPasswordHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n  const [visibility, setVisibility] = useState(false);\n\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\tconst handleClick = () => {\n\t\tsetVisibility(!visibility);\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n      type={visibility ? 'text' : 'password'}\n      InputProps={{\n\t\t\t\tendAdornment: (\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<IconButton onClick={handleClick} size={rest?.size}>\n\t\t\t\t\t\t\t{visibility ? <VisibilityOffIcon /> : <VisibilityIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n}","import { TextField } from \"@mui/material\";\nimport { useController } from \"react-hook-form\";\n\nimport NumberFormat from 'react-number-format';\n\nexport function InputMaskHook({ \n\tname, \n\tcontrol,\n\trules = null,\n\tdefaultValue = '',\n\thelperText = '',\n\t...rest \n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<NumberFormat\n\t\t\t{...rest}\n\t\t\t{...inputProps}\n\t\t\tvalue={(rest.format ? value : parseFloat(value)) || ''}\n\t\t\tcustomInput={TextField}\n\t\t\terror={invalid}\n\t\t\tonValueChange={(values) => {\n\t\t\t\tonChange(values?.value || '');\n\t\t\t}}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t\tmask='_'\n\t\t/>\n\t);\n}","import { Autocomplete, TextField } from '@mui/material'\nimport React from 'react'\nimport { useController } from 'react-hook-form';\n\nexport function AutoCompleteHook({\n  multiple,\n  options,\n  name,\n  control,\n  defaultValue,\n  rules = { required: '* Campo requerido' },\n  isOptionEqualToValue,\n  getOptionLabel,\n  helperText,\n  disabled,\n  ...rest\n}) {\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  return (\n    <Autocomplete\n\t\t\t{...inputProps}\n\t\t\tonChange={(e, newValue) => {\n\t\t\t\tonChange(newValue);\n\t\t\t}}\n\t\t\tmultiple={multiple}\n\t\t\toptions={options}\n\t\t\tnoOptionsText='No hay resultados'\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disabled={disabled}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\terror={invalid}\n\t\t\t\t\thelperText={error ? error.message : helperText}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\n\n// MUI\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\n\n// Form\nimport { useController } from \"react-hook-form\";\nimport useAsyncDebounce from '../../../hooks/useAsyncDebounce';\n\nexport function AutoCompleteAsyncHook({\n  name,\n  control,\n  rules = null, \n  data = [],\n\tdefaultValue = '',\n  helperText = '',\n  getOptionLabel,\n  isOptionEqualToValue,\n  multiple,\n  handleRequest,\n  disabled,\n  renderOption,\n  renderTags,\n  limitTags,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasFinish, setHasFinish] = useState(true);\n  const loading = hasFinish && (open && options.length === 0);\n\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let active = true;\n\n    const request = async () => {\n      await handleRequest(inputValue);\n    }\n\n    if (!loading) {\n      return undefined;\n    }\n\n    if (active) {\n      request();\n    }\n\n    return () => {\n      active = false;\n    };\n\n    // eslint-disable-next-line\n  }, [loading]);\n\n\n  // NOTA(RECKER): Reset\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setHasFinish(true);\n    }\n\n    // eslint-disable-next-line\n  }, [open]);\n\n  // NOTA(RECKER): Actualizar options\n  useEffect(() => {\n    if (data !== null) {\n      setOptions(data);\n      setHasFinish(false);\n    }\n  }, [data]);\n\n  // NOTA(REKCER): Refresh data\n  // eslint-disable-next-line\n\tconst refreshResults = useCallback(\n\t\tuseAsyncDebounce(() => {\n      setOptions([]);\n      setHasFinish(true);\n\t\t},500),\n\t[]);\n\n  return (\n    <Autocomplete\n      multiple={multiple}\n      id={`autocomplete-${name}`}\n      options={options}\n      open={open}\n      onOpen={() => {\n\t\t\t\tsetOpen(true);\n        setHasFinish(true);\n\t\t\t}}\n\t\t\tonClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n      onChange={(e,value) => {\n        onChange(value);\n      }}\n      inputValue={inputValue}\n      onInputChange={(e, newValue) => {\n\t\t\t\tsetInputValue(newValue);\n        if (e?.type === 'change') {\n          refreshResults();\n        }\n\t\t\t}}\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      loading={loading}\n      loadingText='Cargando...'\n\t\t\tnoOptionsText='No hay resultados'\n      renderTags={renderTags}\n      disabled={disabled}\n      renderOption={renderOption}\n      limitTags={limitTags}\n      renderInput={(params) => (\n        <TextField \n          {...params}\n          {...inputProps}\n          {...rest}\n          inputRef={ref}\n          error={Boolean(error)}\n          helperText={error ? error.message : helperText}\n          InputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress color='inherit' size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n        />\n      )}\n    />\n  )\n}\n","export default function useAsyncDebounce(callback, delay) {\n\tlet timer;\n\t\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => callback(...args), delay)\n\t}\n}","import React from 'react';\n\nimport {\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tFormHelperText,\n} from '@mui/material';\n\nimport { useController } from \"react-hook-form\";\n\nexport function SelectHook({\n\tname,\n\tlabel,\n\tcontrol,\n\thelperText = '',\n\tdefaultValue = '',\n\trules = { required: '* Campo requerido' },\n\tchildren,\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<FormControl\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t>\n\t\t\t<InputLabel id={name + '-label'}>{label}</InputLabel>\n\t\t\t<Select labelId={name + '-label'} label={label} id={name} {...inputProps}>\n\t\t\t\t{children}\n\t\t\t</Select>\n\t\t\t<FormHelperText>{error ? error.message : helperText}</FormHelperText>\n\t\t</FormControl>\n\t);\n}","import React from 'react';\n\nimport {\n\tFormControlLabel,\n\tSwitch,\n} from '@mui/material';\n\nimport { useController } from \"react-hook-form\";\n\nexport function SwitchHook({ \n\tlabel, \n\tname, \n\tcontrol, \n\tdefaultValue = false,\n\tlabelPlacement = 'end', \n\t...rest\n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n  } = useController({\n    name,\n    control,\n    defaultValue: defaultValue,\n  });\n\t\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Switch\n\t\t\t\t\t{...rest}\n\t\t\t\t\t{...inputProps}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\tonChange={e => onChange(e.currentTarget.checked)}\n\t\t\t\t\tchecked={value}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t\tsx={{userSelect: 'none'}}\n\t\t\tlabelPlacement={labelPlacement}\n\t\t/>\n\t);\n}","import React from 'react';\n\nimport { \n\tTypography,\n\tButton,\n} from '@mui/material';\nimport { useTheme } from '@mui/material/styles';\n\n// Components\nimport TourComponent from '../../../components/TourComponent';\n\nexport default function TourPagos() {\n\tconst theme = useTheme();\n\t\n\tconst steps = [\n\t\t{\n\t\t\tselector: '',\n\t\t\tcontent: ({goTo}) => (\n\t\t\t\t<div>\n\t\t\t\t\t<Typography color='primary' className='text__bold--big' variant='h5'>\n\t\t\t\t\t\tConfigurar pagos\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\t\tEn esta sección podrá configurar las cuentas bancarias y transacciones de las mismas.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Button size='small' color='primary' onClick={() => goTo(9)}>\n\t\t\t\t\t\tSaltar tour\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"create-bank-account\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tAquí podrá <strong>crear cuentas bancarias</strong> en las cuales los estudiantes pueden transferir.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n    {\n\t\t\tselector: '[data-tour=\"bank-account\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tAquí podrá visualizar las <strong>cuentas bancarias creadas</strong> en el sistema. También puede <strong>editar y eliminar</strong> cualquier cuenta bancaria.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"gdTable__search\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tPuede <strong>buscar</strong> las cuentas bancarias que desee utilizándo el <strong>número de cuenta o el nombre</strong>.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"gdTable__massive\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tTambién puede usar las <strong>opciones masivas</strong> con las cuales puedes <strong>borrar varias cuentas bancarias</strong> a la vez.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"upload-bank-transaction\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tAquí podrá <strong>subir las transacciones bancarias</strong> de cada cuenta bancaria creada, con las cuales los usuarios podrán <strong>verificar pagos</strong>.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"bank-transaction\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tAquí podrá visualizar todas las <strong>transacciones bancarias cargadas</strong> en el sistema. También puede <strong>asignar y eliminar</strong> las transacciones.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"tableT-global\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tPuede <strong>buscar</strong> las transacciones bancarias que desee utilizándo el <strong>ID, referencia, o concepto</strong>.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '[data-tour=\"tableT-massive\"]',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tTambién puede usar las <strong>opciones masivas</strong> con las cuales puedes <strong>borrar varias transacciones bancarias</strong> a la vez.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tselector: '',\n\t\t\tcontent: () => (\n\t\t\t\t<Typography variant='body1'>\n\t\t\t\t\tCon esto finaliza esta guía, navegue entre otras partes del sistema para encontrar más guías.\n\t\t\t\t</Typography>\n\t\t\t),\n\t\t\tstyle: {\n\t\t\t\tbackgroundColor: theme.palette.background.paper\n\t\t\t},\n\t\t}\n\t];\n\t\n\treturn (\n\t\t<TourComponent select='config_pagos' steps={steps} />\n\t);\n}","import React, { useCallback } from 'react';\n\n// MUI\nimport { Grid, MenuItem, Paper, Typography } from '@mui/material';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { InputMaskHook, InputHook } from '../../../../components/form/inputs';\nimport { SelectHook } from '../../../../components/form/select';\n\n// Components\nimport { BankList } from '../../../../components/Utils/BankList';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/createBankAccount';\n\nexport default function CreateBankAccount() {\n  const loading = useSelector(state => state.requestStatus.createBankAccount.loading);\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit, setError } = useForm();\n\n  const MenuItemList = BankList.map(useCallback((data, i) => {\n    if (data.value !== '0175') {\n      return null;\n    }\n\n    return (\n      <MenuItem key={i} value={data.value}>{data.label}</MenuItem>\n    )\n  },[]));\n\n  const onSubmit = submitData => {\n    dispatch(createBankAccount({ submitData, setError }));\n  }\n\n  return (\n    <Paper component='form' autoComplete='off' onSubmit={handleSubmit(onSubmit)} data-tour=\"create-bank-account\" className='paper--padding'>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant='h6' className='text__bold--semi'>\n            Crear cuenta bancaria\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputMaskHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 20, message: 'Error: Cuenta no válida' },\n              maxLength: { value: 20, message: 'Error: Cuenta no válida' },\n            }}\n            name='n_account'\n            label='N° de cuenta'\n            fullWidth\n            size='small'\n            disabled={loading}\n            format=\"#### #### #### #### ####\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputMaskHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 9, message: 'Error: RIF no válida' },\n              maxLength: { value: 9, message: 'Error: RIF no válida' },\n            }}\n            name='rif'\n            label='RIF'\n            fullWidth\n            size='small'\n            disabled={loading}\n            format=\"J-########-#\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 6, message: 'Error: Demaciado corto' },\n              maxLength: { value: 100, message: 'Error: Demaciado largo' },\n            }}\n            name='name'\n            label='Nombre'\n            size='small'\n            fullWidth\n            disabled={loading}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Error: Correo no válido',\n              },\n            }}\n            name='email'\n            label='Correo'\n            size='small'\n            fullWidth\n            disabled={loading}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <SelectHook\n            name='type'\n            label='Tipo de cuenta'\n            control={control}\n            size='small'\n            disabled={loading}\n            fullWidth\n          >\n            <MenuItem value=''>\n              <em>Ninguno</em>\n            </MenuItem>\n            <MenuItem value='ahorro'>\n              Ahorro\n            </MenuItem>\n            <MenuItem value='corriente'>\n              Corriente\n            </MenuItem>\n          </SelectHook>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <SelectHook\n            name='code'\n            label='Banco'\n            control={control}\n            disabled={loading}\n            size='small'\n            fullWidth\n          >\n            <MenuItem value=''>\n              <em>Ninguno</em>\n            </MenuItem>\n            {MenuItemList}\n          </SelectHook>\n        </Grid>\n        <Grid container justifyContent='flex-end' item xs={12}>\n          <LoadingButton\n            variant='contained' \n            loading={loading}\n            disableElevation\n            type='submit'\n          >\n            Agregar\n          </LoadingButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\n\n// MUI\nimport { IconButton, Tooltip } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\n// Components\nimport ReactTableBase from '../../../../components/ReactTableBase';\nimport { parseToAccountString } from '../../../../components/Utils/ParseString';\nimport { BankListSearch } from '../../../../components/Utils/BankList';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBankAccounts } from '../../../../store/slices/tables/async_trunk/configuracion/TableBankAccounts';\nimport { refresh, resetTableConfig, setConfigTable, setSearch } from '../../../../store/slices/tables';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\n\nexport default function TableAccounts() {\n  const { dataR, loading, pageSize, pageCount, gedure: { bank_account_edit, bank_account_destroy } } = useSelector(state => ({\n    dataR: state.tables.bankAccounts.tableData.data,\n    loading: state.tables.bankAccounts.tableData.loading,\n    pageSize: state.tables.bankAccounts.tableData.pageSize,\n    pageCount: state.tables.bankAccounts.tableData.pageCount,\n    gedure: state.auth.permissions.gedure,\n  }));\n  const dispatch = useDispatch();\n\n  const columns = useMemo(() => [\n    {\n      Header: 'N° cuenta',\n      accessor: 'n_account',\n      Cell: ({ cell: { row: { original: { n_account } } } }) => parseToAccountString(n_account)\n    },\n    {\n      Header: 'Nombre',\n      accessor: 'name',\n    },\n    {\n      Header: 'Correo', \n      accessor: 'email'\n    },\n    {\n      Header: 'Tipo', \n      accessor: 'type'\n    },\n    {\n      Header: 'Banco', \n      accessor: 'code',\n      Cell: ({ cell: { row: { original: { code } } } }) => BankListSearch[code] || 'No especificado',\n    },\n    {\n      id: 'options',\n      Header: 'Opciones',\n      accessor: 'options',\n      Cell: ({ cell: { row: { original: { id, n_account, rif, name, email, type, code } } } }) => (\n        <>\n          <Tooltip title='Editar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_account_edit}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id, n_account, rif, name, email, type, code }, select: 'editBankAccount'}));\n              }}\n            >\n              <EditIcon /> \n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Eliminar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_account_destroy}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id, n_account}, select: 'deleteBankAccount'}));\n              }}\n            >\n              <DeleteForeverIcon /> \n            </IconButton>\n          </Tooltip>\n        </>\n      )\n    },\n    // eslint-disable-next-line\n  ],[]);\n\n  const data = useMemo(() => dataR, [dataR]);\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let promise = null;\n\n    if (loading) {\n      promise = dispatch(getBankAccounts());\n    }\n\n    return () => {\n      if (loading) {\n        promise.abort(); \n      }\n    }\n    // eslint-disable-next-line\n  }, [loading]);\n\n  // NOTA(RECKER): Reinicar config al desmontar\n  useEffect(() => {\n    return () => {\n      dispatch(resetTableConfig({ select: 'bankAccounts' }));\n    }\n    // eslint-disable-next-line\n  },[]);\n\n  const handleGlobalFilter = value => {\n    dispatch(setSearch({search: value || \"\", select: 'bankAccounts'}));\n  }\n\n  const handleChange = value => {\n    dispatch(setConfigTable({ ...value, select: 'bankAccounts' }));\n  }\n\n  const handleRefresh = () => {\n    dispatch(refresh({ select: 'bankAccounts' }));\n  }\n\n  return (\n    <ReactTableBase\n      title='Cuentas bancarias'\n      data-tour=\"bank-account\"\n      data={data}\n      columns={columns}\n      pageCountData={pageCount}\n      pageSizeData={pageSize}\n      loading={loading}\n      handleGlobalFilter={handleGlobalFilter}\n      handleChange={handleChange}\n      refresh={handleRefresh}\n      massiveOptions={dataMassive => (\n        <>\n          <Tooltip title=\"Eliminar\" arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_account_destroy}\n              onClick={() => {\n                let i = 0;\n\t\t\t\t\t\t\t\tlet idsArray = [];\n\t\t\t\t\t\t\t\tfor(let value of dataMassive){\n\t\t\t\t\t\t\t\t\tidsArray[i] = value.id;\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n                dispatch(setRequestStatus({select: 'deleteBankAccountMassive', open: true, data: idsArray}))\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      )}\n    />\n  )\n}","import React, { useCallback } from 'react';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { InputHook, InputMaskHook } from '../../../../components/form/inputs';\nimport { SwitchHook } from '../../../../components/form/switch';\nimport { SelectHook } from '../../../../components/form/select';\n\n// Components\nimport AnimationDialog from '../../../../components/AnimationDialog';\nimport { BankList } from '../../../../components/Utils/BankList';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { editBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/editBankAccount';\n\nexport default function EditBankAccount() {\n  const { data, open, loading } = useSelector(state => state.requestStatus.editBankAccount);\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit, watch, setError } = useForm({\n    shouldUnregister: true,\n  })\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({open: false, data: {}, select: 'editBankAccount'}))\n  }\n\n  const MenuItemList = BankList.map(useCallback((data, i) => (\n\t\t<MenuItem key={i} value={data.value}>{data.label}</MenuItem>\n\t),[]));\n\n  const onSubmit = submitData => {\n    submitData.id = data.id;\n    submitData._method = 'PUT';\n\n    dispatch(editBankAccount({submitData, setError}));\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n    >\n      <DialogTitle>Editar cuenta bancaria #{data.id}</DialogTitle>\n      <DialogContent>\n        <form autoComplete='off' onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            {watch('important_data') === true && (\n              <Grid item xs={12}>\n                <InputMaskHook\n                  control={control}\n                  rules={{\n                    required: '* Campo requerido',\n                    minLength: { value: 20, message: 'Error: Cuenta no válida' },\n                    maxLength: { value: 20, message: 'Error: Cuenta no válida' },\n                  }}\n                  name='n_account'\n                  label='N° de cuenta'\n                  fullWidth\n                  size='small'\n                  variant='standard'\n                  disabled={loading}\n                  defaultValue={data.n_account}\n                  format=\"#### #### #### #### ####\"\n                />\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <InputMaskHook\n                control={control}\n                rules={{\n                  required: '* Campo requerido',\n                  minLength: { value: 9, message: 'Error: RIF no válida' },\n                  maxLength: { value: 9, message: 'Error: RIF no válida' },\n                }}\n                name='rif'\n                label='RIF'\n                fullWidth\n                size='small'\n                variant='standard'\n                disabled={loading}\n                defaultValue={data.rif}\n                format=\"J-########-#\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<InputHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tminLength: { value: 6, message: 'Error: Demaciado corto' },\n\t\t\t\t\t\t\t\t\tmaxLength: { value: 100, message: 'Error: Demaciado largo' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tlabel='Nombre'\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tdefaultValue={data.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<InputHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n\t\t\t\t\t\t\t\t\t\tmessage: 'Error: Correo no válido',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tlabel='Correo'\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tdefaultValue={data.email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='type'\n\t\t\t\t\t\t\t\tlabel='Tipo de cuenta'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdefaultValue={data.type}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=''>\n\t\t\t\t\t\t\t\t\t<em>Ninguno</em>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='ahorro'>\n\t\t\t\t\t\t\t\t\tAhorro\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='corriente'>\n\t\t\t\t\t\t\t\t\tCorriente\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\tlabel='Banco'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdefaultValue={data.code}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=''>\n\t\t\t\t\t\t\t\t\t<em>Ninguno</em>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{MenuItemList}\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n          </Grid>\n          <input type='submit' hidden />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <SwitchHook\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tname='important_data'\n\t\t\t\t\tlabel=\"Modificar campos importantes\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t/>\n        <Button sx={{ml: 1}} color='inherit' disabled={loading} onClick={handleClose}>\n          Cancelar\n        </Button>\n        <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} variant=\"text\" color=\"inherit\">\n          Actualizar\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\n\n// MUI\nimport { Box, Button, Grid, Paper, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { AutoCompleteAsyncHook } from '../../../../components/form/inputs';\n\n// Components\nimport { parseToAccountString } from '../../../../components/Utils/ParseString';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBankAccountsInput } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/getBankAccounts';\nimport { uploadTransactionsRequest } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/uploadTransactions';\n\nexport default function UploadTransactions() {\n  const { autoComplete, loading, progress } = useSelector(state => state.requestStatus.uploadTransactions);\n  const dispatch = useDispatch();\n\n  const { register, control, handleSubmit, watch, formState: { errors } } = useForm({\n\t\tmode: 'onTouched'\n\t});\n\n  const handleRequest = async (valueInput) => {\n    await dispatch(getBankAccountsInput(valueInput));\n  }\n\n  const onSubmit = submitData => {\n    const formData = new FormData();\n\t\tformData.append('transactions', submitData.transactions[0]);\n\n    dispatch(uploadTransactionsRequest({submitData: formData, id: submitData.selected.id}));\n  }\n\n  return (\n    <Paper component='form' autoComplete='off' onSubmit={handleSubmit(onSubmit)} data-tour=\"upload-bank-transaction\" className='paper--padding'>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant='h6' className='text__bold--semi'>\n            Cargar transacciones bancarias\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <AutoCompleteAsyncHook\n            data={autoComplete}\n            name='selected'\n            label='Buscar cuenta bancaria'\n            helperText='Busque la cuenta bancaria a la cual desea cargar las transferencias'\n            control={control}\n            disabled={loading}\n            getOptionLabel={(option) => parseToAccountString(option.n_account) || \"\"}\n            isOptionEqualToValue={(option, value) => option.n_account === value.n_account}\n            handleRequest={handleRequest}\n            rules={{\n              required: { value: true, message: '* Campo requerido' },\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <input\n            id='upload-transactions'\n            {...register('transactions',{\n              required: '* Debe subir un archivo',\n            })}\n            defaultValue={null}\n            style={{display: 'none'}}\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.csv,application/vnd.oasis.opendocument.spreadsheet\"\n            type=\"file\"\n          />\n          <label htmlFor=\"upload-transactions\">\n            <Button variant='contained' color={Boolean(errors.transactions) ? 'error' : 'primary'} disableElevation component='span'>\n              Cargar archivo\n            </Button>\n          </label>\n          {Boolean(errors.transactions) && (\n            <Box fontSize='body1.fontSize' component='span' ml={2} color='#f44336'>\n              {errors.transactions.message}\n            </Box>\n          )}\n          {((watch('transactions')?.length || []).length !== 0) && (\n            <Box fontSize='body1.fontSize' component='span' ml={2}>\n              Archivo cargado\n            </Box>\n          )}\n        </Grid>\n\n        <Grid container justifyContent='flex-end' item xs={12}>\n          <LoadingButton type='submit' loading={loading} loadingIndicator={loading && progress < 99 ? `${progress}%` : null} variant=\"contained\" disableElevation>\n              Cargar\n            </LoadingButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\n\n// MUI\nimport { IconButton, Tooltip } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\n\n// Components\nimport ReactTableBase from '../../../../components/ReactTableBase';\nimport { parseFloatToMoneyString } from '../../../../components/Utils/ParseString';\nimport { BankListSearch } from '../../../../components/Utils/BankList';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { refresh, resetTableConfig, setConfigTable, setSearch } from '../../../../store/slices/tables';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { getBankTransactions } from '../../../../store/slices/tables/async_trunk/configuracion/TableBankTransactions';\n\nexport default function TableTransactions() {\n  const { dataR, loading, pageSize, pageCount, gedure: { bank_transaction_assign, bank_transaction_delete } } = useSelector(state => ({\n    dataR: state.tables.bankTransactions.tableData.data,\n    loading: state.tables.bankTransactions.tableData.loading,\n    pageSize: state.tables.bankTransactions.tableData.pageSize,\n    pageCount: state.tables.bankTransactions.tableData.pageCount,\n    gedure: state.auth.permissions.gedure,\n  }));\n  const dispatch = useDispatch();\n\n  const columns = useMemo(() => [\n    {\n      Header: 'Id',\n      accessor: 'id'\n    },\n    {\n      Header: 'Referencia',\n      accessor: 'reference',\n    },\n    {\n      Header: 'Concepto', \n      accessor: 'concepto'\n    },\n    {\n      Header: 'Fecha de transferencia', \n      accessor: 'date'\n    },\n    {\n      Header: 'Monto', \n      accessor: 'amount',\n      Cell: ({ cell: { row: { original: { amount } } } }) => parseFloatToMoneyString(amount),\n    },\n    {\n      Header: 'Banco', \n      accessor: 'code',\n      Cell: ({ cell: { row: { original: { code } } } }) => BankListSearch[code] || 'No especificado',\n    },\n    {\n      Header: 'Reclamado por', \n      accessor: 'taked_by',\n      Cell: ({ cell: { row: { original: { user } } } }) => user?.privilegio+user?.username || 'No reclamado',\n    },\n    {\n      id: 'options',\n      Header: 'Opciones',\n      accessor: 'options',\n      Cell: ({ cell: { row: { original: { id, amount } } } }) => (\n        <>\n          <Tooltip title='Asignar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_transaction_assign}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id, amount }, select: 'assignTransaction'}));\n              }}\n            >\n              <AssignmentIcon /> \n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Eliminar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_transaction_delete}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id }, select: 'deleteTransaction'}));\n              }}\n            >\n              <DeleteForeverIcon /> \n            </IconButton>\n          </Tooltip>\n        </>\n      )\n    },\n    // eslint-disable-next-line\n  ],[]);\n\n  const data = useMemo(() => dataR, [dataR]);\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let promise = null;\n\n    if (loading) {\n      promise = dispatch(getBankTransactions());\n    }\n\n    return () => {\n      if (loading) {\n        promise.abort(); \n      }\n    }\n    // eslint-disable-next-line\n  }, [loading]);\n\n  // NOTA(RECKER): Reinicar config al desmontar\n  useEffect(() => {\n    return () => {\n      dispatch(resetTableConfig({ select: 'bankTransactions' }));\n    }\n    // eslint-disable-next-line\n  },[]);\n\n  const handleGlobalFilter = value => {\n    dispatch(setSearch({search: value || \"\", select: 'bankTransactions'}));\n  }\n\n  const handleChange = value => {\n    dispatch(setConfigTable({ ...value, select: 'bankTransactions' }));\n  }\n\n  const handleRefresh = () => {\n    dispatch(refresh({ select: 'bankTransactions' }));\n  }\n\n  return (\n    <ReactTableBase\n      title='Cuentas bancarias'\n      data-tour=\"bank-transaction\"\n      dataTourMassive='tableT-massive'\n      dataTourGlobal='tableT-global'\n      data={data}\n      columns={columns}\n      pageCountData={pageCount}\n      pageSizeData={pageSize}\n      loading={loading}\n      handleGlobalFilter={handleGlobalFilter}\n      handleChange={handleChange}\n      refresh={handleRefresh}\n      massiveOptions={dataMassive => (\n        <>\n          <Tooltip title=\"Eliminar\" arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_transaction_delete}\n              onClick={() => {\n                let i = 0;\n\t\t\t\t\t\t\t\tlet idsArray = [];\n\t\t\t\t\t\t\t\tfor(let value of dataMassive){\n\t\t\t\t\t\t\t\t\tidsArray[i] = value.id;\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n                dispatch(setRequestStatus({select: 'deleteMassiveBankTransaction', open: true, data: idsArray}))\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      )}\n    />\n  )\n}","import React from 'react';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/material/styles';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { AutoCompleteAsyncHook } from '../../../../components/form/inputs';\n\n// Components\nimport AnimationDialog from '../../../../components/AnimationDialog';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { parseFloatToMoneyString } from '../../../../components/Utils/ParseString';\nimport { searchUser } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/searchUser';\nimport { assignTransactionRequest } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/assignTransaction';\n\nexport default function AssignTransaction() {\n  const { autoComplete, data, open, loading } = useSelector(state => state.requestStatus.assignTransaction);\n  const dispatch = useDispatch();\n\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const { control, handleSubmit } = useForm({\n    shouldUnregister: true,\n  })\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({open: false, data: {}, select: 'assignTransaction'}))\n  }\n\n  const onSubmit = submitData => {\n    submitData.user_selected = submitData.user_selected.id;\n\n    dispatch(assignTransactionRequest({submitData, id: data.id}));\n  }\n\n  const handleRequest = async (valueInput) => {\n    await dispatch(searchUser(valueInput));\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n      fullScreen={fullScreen}\n    >\n      <DialogTitle>Asignar transacción bancaria #{data.id}</DialogTitle>\n      <DialogContent>\n        <form autoComplete='off' onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <DialogContentText>\n                Ha seleccionado la transacción bancaria <strong>#{data.id}</strong> para asigarla a un usuario, esta acción acreditará <strong>{parseFloatToMoneyString(data.amount || 0)}</strong> a la cuenta del usuario seleccionado.\n              </DialogContentText>\n            </Grid>\n            <Grid item xs={12}>\n              <AutoCompleteAsyncHook\n                data={autoComplete}\n                label='Seleccionar usuario'\n\t\t\t\t\t\t\t  name='user_selected'\n                helperText='Busque al usuario que desea seleccionar'\n                control={control}\n                disabled={loading}\n                getOptionLabel={(option) => `${option.privilegio}${option.username} - ${option.name}` || \"\"}\n                isOptionEqualToValue={(option, value) => option.n_account === value.n_account}\n                handleRequest={handleRequest}\n                rules={{\n                  required: { value: true, message: '* Campo requerido' },\n                }}\n              />\n\t\t\t\t\t\t</Grid>\n          </Grid>\n          <input type='submit' hidden />\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button sx={{ml: 1}} color='inherit' disabled={loading} onClick={handleClose}>\n          Cancelar\n        </Button>\n        <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} variant=\"text\" color=\"inherit\">\n          Asignar\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\n\n// MUI\nimport { Grid } from '@mui/material';\n\n// Components\nimport TourPagos from '../TourPagos';\nimport CreateBankAccount from './CreateBankAccount';\nimport TableAccounts from './TableAccounts';\nimport DialogConfirmation from '../../../../components/DialogConfirmation';\nimport { parseToAccountString } from '../../../../components/Utils/ParseString';\nimport EditBankAccount from './EditBankAccount';\nimport UploadTransactions from './UploadTransactions';\nimport TableTransactions from './TableTransactions';\nimport AssignTransaction from './AssignTransaction';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { deleteBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteBankAccount';\nimport { deleteBankTransaction } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteBankTransaction';\nimport { deleteMassiveBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteMassiveBankAccount';\nimport { deleteMassiveBankTransaction } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteMassiveBankTransaction';\n\nexport default function GDPagos() {\n  const { gedure } = useSelector((state) => ({\n\t\tgedure: state.auth.permissions.gedure,\n\t}));\n\n  return (\n    <Grid container spacing={2} sx={{paddingBottom: 6}}>\n      {gedure.bank_account_create && (\n        <Grid item xs={12}>\n          <CreateBankAccount />\n        </Grid>\n      )}\n      {gedure.bank_account_index && (\n        <Grid item xs={12}>\n          <TableAccounts />\n          <EditBankAccount />\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteBankAccount'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteBankAccount'})\n            }\n            request={\n              data => deleteBankAccount(data.id)\n            }\n          >\n            {(data) => (<span>Está a punto de <strong>eliminar</strong> la cuenta <strong>{parseToAccountString(data?.n_account || '')}</strong>. Al realizarse esta acción todas las <strong>transacciones bancarias</strong> registradas de la misma <strong>serán borradas</strong>, pero las <strong>transacciones internas</strong> realizadas dentro del sistema <strong>no se verán afectadas</strong>. Tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteBankAccountMassive'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteBankAccountMassive'})\n            }\n            request={\n              data => deleteMassiveBankAccount(data)\n            }\n          >\n            {(data) => (<span>Está a punto de <strong>eliminar</strong> <strong>{data?.length}</strong> cuenta(s). Al realizarse esta acción todas las <strong>transacciones bancarias</strong> registradas de la misma <strong>serán borradas</strong>, pero las <strong>transacciones internas</strong> realizadas dentro del sistema <strong>no se verán afectadas</strong>. Tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n        </Grid>\n      )}\n      {gedure.bank_transaction_upload && (\n        <Grid item xs={12}>\n          <UploadTransactions />\n        </Grid>\n      )}\n      {gedure.bank_transaction_index && (\n        <Grid item xs={12}>\n          <TableTransactions />\n          <AssignTransaction />\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteTransaction'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteTransaction'})\n            }\n            request={\n              data => deleteBankTransaction(data.id)\n            }\n          >\n            {(data) => (<span>Está a punto de eliminar la transacción <strong>#{data.id}</strong>, tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteMassiveBankTransaction'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteMassiveBankTransaction'})\n            }\n            request={\n              data => deleteMassiveBankTransaction(data)\n            }\n          >\n            {(data) => (<span>Está a punto de <strong>eliminar {data?.length}</strong> transaccione(s), tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n        </Grid>\n      )}\n      <TourPagos />\n    </Grid>\n  )\n}\n"],"names":["AnimationDialog","React","props","ref","direction","DialogConfirmation","rdx1","rdx2","close","request","children","useSelector","state","open","loading","data","dispatch","useDispatch","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","TransitionComponent","id","disabled","onClick","color","GlobalFilter","setGlobalFilter","gotoPage","dataTourGlobal","useState","globalFilter","value","setValue","onDebounce","useAsyncDebounce","undefined","TextField","size","placeholder","variant","autoComplete","onChange","event","target","sx","mr","InputProps","startAdornment","InputAdornment","position","Search","endAdornment","IconButton","Clear","IndeterminateCheckbox","indeterminate","rest","defaultRef","resolvedRef","current","Checkbox","type","ReactTableBase","columns","pageSizeData","pageCountData","handleGlobalFilter","handleChange","filter","massiveOptions","title","refresh","dataTourMassive","tableInstance","useTable","initialState","hiddenColumns","pageSize","pageIndex","manualPagination","pageCount","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","selectedFlatRows","allColumns","canPreviousPage","canNextPage","nextPage","previousPage","setPageSize","pageOptions","useEffect","Grid","container","spacing","item","xs","Paper","Backdrop","zIndex","appBar","CircularProgress","Toolbar","length","bgcolor","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","component","noWrap","map","d","original","Tooltip","arrow","column","toggleHidden","Group","Refresh","TableContainer","Box","overflow","minWidth","Table","TableHead","th","border","headerGroup","TableRow","td","getHeaderGroupProps","headers","TableCell","padding","getHeaderProps","render","align","TableBody","height","getRowProps","cells","cell","getCellProps","colSpan","textAlign","TableFooter","justifyContent","alignItems","Select","labelId","label","e","Number","MenuItem","FirstPage","NavigateBefore","fontSize","NavigateNext","LastPage","steps","select","version","tourOpen","configs","tour","isOpen","disableInteraction","onAfterOpen","document","body","style","overflowY","onBeforeClose","showNavigationNumber","showCloseButton","rounded","lastStepNextButton","updateTour","BankList","BankListSearch","InputHook","name","control","rules","defaultValue","helperText","useController","field","inputProps","fieldState","invalid","error","inputRef","message","InputPasswordHook","visibility","setVisibility","InputMaskHook","format","parseFloat","customInput","onValueChange","values","mask","AutoCompleteHook","multiple","options","required","isOptionEqualToValue","getOptionLabel","Autocomplete","newValue","noOptionsText","renderInput","params","AutoCompleteAsyncHook","handleRequest","renderOption","renderTags","limitTags","setOpen","setOptions","inputValue","setInputValue","hasFinish","setHasFinish","active","refreshResults","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","onOpen","onClose","onInputChange","loadingText","Boolean","SelectHook","SwitchHook","labelPlacement","currentTarget","checked","userSelect","TourPagos","selector","content","goTo","className","Button","backgroundColor","background","paper","TourComponent","CreateBankAccount","requestStatus","createBankAccount","useForm","handleSubmit","setError","MenuItemList","i","onSubmit","submitData","sm","md","minLength","maxLength","fullWidth","pattern","LoadingButton","disableElevation","TableAccounts","dataR","tables","bankAccounts","tableData","gedure","auth","permissions","bank_account_edit","bank_account_destroy","useMemo","accessor","n_account","parseToAccountString","code","rif","email","setRequestStatus","Edit","DeleteForever","promise","getBankAccounts","abort","resetTableConfig","setSearch","search","setConfigTable","dataMassive","idsArray","EditBankAccount","editBankAccount","shouldUnregister","watch","_method","Dialog","DialogTitle","DialogContent","hidden","DialogActions","ml","UploadTransactions","uploadTransactions","progress","mode","register","errors","formState","valueInput","getBankAccountsInput","formData","FormData","append","transactions","uploadTransactionsRequest","selected","option","display","accept","htmlFor","loadingIndicator","TableTransactions","bankTransactions","bank_transaction_assign","bank_transaction_delete","amount","parseFloatToMoneyString","user","privilegio","username","Assignment","getBankTransactions","AssignTransaction","assignTransaction","user_selected","assignTransactionRequest","searchUser","DialogContentText","GDPagos","paddingBottom","bank_account_create","bank_account_index","deleteBankAccount","deleteMassiveBankAccount","bank_transaction_upload","bank_transaction_index","deleteBankTransaction","deleteMassiveBankTransaction"],"sourceRoot":""}