{"version":3,"file":"static/js/1373.2e25a0f6.chunk.js","mappings":"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","sources":["components/Utils/GeneratePassword.js","components/form/inputs/InputHook.js","components/form/inputs/InputPasswordHook.js","components/form/inputs/InputMaskHook.js","components/form/inputs/AutoCompleteHook.js","components/form/inputs/AutoCompleteAsyncHook.js","hooks/useAsyncDebounce.js","pages/gedure/cuenta/credenciales/CPassword.js","pages/gedure/usuarios/ver/credenciales/PPassword.js"],"sourcesContent":["function generatePassword(size) {\n\tlet charset = \"ABCDEFGHIJKMNPQRSTUVWXYZ123456789\";\n\tlet password = \"\";\n\tfor (var i = 0, n = charset.length; i < size; ++i) {\n\t\t\tpassword += charset.charAt(Math.floor(Math.random() * n));\n\t}\n\treturn password;\n}\n\nexport default generatePassword;","import { TextField } from \"@mui/material\";\n\nimport { useController } from \"react-hook-form\";\n\nexport function InputHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\t\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t/>\n\t);\n}","import React, { useState } from 'react';\n\n// MUI\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\n// Icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n// FormHook\nimport { useController } from \"react-hook-form\";\n\nexport function InputPasswordHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n  const [visibility, setVisibility] = useState(false);\n\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\tconst handleClick = () => {\n\t\tsetVisibility(!visibility);\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n      type={visibility ? 'text' : 'password'}\n      InputProps={{\n\t\t\t\tendAdornment: (\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<IconButton onClick={handleClick} size={rest?.size}>\n\t\t\t\t\t\t\t{visibility ? <VisibilityOffIcon /> : <VisibilityIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n}","import { TextField } from \"@mui/material\";\nimport { useController } from \"react-hook-form\";\n\nimport NumberFormat from 'react-number-format';\n\nexport function InputMaskHook({ \n\tname, \n\tcontrol,\n\trules = null,\n\tdefaultValue = '',\n\thelperText = '',\n\t...rest \n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<NumberFormat\n\t\t\t{...rest}\n\t\t\t{...inputProps}\n\t\t\tvalue={(rest.format ? value : parseFloat(value)) || ''}\n\t\t\tcustomInput={TextField}\n\t\t\terror={invalid}\n\t\t\tonValueChange={(values) => {\n\t\t\t\tonChange(values?.value || '');\n\t\t\t}}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t\tmask='_'\n\t\t/>\n\t);\n}","import { Autocomplete, TextField } from '@mui/material'\nimport React from 'react'\nimport { useController } from 'react-hook-form';\n\nexport function AutoCompleteHook({\n  multiple,\n  options,\n  name,\n  control,\n  defaultValue,\n  rules = { required: '* Campo requerido' },\n  isOptionEqualToValue,\n  getOptionLabel,\n  helperText,\n  disabled,\n  ...rest\n}) {\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  return (\n    <Autocomplete\n\t\t\t{...inputProps}\n\t\t\tonChange={(e, newValue) => {\n\t\t\t\tonChange(newValue);\n\t\t\t}}\n\t\t\tmultiple={multiple}\n\t\t\toptions={options}\n\t\t\tnoOptionsText='No hay resultados'\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disabled={disabled}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\terror={invalid}\n\t\t\t\t\thelperText={error ? error.message : helperText}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\n\n// MUI\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\n\n// Form\nimport { useController } from \"react-hook-form\";\nimport useAsyncDebounce from '../../../hooks/useAsyncDebounce';\n\nexport function AutoCompleteAsyncHook({\n  name,\n  control,\n  rules = null, \n  data = [],\n\tdefaultValue = '',\n  helperText = '',\n  getOptionLabel,\n  isOptionEqualToValue,\n  multiple,\n  handleRequest,\n  disabled,\n  renderOption,\n  renderTags,\n  limitTags,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasFinish, setHasFinish] = useState(true);\n  const loading = hasFinish && (open && options.length === 0);\n\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let active = true;\n\n    const request = async () => {\n      await handleRequest(inputValue);\n    }\n\n    if (!loading) {\n      return undefined;\n    }\n\n    if (active) {\n      request();\n    }\n\n    return () => {\n      active = false;\n    };\n\n    // eslint-disable-next-line\n  }, [loading]);\n\n\n  // NOTA(RECKER): Reset\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setHasFinish(true);\n    }\n\n    // eslint-disable-next-line\n  }, [open]);\n\n  // NOTA(RECKER): Actualizar options\n  useEffect(() => {\n    if (data !== null) {\n      setOptions(data);\n      setHasFinish(false);\n    }\n  }, [data]);\n\n  // NOTA(REKCER): Refresh data\n  // eslint-disable-next-line\n\tconst refreshResults = useCallback(\n\t\tuseAsyncDebounce(() => {\n      setOptions([]);\n      setHasFinish(true);\n\t\t},500),\n\t[]);\n\n  return (\n    <Autocomplete\n      multiple={multiple}\n      id={`autocomplete-${name}`}\n      options={options}\n      open={open}\n      onOpen={() => {\n\t\t\t\tsetOpen(true);\n        setHasFinish(true);\n\t\t\t}}\n\t\t\tonClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n      onChange={(e,value) => {\n        onChange(value);\n      }}\n      inputValue={inputValue}\n      onInputChange={(e, newValue) => {\n\t\t\t\tsetInputValue(newValue);\n        if (e?.type === 'change') {\n          refreshResults();\n        }\n\t\t\t}}\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      loading={loading}\n      loadingText='Cargando...'\n\t\t\tnoOptionsText='No hay resultados'\n      renderTags={renderTags}\n      disabled={disabled}\n      renderOption={renderOption}\n      limitTags={limitTags}\n      renderInput={(params) => (\n        <TextField \n          {...params}\n          {...inputProps}\n          {...rest}\n          inputRef={ref}\n          error={Boolean(error)}\n          helperText={error ? error.message : helperText}\n          InputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress color='inherit' size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n        />\n      )}\n    />\n  )\n}\n","export default function useAsyncDebounce(callback, delay) {\n\tlet timer;\n\t\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => callback(...args), delay)\n\t}\n}","import React from 'react';\n\n// Form\nimport { useForm } from 'react-hook-form';\n\n// Components\nimport { PPasswordForm } from '../../usuarios/ver/credenciales/PPassword';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateData } from '../../../../store/slices/requestStatus/async_trunk/users/updateData';\nimport { updateUserData } from '../../../../store/slices/auth';\n\nexport default function CPassword() {\n  const loading = useSelector(state => state.requestStatus.personalData.loadingPP);\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control, setValue } = useForm();\n\n  const handleUpdate = ({ user }) => {\n    dispatch(updateUserData({ user }));\n  }\n\n  const onSubmit = submitData => {\n    submitData._method = 'PUT';\n\n    dispatch(updateData({\n      submitData, \n      loading: 'loadingPP', \n      personal: true,\n      handleUpdate,\n    }));\n  }\n\n  return (\n    <PPasswordForm\n      control={control}\n      handleSubmit={handleSubmit(onSubmit)}\n      loading={loading}\n      setValue={setValue}\n      helperText='* Campo requerido'\n    />\n  )\n}\n","import React, { useState } from 'react'\n\n// Router\nimport { useParams } from 'react-router-dom'\n\n// MUI\nimport { Divider, Grid, Typography, Box, FormControlLabel, Switch } from '@mui/material'\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm, useWatch } from 'react-hook-form'\nimport { InputPasswordHook } from '../../../../../components/form/inputs';\n\n// Components\nimport generatePassword from '../../../../../components/Utils/GeneratePassword';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateData } from '../../../../../store/slices/requestStatus/async_trunk/users/updateData';\n\nexport function PPasswordForm({ control, setValue, loading, helperText }) {\n  const [generatePass, setGeneratePass] = useState(false);\n  const password = useWatch({\n    name: 'password',\n    control,\n  });\n\n  const handleGeneratePass = (event) => {\n\t\tif (event.target.checked) {\n\t\t\tconst simplePW = generatePassword(4);\n\t\t\tsetValue('password', simplePW);\n\t\t\tsetValue('repeat_password', simplePW);\n\t\t\tsetGeneratePass(event.target.checked);\n\t\t}else {\n\t\t\tsetValue('password', '');\n\t\t\tsetValue('repeat_password', '');\n\t\t\tsetGeneratePass(event.target.checked);\n\t\t}\n\t}\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6' component='span' className='text__bold--semi'>\n          Cambiar contraseña\n        </Typography>\n        <Box mt={1}>\n          <Divider />\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <InputPasswordHook\n          control={control}\n          rules={{\n            required: '* Campo requerido',\n            minLength: { value: 4, message: 'Error: No válido' },\n            maxLength: { value: 25, message: 'Error: No válida' }\n          }}\n          name='password'\n          label='Contraseña'\n          helperText={helperText}\n          size='small'\n          fullWidth\n          disabled={loading}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputPasswordHook\n          control={control}\n          rules={{\n            required: '* Campo requerido',\n            minLength: { value: 4, message: 'Error: No válido' },\n            maxLength: { value: 25, message: 'Error: No válida' },\n            validate: value => value === password || 'Error: La contraseña no coincide'\n          }}\n          name='repeat_password'\n          label='Repetir contraseña'\n          helperText='* Campo requerido'\n          size='small'\n          fullWidth\n          disabled={loading}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <FormControlLabel\n          control={<Switch value={generatePass} onChange={handleGeneratePass} disabled={loading} color=\"primary\" />}\n          label=\"Generar contraseña\"\n        />\n      </Grid>\n      {generatePass && (\n        <Grid item xs={12}>\n          <Typography className='text__opacity--semi'>\n            Contraseña generada: {password}\n          </Typography>\n        </Grid>\n      )}\n      <Grid container justifyContent='flex-end' item xs={12}>\n        <LoadingButton\n          variant='contained' \n          loading={loading}\n          disableElevation\n          type='submit'\n        >\n          Cambiar contraseña\n        </LoadingButton>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default function PPassword() {\n  const { id } = useParams();\n\n  const loading = useSelector(state => state.requestStatus.personalData.loadingPP);\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control, setValue } = useForm();\n\n  const onSubmit = submitData => {\n    submitData._method = 'PUT';\n\n    dispatch(updateData({submitData, id, loading: 'loadingPP'}));\n  }\n\n  return (\n    <form autoComplete='off' onSubmit={handleSubmit(onSubmit)}>\n      <PPasswordForm\n        control={control}\n        loading={loading}\n        setValue={setValue}\n        helperText='Tenga en cuenta que una vez cambiada la contraseña el usuario ya no podrá acceder con su contraseña antigüa, asegurese de informar al usuario de este cambio'\n      />\n    </form>\n  )\n}\n"],"names":["size","charset","password","i","n","length","charAt","Math","floor","random","InputHook","name","control","rules","defaultValue","helperText","rest","useController","field","ref","inputProps","fieldState","invalid","error","inputRef","message","InputPasswordHook","useState","visibility","setVisibility","type","InputProps","endAdornment","position","onClick","InputMaskHook","onChange","value","format","parseFloat","customInput","TextField","onValueChange","values","mask","AutoCompleteHook","multiple","options","required","isOptionEqualToValue","getOptionLabel","disabled","Autocomplete","e","newValue","noOptionsText","renderInput","params","AutoCompleteAsyncHook","data","handleRequest","renderOption","renderTags","limitTags","open","setOpen","setOptions","inputValue","setInputValue","hasFinish","setHasFinish","loading","useEffect","active","request","refreshResults","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","useAsyncDebounce","id","onOpen","onClose","onInputChange","loadingText","Boolean","CircularProgress","color","CPassword","useSelector","state","requestStatus","personalData","loadingPP","dispatch","useDispatch","useForm","handleSubmit","setValue","handleUpdate","user","updateUserData","PPasswordForm","submitData","_method","updateData","personal","generatePass","setGeneratePass","useWatch","container","spacing","item","xs","variant","component","className","mt","minLength","maxLength","label","fullWidth","validate","event","target","checked","simplePW","generatePassword","justifyContent","disableElevation","PPassword","useParams","autoComplete","onSubmit"],"sourceRoot":""}