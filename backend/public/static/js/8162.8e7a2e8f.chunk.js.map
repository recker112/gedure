{"version":3,"file":"static/js/8162.8e7a2e8f.chunk.js","mappings":"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","sources":["components/AnimationDialog.js","components/DialogConfirmation.js","components/ReactTableBase/GlobalFilter.js","components/ReactTableBase/IndeterminateCheckbox.js","components/ReactTableBase/index.js","components/Utils/BankList.js","components/form/inputs/InputHook.js","components/form/inputs/InputPasswordHook.js","components/form/inputs/InputMaskHook.js","components/form/inputs/AutoCompleteHook.js","components/form/inputs/AutoCompleteAsyncHook.js","hooks/useAsyncDebounce.js","components/form/select/index.js","components/form/switch/index.js","pages/gedure/configuracion/pagos/CreateBankAccount.js","pages/gedure/configuracion/pagos/TableAccounts.js","pages/gedure/configuracion/pagos/EditBankAccount.js","pages/gedure/configuracion/pagos/UploadTransactions.js","pages/gedure/configuracion/pagos/TableTransactions.js","pages/gedure/configuracion/pagos/AssignTransaction.js","pages/gedure/configuracion/pagos/index.js"],"sourcesContent":["import React from 'react';\n\n// MUI\nimport { Slide } from '@mui/material';\n\nconst AnimationDialog = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default AnimationDialog;","import React from 'react'\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material'\n\n// Components\nimport AnimationDialog from './AnimationDialog'\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux'\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nexport default function DialogConfirmation({ rdx1, rdx2, close, request, children }) {\n  const { open, loading, data } = useSelector(state => state[rdx1][rdx2]);\n  const dispatch = useDispatch();\n\n  const handleRequest = () => {\n    dispatch(request(data));\n  }\n\n  const handleClose = () => {\n    dispatch(close);\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n      aria-labelledby=\"confirm-dialog-title\"\n      aria-describedby=\"confirm-dialog-description\"\n    >\n      <DialogTitle>¿Está seguro?</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"confirm-dialog-description\">\n          {children(data)}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n\t\t\t\t<Button disabled={loading} onClick={handleClose} color=\"inherit\">\n\t\t\t\t\tCancelar\n\t\t\t\t</Button>\n        <LoadingButton onClick={handleRequest} loading={loading} color=\"inherit\">\n          Confirmar\n        </LoadingButton>\n\t\t\t</DialogActions>\n    </Dialog>\n  )\n}","import React, { useState } from \"react\";\n\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nimport { useAsyncDebounce } from \"react-table\";\n\nexport function GlobalFilter(props) {\n  const { state, setGlobalFilter, gotoPage } = props;\n  const [value, setValue] = useState(state.globalFilter);\n\n  const onDebounce = useAsyncDebounce((value) => {\n    setGlobalFilter(value || undefined);\n    gotoPage(0);\n  }, 500);\n\n  const handleClear = () => {\n    setValue(\"\");\n    setGlobalFilter(undefined);\n    gotoPage(0);\n  }\n\n  return (\n    <TextField\n      data-tour=\"gdTable__search\"\n      size=\"small\"\n      value={value || \"\"}\n      placeholder=\"Buscar...\"\n      variant='standard'\n      onChange={(event) => {\n        onDebounce(event.target.value);\n        setValue(event.target.value);\n      }}\n      sx={{\n        mr: 1,\n      }}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\"><SearchIcon /></InputAdornment>,\n        endAdornment: <IconButton disabled={!value} onClick={handleClear}><ClearIcon /></IconButton>\n      }} />\n  );\n}\n","import React from \"react\";\nimport { Checkbox } from \"@mui/material\";\n\nexport const IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <Checkbox\n        type=\"checkbox\"\n        ref={resolvedRef}\n        indeterminate={indeterminate}\n        color={indeterminate ? 'default' : 'primary'}\n        {...rest} />\n    );\n  }\n);\n","import React, { useEffect } from \"react\";\n\n// MUI\nimport {\n  Backdrop,\n  Box,\n  CircularProgress,\n  Grid,\n  IconButton,\n  MenuItem,\n  Paper,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TableRow,\n  Toolbar,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { alpha } from \"@mui/material/styles\";\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\nimport NavigateBeforeIcon from \"@mui/icons-material/NavigateBefore\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\nimport GroupIcon from \"@mui/icons-material/Group\";\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\n// Table\nimport {\n  useTable,\n  useGlobalFilter,\n  useRowSelect,\n  usePagination,\n} from \"react-table\";\n\n// Components\nimport { GlobalFilter } from \"./GlobalFilter\";\nimport { IndeterminateCheckbox } from \"./IndeterminateCheckbox\";\n\nexport default function ReactTableBase({\n  data,\n  columns,\n  pageSizeData,\n  pageCountData,\n  loading,\n  handleGlobalFilter,\n  handleChange,\n  filter,\n  massiveOptions,\n  title,\n  refresh\n}) {\n  const tableInstance = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        hiddenColumns: [\"massiveSelection\"],\n        pageSize: pageSizeData,\n        pageIndex: 0,\n      },\n      manualPagination: true,\n      pageCount: pageCountData,\n    },\n    useGlobalFilter,\n    usePagination,\n    useRowSelect,\n    (hooks) => {\n      hooks.visibleColumns.push((columns) => [\n        {\n          id: \"massiveSelection\",\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n          ),\n          Cell: ({ row }) => (\n            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n          ),\n        },\n        ...columns,\n      ]);\n    }\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    selectedFlatRows,\n    allColumns,\n    canPreviousPage,\n    canNextPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    pageOptions,\n    gotoPage,\n    pageCount,\n  } = tableInstance;\n\n  const { pageIndex, pageSize } = state;\n\n  useEffect(() => {\n    handleChange({ pageIndex, pageSize });\n    // eslint-disable-next-line\n  }, [pageIndex, pageSize]);\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Paper sx={{ position: \"relative\" }}>\n          <Backdrop\n            sx={{\n              color: \"#fff\",\n              zIndex: (theme) => theme.zIndex.appBar - 1,\n              position: \"absolute\",\n            }}\n            open={loading}\n          >\n            <CircularProgress />\n          </Backdrop>\n          <Toolbar\n            sx={{\n              ...(selectedFlatRows.length > 0 && {\n                bgcolor: (theme) =>\n                  alpha(\n                    theme.palette.primary.main,\n                    theme.palette.action.activatedOpacity\n                  ),\n              }),\n            }}\n          >\n            {selectedFlatRows.length > 0 ? (\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                color=\"inherit\"\n                variant=\"subtitle1\"\n                component=\"div\"\n                noWrap\n              >\n                {selectedFlatRows.length} seleccionada(s)\n              </Typography>\n            ) : (\n              <Typography\n                sx={{ flex: \"1 1 100%\" }}\n                variant=\"h6\"\n                id=\"registros\"\n                component=\"div\"\n                noWrap\n              >\n                {title}\n              </Typography>\n            )}\n            <GlobalFilter\n              state={state}\n              setGlobalFilter={handleGlobalFilter}\n              gotoPage={gotoPage}\n            />\n            {selectedFlatRows.length > 0 ? (\n              massiveOptions(selectedFlatRows.map(\n                (d) => d.original\n              ))\n            ) : (\n              <>\n                {massiveOptions && (\n                  <Tooltip title=\"Opciones massivas\" arrow>\n                    <IconButton\n                      component=\"span\"\n                      onClick={() => {\n                        allColumns.map((column) => {\n                          if (column.id  === 'massiveSelection') {\n                            column.toggleHidden();\n                          } else if (column.id === 'options') {\n                            column.toggleHidden();\n                          }\n                          return null;\n                        });\n                      }}\n                      data-tour=\"gdTable__massive\"\n                      disabled={selectedFlatRows.length > 0}\n                    >\n                      <GroupIcon />\n                    </IconButton>\n                  </Tooltip>\n                )}\n                <Tooltip title='Recargar' arrow>\n                  <IconButton\n                    component=\"span\"\n                    onClick={refresh}\n                    data-tour=\"gdTable__refresh\"\n                  >\n                    <RefreshIcon />\n                  </IconButton>\n                </Tooltip>\n                {filter}\n              </>\n            )}\n          </Toolbar>\n          <TableContainer>\n            <Box overflow=\"auto\" minWidth={352}>\n              <Table\n                sx={{ minWidth: 650 }}\n                aria-label=\"React Table\"\n                {...getTableProps()}\n              >\n                <TableHead sx={{ th: { border: 0 } }}>\n                  {headerGroups.map((headerGroup) => (\n                    <TableRow\n                      sx={{ td: { border: 0 } }}\n                      {...headerGroup.getHeaderGroupProps()}\n                    >\n                      {headerGroup.headers.map((column) => {\n                        if (column.id === \"massiveSelection\") {\n                          return (\n                            <TableCell\n                              padding=\"checkbox\"\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render(\"Header\")}\n                            </TableCell>\n                          );\n                        } else if (column.Header === \"Opciones\") {\n                          return (\n                            <TableCell\n                              align=\"right\"\n                              {...column.getHeaderProps()}\n                            >\n                              {column.render(\"Header\")}\n                            </TableCell>\n                          );\n                        }\n\n                        return (\n                          <TableCell {...column.getHeaderProps()}>\n                            {column.render(\"Header\")}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  ))}\n                </TableHead>\n                <TableBody {...getTableBodyProps()}>\n                  {page.map((row) => {\n                    prepareRow(row);\n                    return (\n                      <TableRow sx={{ height: \"73px\" }} {...row.getRowProps()}>\n                        {row.cells.map((cell) => {\n                          if (cell.column.id === \"massiveSelection\") {\n                            return (\n                              <TableCell\n                                padding=\"checkbox\"\n                                {...cell.getCellProps()}\n                              >\n                                {cell.render(\"Cell\")}\n                              </TableCell>\n                            );\n                          } else if (cell.column.Header === \"Opciones\") {\n                            return (\n                              <TableCell align=\"right\" {...cell.getCellProps()}>\n                                {cell.render(\"Cell\")}\n                              </TableCell>\n                            );\n                          }\n\n                          return (\n                            <TableCell {...cell.getCellProps()}>\n                              {cell.render(\"Cell\")}\n                            </TableCell>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n                  {page.length === 0 && (\n                    <TableRow>\n                      <TableCell colSpan=\"100%\">\n                        <Typography textAlign=\"center\">\n                          No se han encontrado resultados\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </Box>\n            <Box overflow=\"auto\" minWidth={352}>\n              <Table>\n                <TableFooter>\n                  <TableRow>\n                    <TableCell colSpan=\"100%\" sx={{ border: 0 }}>\n                      <Grid\n                        container\n                        justifyContent=\"flex-end\"\n                        alignItems=\"center\"\n                        spacing={1}\n                        item\n                        xs={12}\n                      >\n                        <Grid item>\n                          <Select\n                            labelId=\"page-size-table-label\"\n                            id=\"page-size-table\"\n                            value={pageSize}\n                            label=\"Filas\"\n                            variant=\"standard\"\n                            onChange={(e) => {\n                              setPageSize(Number(e.target.value));\n                            }}\n                          >\n                            {[5, 10, 20, 30, 40, 50].map((pageSize) => (\n                              <MenuItem key={pageSize} value={pageSize}>\n                                {pageSize} Filas\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Primera página\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={() => gotoPage(0)}\n                              disabled={!canPreviousPage}\n                            >\n                              <FirstPageIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Anterior\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={previousPage}\n                              disabled={!canPreviousPage}\n                            >\n                              <NavigateBeforeIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Box\n                            component=\"span\"\n                            fontSize=\"body2.fontSize\"\n                            color=\"text.secondary\"\n                          >\n                            {pageIndex + 1} de {pageOptions.length}\n                          </Box>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Siguiente\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={nextPage}\n                              disabled={!canNextPage}\n                            >\n                              <NavigateNextIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                        <Grid item>\n                          <Tooltip title=\"Última página\" arrow>\n                            <IconButton\n                              component=\"span\"\n                              onClick={() => gotoPage(pageCount - 1)}\n                              disabled={!canNextPage}\n                            >\n                              <LastPageIcon />\n                            </IconButton>\n                          </Tooltip>\n                        </Grid>\n                      </Grid>\n                    </TableCell>\n                  </TableRow>\n                </TableFooter>\n              </Table>\n            </Box>\n          </TableContainer>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","export const BankList = [\n\t{\n\t\tvalue: '0102',\n\t\tlabel: 'Banco de Venezuela'\n\t},\n\t{\n\t\tvalue: '0104',\n\t\tlabel: 'Venezolano de Crédito'\n\t},\n\t{\n\t\tvalue: '0105',\n\t\tlabel: 'Mercantil'\n\t},\n\t{\n\t\tvalue: '0108',\n\t\tlabel: 'Provincial'\n\t},\n\t{\n\t\tvalue: '0114',\n\t\tlabel: 'Bancaribe'\n\t},\n\t{\n\t\tvalue: '0115',\n\t\tlabel: 'Exterior'\n\t},\n\t{\n\t\tvalue: '0116',\n\t\tlabel: 'Occidental de Descuento'\n\t},\n\t{\n\t\tvalue: '0128',\n\t\tlabel: 'Banco Caroní'\n\t},\n\t{\n\t\tvalue: '0134',\n\t\tlabel: 'Banesco'\n\t},\n\t{\n\t\tvalue: '0138',\n\t\tlabel: 'Banco Plaza'\n\t},\n\t{\n\t\tvalue: '0151',\n\t\tlabel: 'BFC Banco Fondo Común'\n\t},\n\t{\n\t\tvalue: '0156',\n\t\tlabel: '100% Banco'\n\t},\n\t{\n\t\tvalue: '0157',\n\t\tlabel: 'Delsur'\n\t},\n\t{\n\t\tvalue: '0163',\n\t\tlabel: 'Banco del Tesoro'\n\t},\n\t{\n\t\tvalue: '0166',\n\t\tlabel: 'Banco Agrícola de Venezuela'\n\t},\n\t{\n\t\tvalue: '0168',\n\t\tlabel: 'Bancrecer'\n\t},\n\t{\n\t\tvalue: '0169',\n\t\tlabel: 'Mi Banco'\n\t},\n\t{\n\t\tvalue: '0171',\n\t\tlabel: 'Banco Activo'\n\t},\n\t{\n\t\tvalue: '0172',\n\t\tlabel: 'Bancamiga'\n\t},\n\t{\n\t\tvalue: '0174',\n\t\tlabel: 'Banplus'\n\t},\n\t{\n\t\tvalue: '0175',\n\t\tlabel: 'Bicentenario del Pueblo'\n\t},\n\t{\n\t\tvalue: '0177',\n\t\tlabel: 'Banfanb'\n\t},\n\t{\n\t\tvalue: '0191',\n\t\tlabel: 'BNC Nacional de Crédito'\n\t},\n];\n\nexport const BankListSearch = {\n\t'0102': 'Banco de Venezuela',\n\t'0104': 'Venezolano de Crédito',\n\t'0105': 'Mercantil',\n\t'0108': 'Provincial',\n\t'0114': 'Bancaribe',\n\t'0115': 'Exterior',\n\t'0116': 'Occidental de Descuento',\n\t'0128': 'Banco Caroní',\n\t'0134': 'Banesco',\n\t'0138': 'Banco Plaza',\n\t'0151': 'BFC Banco Fondo Común',\n\t'0156': '100% Banco',\n\t'0157': 'Delsur',\n\t'0163': 'Banco del Tesoro',\n\t'0166': 'Banco Agrícola de Venezuela',\n\t'0168': 'Bancrecer',\n\t'0169': 'Mi Banco',\n\t'0171': 'Banco Activo',\n\t'0172': 'Bancamiga',\n\t'0174': 'Banplus',\n\t'0175': 'Bicentenario del Pueblo',\n\t'0177': 'Banfanb',\n\t'0191': 'BNC Nacional de Crédito'\n}","import { TextField } from \"@mui/material\";\n\nimport { useController } from \"react-hook-form\";\n\nexport function InputHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\t\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t/>\n\t);\n}","import React, { useState } from 'react';\n\n// MUI\nimport { IconButton, InputAdornment, TextField } from \"@mui/material\";\n// Icons\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\n\n// FormHook\nimport { useController } from \"react-hook-form\";\n\nexport function InputPasswordHook({ \n\tname, \n\tcontrol,\n\trules = null, \n\tdefaultValue = '',\n\thelperText = '',\n\t...rest\n}) {\n  const [visibility, setVisibility] = useState(false);\n\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\tconst handleClick = () => {\n\t\tsetVisibility(!visibility);\n\t};\n\n\treturn (\n\t\t<TextField\n\t\t\tinputRef={ref}\n\t\t\t{...inputProps}\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t\thelperText={error ? error.message : helperText}\n      type={visibility ? 'text' : 'password'}\n      InputProps={{\n\t\t\t\tendAdornment: (\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t<IconButton onClick={handleClick} size={rest?.size}>\n\t\t\t\t\t\t\t{visibility ? <VisibilityOffIcon /> : <VisibilityIcon />}\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t);\n}","import { TextField } from \"@mui/material\";\nimport { useController } from \"react-hook-form\";\n\nimport NumberFormat from 'react-number-format';\n\nexport function InputMaskHook({ \n\tname, \n\tcontrol,\n\trules = null,\n\tdefaultValue = '',\n\thelperText = '',\n\t...rest \n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<NumberFormat\n\t\t\t{...rest}\n\t\t\t{...inputProps}\n\t\t\tvalue={Number(value) || ''}\n\t\t\tcustomInput={TextField}\n\t\t\terror={invalid}\n\t\t\tonValueChange={(values) => {\n\t\t\t\tonChange(values?.value || '');\n\t\t\t}}\n\t\t\thelperText={error ? error.message : helperText}\n\t\t\tmask='_'\n\t\t/>\n\t);\n}","import { Autocomplete, TextField } from '@mui/material'\nimport React from 'react'\nimport { useController } from 'react-hook-form';\n\nexport function AutoCompleteHook({\n  multiple,\n  options,\n  name,\n  control,\n  defaultValue,\n  rules = { required: '* Campo requerido' },\n  isOptionEqualToValue,\n  getOptionLabel,\n  helperText,\n  disabled,\n  ...rest\n}) {\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  return (\n    <Autocomplete\n\t\t\t{...inputProps}\n\t\t\tonChange={(e, newValue) => {\n\t\t\t\tonChange(newValue);\n\t\t\t}}\n\t\t\tmultiple={multiple}\n\t\t\toptions={options}\n\t\t\tnoOptionsText='No hay resultados'\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disabled={disabled}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField\n\t\t\t\t\t{...params}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\terror={invalid}\n\t\t\t\t\thelperText={error ? error.message : helperText}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n  )\n}\n","import React, { useEffect, useState, useCallback } from 'react'\n\n// MUI\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\n\n// Form\nimport { useController } from \"react-hook-form\";\nimport useAsyncDebounce from '../../../hooks/useAsyncDebounce';\n\nexport function AutoCompleteAsyncHook({\n  name,\n  control,\n  rules = null, \n  data = [],\n\tdefaultValue = '',\n  helperText = '',\n  getOptionLabel,\n  isOptionEqualToValue,\n  multiple,\n  handleRequest,\n  disabled,\n  renderOption,\n  renderTags,\n  limitTags,\n  ...rest\n}) {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [hasFinish, setHasFinish] = useState(true);\n  const loading = hasFinish && (open && options.length === 0);\n\n  const {\n    field: { ref, onChange, ...inputProps },\n\t\tfieldState: { error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let active = true;\n\n    const request = async () => {\n      await handleRequest(inputValue);\n    }\n\n    if (!loading) {\n      return undefined;\n    }\n\n    if (active) {\n      request();\n    }\n\n    return () => {\n      active = false;\n    };\n\n    // eslint-disable-next-line\n  }, [loading]);\n\n\n  // NOTA(RECKER): Reset\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setHasFinish(true);\n    }\n\n    // eslint-disable-next-line\n  }, [open]);\n\n  // NOTA(RECKER): Actualizar options\n  useEffect(() => {\n    if (data !== null) {\n      setOptions(data);\n      setHasFinish(false);\n    }\n  }, [data]);\n\n  // NOTA(REKCER): Refresh data\n  // eslint-disable-next-line\n\tconst refreshResults = useCallback(\n\t\tuseAsyncDebounce(() => {\n      setOptions([]);\n      setHasFinish(true);\n\t\t},500),\n\t[]);\n\n  return (\n    <Autocomplete\n      multiple={multiple}\n      id={`autocomplete-${name}`}\n      options={options}\n      open={open}\n      onOpen={() => {\n\t\t\t\tsetOpen(true);\n        setHasFinish(true);\n\t\t\t}}\n\t\t\tonClose={() => {\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n      onChange={(e,value) => {\n        onChange(value);\n      }}\n      inputValue={inputValue}\n      onInputChange={(e, newValue) => {\n\t\t\t\tsetInputValue(newValue);\n        if (e?.type === 'change') {\n          refreshResults();\n        }\n\t\t\t}}\n      getOptionLabel={getOptionLabel}\n      isOptionEqualToValue={isOptionEqualToValue}\n      loading={loading}\n      loadingText='Cargando...'\n\t\t\tnoOptionsText='No hay resultados'\n      renderTags={renderTags}\n      disabled={disabled}\n      renderOption={renderOption}\n      limitTags={limitTags}\n      renderInput={(params) => (\n        <TextField \n          {...params}\n          {...inputProps}\n          {...rest}\n          inputRef={ref}\n          error={Boolean(error)}\n          helperText={error ? error.message : helperText}\n          InputProps={{\n\t\t\t\t\t\t...params.InputProps,\n\t\t\t\t\t\tendAdornment: (\n\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t{loading ? <CircularProgress color='inherit' size={20} /> : null}\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n        />\n      )}\n    />\n  )\n}\n","export default function useAsyncDebounce(callback, delay) {\n\tlet timer;\n\t\n\treturn (...args) => {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => callback(...args), delay)\n\t}\n}","import React from 'react';\n\nimport {\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tFormHelperText,\n} from '@mui/material';\n\nimport { useController } from \"react-hook-form\";\n\nexport function SelectHook({\n\tname,\n\tlabel,\n\tcontrol,\n\thelperText = '',\n\tdefaultValue = '',\n\trules = { required: '* Campo requerido' },\n\tchildren,\n\t...rest\n}) {\n\tconst {\n    field: { ref, ...inputProps },\n\t\tfieldState: { invalid, error }\n  } = useController({\n    name,\n    control,\n\t\trules,\n    defaultValue,\n  });\n\t\n\treturn (\n\t\t<FormControl\n\t\t\t{...rest}\n\t\t\terror={invalid}\n\t\t>\n\t\t\t<InputLabel id={name + '-label'}>{label}</InputLabel>\n\t\t\t<Select labelId={name + '-label'} label={label} id={name} {...inputProps}>\n\t\t\t\t{children}\n\t\t\t</Select>\n\t\t\t<FormHelperText>{error ? error.message : helperText}</FormHelperText>\n\t\t</FormControl>\n\t);\n}","import React from 'react';\n\nimport {\n\tFormControlLabel,\n\tSwitch,\n} from '@mui/material';\n\nimport { useController } from \"react-hook-form\";\n\nexport function SwitchHook({ \n\tlabel, \n\tname, \n\tcontrol, \n\tdefaultValue = false,\n\tlabelPlacement = 'end', \n\t...rest\n}) {\n\tconst {\n    field: { ref, onChange, value, ...inputProps },\n  } = useController({\n    name,\n    control,\n    defaultValue: defaultValue,\n  });\n\t\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Switch\n\t\t\t\t\t{...rest}\n\t\t\t\t\t{...inputProps}\n\t\t\t\t\tinputRef={ref}\n\t\t\t\t\tonChange={e => onChange(e.currentTarget.checked)}\n\t\t\t\t\tchecked={value}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t\tsx={{userSelect: 'none'}}\n\t\t\tlabelPlacement={labelPlacement}\n\t\t/>\n\t);\n}","import React, { useCallback } from 'react';\n\n// MUI\nimport { Grid, MenuItem, Paper, Typography } from '@mui/material';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { InputMaskHook, InputHook } from '../../../../components/form/inputs';\nimport { SelectHook } from '../../../../components/form/select';\n\n// Components\nimport { BankList } from '../../../../components/Utils/BankList';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/createBankAccount';\n\nexport default function CreateBankAccount() {\n  const loading = useSelector(state => state.requestStatus.createBankAccount.loading);\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit, setError } = useForm();\n\n  const MenuItemList = BankList.map(useCallback((data, i) => (\n\t\t<MenuItem key={i} value={data.value}>{data.label}</MenuItem>\n\t),[]));\n\n  const onSubmit = submitData => {\n    dispatch(createBankAccount({ submitData, setError }));\n  }\n\n  return (\n    <Paper component='form' autoComplete='off' className='paper--padding'>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant='h6' className='text__bold--semi'>\n            Crear cuenta bancaria\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputMaskHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 20, message: 'Error: Cuenta no válida' },\n              maxLength: { value: 20, message: 'Error: Cuenta no válida' },\n            }}\n            name='n_account'\n            label='N° de cuenta'\n            fullWidth\n            size='small'\n            disabled={loading}\n            format=\"#### #### #### #### ####\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputMaskHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 9, message: 'Error: RIF no válida' },\n              maxLength: { value: 9, message: 'Error: RIF no válida' },\n            }}\n            name='rif'\n            label='RIF'\n            fullWidth\n            size='small'\n            disabled={loading}\n            format=\"J-########-#\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              minLength: { value: 6, message: 'Error: Demaciado corto' },\n              maxLength: { value: 100, message: 'Error: Demaciado largo' },\n            }}\n            name='name'\n            label='Nombre'\n            size='small'\n            fullWidth\n            disabled={loading}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <InputHook\n            control={control}\n            rules={{\n              required: '* Campo requerido',\n              pattern: {\n                value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                message: 'Error: Correo no válido',\n              },\n            }}\n            name='email'\n            label='Correo'\n            size='small'\n            fullWidth\n            disabled={loading}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <SelectHook\n            name='type'\n            label='Tipo de cuenta'\n            control={control}\n            size='small'\n            disabled={loading}\n            fullWidth\n          >\n            <MenuItem value=''>\n              <em>Ninguno</em>\n            </MenuItem>\n            <MenuItem value='ahorro'>\n              Ahorro\n            </MenuItem>\n            <MenuItem value='corriente'>\n              Corriente\n            </MenuItem>\n          </SelectHook>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <SelectHook\n            name='code'\n            label='Banco'\n            control={control}\n            disabled={loading}\n            size='small'\n            fullWidth\n          >\n            <MenuItem value=''>\n              <em>Ninguno</em>\n            </MenuItem>\n            {MenuItemList}\n          </SelectHook>\n        </Grid>\n        <Grid container justifyContent='flex-end' item xs={12}>\n          <LoadingButton\n            variant='contained' \n            loading={loading}\n            disableElevation\n            onClick={handleSubmit(onSubmit)}\n          >\n            Agregar\n          </LoadingButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\n\n// MUI\nimport { IconButton, Tooltip } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport EditIcon from '@mui/icons-material/Edit';\n\n// Components\nimport ReactTableBase from '../../../../components/ReactTableBase';\nimport { parseToAccountString } from '../../../../components/Utils/ParseString';\nimport { BankListSearch } from '../../../../components/Utils/BankList';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBankAccounts } from '../../../../store/slices/tables/async_trunk/configuracion/TableBankAccounts';\nimport { refresh, resetTableConfig, setConfigTable, setSearch } from '../../../../store/slices/tables';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\n\nexport default function TableAccounts() {\n  const { dataR, loading, pageSize, pageCount, gedure: { bank_transaction_assign, bank_transaction_delete } } = useSelector(state => ({\n    dataR: state.tables.bankAccounts.tableData.data,\n    loading: state.tables.bankAccounts.tableData.loading,\n    pageSize: state.tables.bankAccounts.tableData.pageSize,\n    pageCount: state.tables.bankAccounts.tableData.pageCount,\n    gedure: state.auth.permissions.gedure,\n  }));\n  const dispatch = useDispatch();\n\n  const columns = useMemo(() => [\n    {\n      Header: 'N° cuenta',\n      accessor: 'n_account',\n      Cell: ({ cell: { row: { original: { n_account } } } }) => parseToAccountString(n_account)\n    },\n    {\n      Header: 'Nombre',\n      accessor: 'name',\n    },\n    {\n      Header: 'Correo', \n      accessor: 'email'\n    },\n    {\n      Header: 'Tipo', \n      accessor: 'type'\n    },\n    {\n      Header: 'Banco', \n      accessor: 'code',\n      Cell: ({ cell: { row: { original: { code } } } }) => BankListSearch[code] || 'No especificado',\n    },\n    {\n      id: 'options',\n      Header: 'Opciones',\n      accessor: 'options',\n      Cell: ({ cell: { row: { original: { id, n_account, rif, name, email, type, code } } } }) => (\n        <>\n          <Tooltip title='Editar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_transaction_assign}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id, n_account, rif, name, email, type, code }, select: 'editBankAccount'}));\n              }}\n            >\n              <EditIcon /> \n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Eliminar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_transaction_delete}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id, n_account}, select: 'deleteBankAccount'}));\n              }}\n            >\n              <DeleteForeverIcon /> \n            </IconButton>\n          </Tooltip>\n        </>\n      )\n    },\n    // eslint-disable-next-line\n  ],[]);\n\n  const data = useMemo(() => dataR, [dataR]);\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let promise = null;\n\n    if (loading) {\n      promise = dispatch(getBankAccounts());\n    }\n\n    return () => {\n      if (loading) {\n        promise.abort(); \n      }\n    }\n    // eslint-disable-next-line\n  }, [loading]);\n\n  // NOTA(RECKER): Reinicar config al desmontar\n  useEffect(() => {\n    return () => {\n      dispatch(resetTableConfig({ select: 'bankAccounts' }));\n    }\n    // eslint-disable-next-line\n  },[]);\n\n  const handleGlobalFilter = value => {\n    dispatch(setSearch({search: value || \"\", select: 'bankAccounts'}));\n  }\n\n  const handleChange = value => {\n    dispatch(setConfigTable({ ...value, select: 'bankAccounts' }));\n  }\n\n  const handleRefresh = () => {\n    dispatch(refresh({ select: 'bankAccounts' }));\n  }\n\n  return (\n    <ReactTableBase\n      title='Cuentas bancarias'\n      data={data}\n      columns={columns}\n      pageCountData={pageCount}\n      pageSizeData={pageSize}\n      loading={loading}\n      handleGlobalFilter={handleGlobalFilter}\n      handleChange={handleChange}\n      refresh={handleRefresh}\n      massiveOptions={dataMassive => (\n        <>\n          <Tooltip title=\"Eliminar\" arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_transaction_delete}\n              onClick={() => {\n                let i = 0;\n\t\t\t\t\t\t\t\tlet idsArray = [];\n\t\t\t\t\t\t\t\tfor(let value of dataMassive){\n\t\t\t\t\t\t\t\t\tidsArray[i] = value.id;\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n                dispatch(setRequestStatus({select: 'deleteBankAccountMassive', open: true, data: idsArray}))\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      )}\n    />\n  )\n}","import React, { useCallback } from 'react';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, MenuItem } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { InputHook, InputMaskHook } from '../../../../components/form/inputs';\nimport { SwitchHook } from '../../../../components/form/switch';\nimport { SelectHook } from '../../../../components/form/select';\n\n// Components\nimport AnimationDialog from '../../../../components/AnimationDialog';\nimport { BankList } from '../../../../components/Utils/BankList';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { editBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/editBankAccount';\n\nexport default function EditBankAccount() {\n  const { data, open, loading } = useSelector(state => state.requestStatus.editBankAccount);\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit, watch, setError } = useForm({\n    shouldUnregister: true,\n  })\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({open: false, data: {}, select: 'editBankAccount'}))\n  }\n\n  const MenuItemList = BankList.map(useCallback((data, i) => (\n\t\t<MenuItem key={i} value={data.value}>{data.label}</MenuItem>\n\t),[]));\n\n  const onSubmit = submitData => {\n    submitData.id = data.id;\n    submitData._method = 'PUT';\n\n    dispatch(editBankAccount({submitData, setError}));\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n    >\n      <DialogTitle>Editar cuenta bancaria #{data.id}</DialogTitle>\n      <DialogContent>\n        <form autoComplete='off'>\n          <Grid container spacing={2}>\n            {watch('important_data') === true && (\n              <Grid item xs={12}>\n                <InputMaskHook\n                  control={control}\n                  rules={{\n                    required: '* Campo requerido',\n                    minLength: { value: 20, message: 'Error: Cuenta no válida' },\n                    maxLength: { value: 20, message: 'Error: Cuenta no válida' },\n                  }}\n                  name='n_account'\n                  label='N° de cuenta'\n                  fullWidth\n                  size='small'\n                  variant='standard'\n                  disabled={loading}\n                  defaultValue={data.n_account}\n                  format=\"#### #### #### #### ####\"\n                />\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <InputMaskHook\n                control={control}\n                rules={{\n                  required: '* Campo requerido',\n                  minLength: { value: 9, message: 'Error: RIF no válida' },\n                  maxLength: { value: 9, message: 'Error: RIF no válida' },\n                }}\n                name='rif'\n                label='RIF'\n                fullWidth\n                size='small'\n                variant='standard'\n                disabled={loading}\n                defaultValue={data.rif}\n                format=\"J-########-#\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<InputHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tminLength: { value: 6, message: 'Error: Demaciado corto' },\n\t\t\t\t\t\t\t\t\tmaxLength: { value: 100, message: 'Error: Demaciado largo' },\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tlabel='Nombre'\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tdefaultValue={data.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<InputHook\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\trules={{\n\t\t\t\t\t\t\t\t\trequired: '* Campo requerido',\n\t\t\t\t\t\t\t\t\tpattern: {\n\t\t\t\t\t\t\t\t\t\tvalue: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n\t\t\t\t\t\t\t\t\t\tmessage: 'Error: Correo no válido',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tlabel='Correo'\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tdefaultValue={data.email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='type'\n\t\t\t\t\t\t\t\tlabel='Tipo de cuenta'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdefaultValue={data.type}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=''>\n\t\t\t\t\t\t\t\t\t<em>Ninguno</em>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='ahorro'>\n\t\t\t\t\t\t\t\t\tAhorro\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem value='corriente'>\n\t\t\t\t\t\t\t\t\tCorriente\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n            <Grid item xs={12}>\n\t\t\t\t\t\t\t<SelectHook\n\t\t\t\t\t\t\t\tname='code'\n\t\t\t\t\t\t\t\tlabel='Banco'\n\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\tdisabled={loading}\n                size='small'\n                variant='standard'\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tdefaultValue={data.code}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<MenuItem value=''>\n\t\t\t\t\t\t\t\t\t<em>Ninguno</em>\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t{MenuItemList}\n\t\t\t\t\t\t\t</SelectHook>\n\t\t\t\t\t\t</Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <SwitchHook\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tname='important_data'\n\t\t\t\t\tlabel=\"Modificar campos importantes\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tdisabled={loading}\n\t\t\t\t/>\n        <Button sx={{ml: 1}} color='inherit' disabled={loading} onClick={handleClose}>\n          Cancelar\n        </Button>\n        <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} variant=\"text\" color=\"inherit\">\n          Actualizar\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react';\n\n// MUI\nimport { Box, Button, Grid, Paper, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { AutoCompleteAsyncHook } from '../../../../components/form/inputs';\n\n// Components\nimport { parseToAccountString } from '../../../../components/Utils/ParseString';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBankAccountsInput } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/getBankAccounts';\nimport { uploadTransactionsRequest } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/uploadTransactions';\n\nexport default function UploadTransactions() {\n  const { autoComplete, loading, progress } = useSelector(state => state.requestStatus.uploadTransactions);\n  const dispatch = useDispatch();\n\n  const { register, control, handleSubmit, watch, formState: { errors } } = useForm({\n\t\tmode: 'onTouched'\n\t});\n\n  const handleRequest = async (valueInput) => {\n    await dispatch(getBankAccountsInput(valueInput));\n  }\n\n  const onSubmit = submitData => {\n    const formData = new FormData();\n\t\tformData.append('transactions', submitData.transactions[0]);\n\n    dispatch(uploadTransactionsRequest({submitData: formData, id: submitData.selected.id}));\n  }\n\n  return (\n    <Paper component='form' autoComplete='off' className='paper--padding'>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Typography variant='h6' className='text__bold--semi'>\n            Cargar transacciones bancarias\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <AutoCompleteAsyncHook\n            data={autoComplete}\n            name='selected'\n            label='Buscar cuenta bancaria'\n            helperText='Busque la cuenta bancaria a la cual desea cargar las transferencias'\n            control={control}\n            disabled={loading}\n            getOptionLabel={(option) => parseToAccountString(option.n_account) || \"\"}\n            isOptionEqualToValue={(option, value) => option.n_account === value.n_account}\n            handleRequest={handleRequest}\n            rules={{\n              required: { value: true, message: '* Campo requerido' },\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <input\n            id='upload-transactions'\n            {...register('transactions',{\n              required: '* Debe subir un archivo',\n            })}\n            defaultValue={null}\n            style={{display: 'none'}}\n            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.csv,application/vnd.oasis.opendocument.spreadsheet\"\n            type=\"file\"\n          />\n          <label htmlFor=\"upload-transactions\">\n            <Button variant='contained' color={Boolean(errors.transactions) ? 'error' : 'primary'} disableElevation component='span'>\n              Cargar archivo\n            </Button>\n          </label>\n          {Boolean(errors.transactions) && (\n            <Box fontSize='body1.fontSize' component='span' ml={2} color='#f44336'>\n              {errors.transactions.message}\n            </Box>\n          )}\n          {((watch('transactions')?.length || []).length !== 0) && (\n            <Box fontSize='body1.fontSize' component='span' ml={2}>\n              Archivo cargado\n            </Box>\n          )}\n        </Grid>\n\n        <Grid container justifyContent='flex-end' item xs={12}>\n          <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} loadingIndicator={loading && progress < 99 ? `${progress}%` : null} variant=\"contained\" disableElevation>\n              Cargar\n            </LoadingButton>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import React, { useEffect, useMemo } from 'react'\n\n// MUI\nimport { IconButton, Tooltip } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\n\n// Components\nimport ReactTableBase from '../../../../components/ReactTableBase';\nimport { parseFloatToMoneyString } from '../../../../components/Utils/ParseString';\nimport { BankListSearch } from '../../../../components/Utils/BankList';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { refresh, resetTableConfig, setConfigTable, setSearch } from '../../../../store/slices/tables';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { getBankTransactions } from '../../../../store/slices/tables/async_trunk/configuracion/TableBankTransactions';\n\nexport default function TableTransactions() {\n  const { dataR, loading, pageSize, pageCount, gedure: { bank_account_edit, bank_account_destroy } } = useSelector(state => ({\n    dataR: state.tables.bankTransactions.tableData.data,\n    loading: state.tables.bankTransactions.tableData.loading,\n    pageSize: state.tables.bankTransactions.tableData.pageSize,\n    pageCount: state.tables.bankTransactions.tableData.pageCount,\n    gedure: state.auth.permissions.gedure,\n  }));\n  const dispatch = useDispatch();\n\n  const columns = useMemo(() => [\n    {\n      Header: 'Id',\n      accessor: 'id'\n    },\n    {\n      Header: 'Referencia',\n      accessor: 'reference',\n    },\n    {\n      Header: 'Concepto', \n      accessor: 'concepto'\n    },\n    {\n      Header: 'Fecha de transferencia', \n      accessor: 'date'\n    },\n    {\n      Header: 'Monto', \n      accessor: 'amount',\n      Cell: ({ cell: { row: { original: { amount } } } }) => parseFloatToMoneyString(amount),\n    },\n    {\n      Header: 'Banco', \n      accessor: 'code',\n      Cell: ({ cell: { row: { original: { code } } } }) => BankListSearch[code] || 'No especificado',\n    },\n    {\n      Header: 'Reclamado por', \n      accessor: 'taked_by',\n      Cell: ({ cell: { row: { original: { user } } } }) => user?.privilegio+user?.username || 'No reclamado',\n    },\n    {\n      id: 'options',\n      Header: 'Opciones',\n      accessor: 'options',\n      Cell: ({ cell: { row: { original: { id, amount } } } }) => (\n        <>\n          <Tooltip title='Asignar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_account_edit}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id, amount }, select: 'assignTransaction'}));\n              }}\n            >\n              <AssignmentIcon /> \n            </IconButton>\n          </Tooltip>\n          <Tooltip title='Eliminar' arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_account_destroy}\n              onClick={() => {\n                dispatch(setRequestStatus({open: true, data: { id }, select: 'deleteTransaction'}));\n              }}\n            >\n              <DeleteForeverIcon /> \n            </IconButton>\n          </Tooltip>\n        </>\n      )\n    },\n    // eslint-disable-next-line\n  ],[]);\n\n  const data = useMemo(() => dataR, [dataR]);\n\n  // NOTA(RECKER): Core request\n  useEffect(() => {\n    let promise = null;\n\n    if (loading) {\n      promise = dispatch(getBankTransactions());\n    }\n\n    return () => {\n      if (loading) {\n        promise.abort(); \n      }\n    }\n    // eslint-disable-next-line\n  }, [loading]);\n\n  // NOTA(RECKER): Reinicar config al desmontar\n  useEffect(() => {\n    return () => {\n      dispatch(resetTableConfig({ select: 'bankTransactions' }));\n    }\n    // eslint-disable-next-line\n  },[]);\n\n  const handleGlobalFilter = value => {\n    console.log(value);\n    dispatch(setSearch({search: value || \"\", select: 'bankTransactions'}));\n  }\n\n  const handleChange = value => {\n    dispatch(setConfigTable({ ...value, select: 'bankTransactions' }));\n  }\n\n  const handleRefresh = () => {\n    dispatch(refresh({ select: 'bankTransactions' }));\n  }\n\n  return (\n    <ReactTableBase\n      title='Cuentas bancarias'\n      data={data}\n      columns={columns}\n      pageCountData={pageCount}\n      pageSizeData={pageSize}\n      loading={loading}\n      handleGlobalFilter={handleGlobalFilter}\n      handleChange={handleChange}\n      refresh={handleRefresh}\n      massiveOptions={dataMassive => (\n        <>\n          <Tooltip title=\"Eliminar\" arrow>\n            <IconButton\n              component='span'\n              disabled={!bank_account_destroy}\n              onClick={() => {\n                let i = 0;\n\t\t\t\t\t\t\t\tlet idsArray = [];\n\t\t\t\t\t\t\t\tfor(let value of dataMassive){\n\t\t\t\t\t\t\t\t\tidsArray[i] = value.id;\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\n                dispatch(setRequestStatus({select: 'deleteMassiveBankTransaction', open: true, data: idsArray}))\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      )}\n    />\n  )\n}","import React from 'react';\n\n// MUI\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm } from 'react-hook-form';\nimport { AutoCompleteAsyncHook } from '../../../../components/form/inputs';\n\n// Components\nimport AnimationDialog from '../../../../components/AnimationDialog';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { parseFloatToMoneyString } from '../../../../components/Utils/ParseString';\nimport { searchUser } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/searchUser';\nimport { assignTransactionRequest } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/assignTransaction';\n\nexport default function AssignTransaction() {\n  const { autoComplete, data, open, loading } = useSelector(state => state.requestStatus.assignTransaction);\n  const dispatch = useDispatch();\n\n  const { control, handleSubmit } = useForm({\n    shouldUnregister: true,\n  })\n\n  const handleClose = () => {\n    dispatch(setRequestStatus({open: false, data: {}, select: 'assignTransaction'}))\n  }\n\n  const onSubmit = submitData => {\n    submitData.user_selected = submitData.user_selected.id;\n\n    dispatch(assignTransactionRequest({submitData, id: data.id}));\n  }\n\n  const handleRequest = async (valueInput) => {\n    await dispatch(searchUser(valueInput));\n  }\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={AnimationDialog}\n    >\n      <DialogTitle>Asignar transacción bancaria #{data.id}</DialogTitle>\n      <DialogContent>\n        <form autoComplete='off'>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <DialogContentText>\n                Ha seleccionado la transacción bancaria <strong>#{data.id}</strong> para asigarla a un usuario, esta acción acreditará <strong>{parseFloatToMoneyString(data.amount || 0)}</strong> a la cuenta del usuario seleccionado.\n              </DialogContentText>\n            </Grid>\n            <Grid item xs={12}>\n              <AutoCompleteAsyncHook\n                data={autoComplete}\n                label='Seleccionar usuario'\n\t\t\t\t\t\t\t  name='user_selected'\n                helperText='Busque al usuario que desea seleccionar'\n                control={control}\n                disabled={loading}\n                getOptionLabel={(option) => `${option.privilegio}${option.username} - ${option.name}` || \"\"}\n                isOptionEqualToValue={(option, value) => option.n_account === value.n_account}\n                handleRequest={handleRequest}\n                rules={{\n                  required: { value: true, message: '* Campo requerido' },\n                }}\n              />\n\t\t\t\t\t\t</Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Button sx={{ml: 1}} color='inherit' disabled={loading} onClick={handleClose}>\n          Cancelar\n        </Button>\n        <LoadingButton onClick={handleSubmit(onSubmit)} loading={loading} variant=\"text\" color=\"inherit\">\n          Asignar\n        </LoadingButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import React from 'react'\n\n// MUI\nimport { Grid } from '@mui/material';\n\n// Components\nimport CreateBankAccount from './CreateBankAccount';\nimport TableAccounts from './TableAccounts';\nimport DialogConfirmation from '../../../../components/DialogConfirmation';\nimport { parseToAccountString } from '../../../../components/Utils/ParseString';\nimport EditBankAccount from './EditBankAccount';\nimport UploadTransactions from './UploadTransactions';\nimport TableTransactions from './TableTransactions';\nimport AssignTransaction from './AssignTransaction';\n\n// Redux\nimport { useSelector } from 'react-redux';\nimport { setRequestStatus } from '../../../../store/slices/requestStatus';\nimport { deleteBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteBankAccount';\nimport { deleteBankTransaction } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteBankTransaction';\nimport { deleteMassiveBankAccount } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteMassiveBankAccount';\nimport { deleteMassiveBankTransaction } from '../../../../store/slices/requestStatus/async_trunk/configuracion/pagos/deleteMassiveBankTransaction';\n\nexport default function GDPagos() {\n  const { gedure } = useSelector((state) => ({\n\t\tgedure: state.auth.permissions.gedure,\n\t}));\n\n  return (\n    <Grid container spacing={2} sx={{paddingBottom: 6}}>\n      {gedure.bank_account_create && (\n        <Grid item xs={12}>\n          <CreateBankAccount />\n        </Grid>\n      )}\n      {gedure.bank_account_index && (\n        <Grid item xs={12}>\n          <TableAccounts />\n          <EditBankAccount />\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteBankAccount'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteBankAccount'})\n            }\n            request={\n              data => deleteBankAccount(data.id)\n            }\n          >\n            {(data) => (<span>Está a punto de <strong>eliminar</strong> la cuenta <strong>{parseToAccountString(data?.n_account || '')}</strong>. Al realizarse esta acción todas las <strong>transacciones bancarias</strong> registradas de la misma <strong>serán borradas</strong>, pero las <strong>transacciones internas</strong> realizadas dentro del sistema <strong>no se verán afectadas</strong>. Tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteBankAccountMassive'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteBankAccountMassive'})\n            }\n            request={\n              data => deleteMassiveBankAccount(data)\n            }\n          >\n            {(data) => (<span>Está a punto de <strong>eliminar</strong> <strong>{data?.length}</strong> cuenta(s). Al realizarse esta acción todas las <strong>transacciones bancarias</strong> registradas de la misma <strong>serán borradas</strong>, pero las <strong>transacciones internas</strong> realizadas dentro del sistema <strong>no se verán afectadas</strong>. Tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n        </Grid>\n      )}\n      {gedure.bank_transaction_upload && (\n        <Grid item xs={12}>\n          <UploadTransactions />\n        </Grid>\n      )}\n      {gedure.bank_transaction_index && (\n        <Grid item xs={12}>\n          <TableTransactions />\n          <AssignTransaction />\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteTransaction'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteTransaction'})\n            }\n            request={\n              data => deleteBankTransaction(data.id)\n            }\n          >\n            {(data) => (<span>Está a punto de eliminar la transacción <strong>#{data.id}</strong>, tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n          <DialogConfirmation\n            rdx1='requestStatus' \n            rdx2='deleteMassiveBankTransaction'\n            close={\n              setRequestStatus({open: false, data: {}, select: 'deleteMassiveBankTransaction'})\n            }\n            request={\n              data => deleteMassiveBankTransaction(data)\n            }\n          >\n            {(data) => (<span>Está a punto de <strong>eliminar {data?.length}</strong> transaccione(s), tenga en cuenta que esta acción no se puede deshacer.</span>)}\n          </DialogConfirmation>\n        </Grid>\n      )}\n    </Grid>\n  )\n}\n"],"names":["AnimationDialog","React","props","ref","direction","DialogConfirmation","rdx1","rdx2","close","request","children","useSelector","state","open","loading","data","dispatch","useDispatch","TransitionComponent","id","disabled","onClick","color","GlobalFilter","setGlobalFilter","gotoPage","useState","globalFilter","value","setValue","onDebounce","useAsyncDebounce","undefined","TextField","size","placeholder","variant","onChange","event","target","sx","mr","InputProps","startAdornment","InputAdornment","position","Search","endAdornment","IconButton","Clear","IndeterminateCheckbox","indeterminate","rest","defaultRef","resolvedRef","current","Checkbox","type","ReactTableBase","columns","pageSizeData","pageCountData","handleGlobalFilter","handleChange","filter","massiveOptions","title","refresh","tableInstance","useTable","initialState","hiddenColumns","pageSize","pageIndex","manualPagination","pageCount","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","selectedFlatRows","allColumns","canPreviousPage","canNextPage","nextPage","previousPage","setPageSize","pageOptions","useEffect","Grid","container","spacing","item","xs","Paper","Backdrop","zIndex","theme","appBar","CircularProgress","Toolbar","length","bgcolor","alpha","palette","primary","main","action","activatedOpacity","Typography","flex","component","noWrap","map","d","original","Tooltip","arrow","column","toggleHidden","Group","Refresh","TableContainer","Box","overflow","minWidth","Table","TableHead","th","border","headerGroup","TableRow","td","getHeaderGroupProps","headers","TableCell","padding","getHeaderProps","render","align","TableBody","height","getRowProps","cells","cell","getCellProps","colSpan","textAlign","TableFooter","justifyContent","alignItems","Select","labelId","label","e","Number","MenuItem","FirstPage","NavigateBefore","fontSize","NavigateNext","LastPage","BankList","BankListSearch","InputHook","name","control","rules","defaultValue","helperText","useController","field","inputProps","fieldState","invalid","error","inputRef","message","InputPasswordHook","visibility","setVisibility","InputMaskHook","customInput","onValueChange","values","mask","AutoCompleteHook","multiple","options","required","isOptionEqualToValue","getOptionLabel","Autocomplete","newValue","noOptionsText","renderInput","params","AutoCompleteAsyncHook","handleRequest","renderOption","renderTags","limitTags","setOpen","setOptions","inputValue","setInputValue","hasFinish","setHasFinish","active","refreshResults","useCallback","callback","delay","timer","args","clearTimeout","setTimeout","onOpen","onClose","onInputChange","loadingText","Boolean","SelectHook","SwitchHook","labelPlacement","currentTarget","checked","userSelect","CreateBankAccount","requestStatus","createBankAccount","useForm","handleSubmit","setError","MenuItemList","i","autoComplete","className","sm","md","minLength","maxLength","fullWidth","format","pattern","LoadingButton","disableElevation","submitData","TableAccounts","dataR","tables","bankAccounts","tableData","gedure","auth","permissions","bank_transaction_assign","bank_transaction_delete","useMemo","accessor","n_account","parseToAccountString","code","rif","email","setRequestStatus","select","Edit","DeleteForever","promise","getBankAccounts","abort","resetTableConfig","setSearch","search","setConfigTable","dataMassive","idsArray","EditBankAccount","editBankAccount","shouldUnregister","watch","Dialog","DialogTitle","DialogContent","DialogActions","Button","ml","_method","UploadTransactions","uploadTransactions","progress","mode","register","errors","formState","valueInput","getBankAccountsInput","option","style","display","accept","htmlFor","transactions","formData","FormData","append","uploadTransactionsRequest","selected","loadingIndicator","TableTransactions","bankTransactions","bank_account_edit","bank_account_destroy","amount","parseFloatToMoneyString","user","privilegio","username","Assignment","getBankTransactions","console","log","AssignTransaction","assignTransaction","searchUser","DialogContentText","user_selected","assignTransactionRequest","GDPagos","paddingBottom","bank_account_create","bank_account_index","deleteBankAccount","deleteMassiveBankAccount","bank_transaction_upload","bank_transaction_index","deleteBankTransaction","deleteMassiveBankTransaction"],"sourceRoot":""}