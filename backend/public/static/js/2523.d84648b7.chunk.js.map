{"version":3,"file":"static/js/2523.d84648b7.chunk.js","mappings":"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","sources":["pages/gedure/cuenta/personal_data/CRUbicacion.js","pages/gedure/usuarios/ver/personal_data/RUbicacion.js"],"sourcesContent":["import { Box } from '@mui/material';\nimport React from 'react'\n\n// Form\nimport { useForm } from 'react-hook-form';\n\n// Components\nimport { RUbicacionForm } from '../../usuarios/ver/personal_data/RUbicacion';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUserData } from '../../../../store/slices/auth';\nimport { updateData } from '../../../../store/slices/gedure/usuarios/ver/requests/gdUPD';\n\nexport default function CRUbicacion() {\n  const { user, loading } = useSelector(state => ({\n    user: state.auth.user,\n    loading: state.gdUPD.loadingRU,\n  }));\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control } = useForm();\n\n  const handleUpdate = ({ user }) => {\n    dispatch(updateUserData({ user }));\n  }\n\n  const onSubmit = submitData => {\n    // NOTA(RECKER): Reset Ubi\n    if (user.personal_data.repre_nacionalidad === 'E') {\n\t\t\tsubmitData.personal_data.repre_ubi_estado = null;\n\t\t\tsubmitData.personal_data.repre_ubi_municipio = null;\n\t\t\tsubmitData.personal_data.repre_ubi_parroquia = null;\n\t\t\tsubmitData.personal_data.repre_ubi_via = null;\n\t\t}\n\n    submitData._method = 'PUT';\n\n    dispatch(updateData({\n      submitData, \n      loading: 'loadingRU',\n      personal: true,\n      handleUpdate,\n    }));\n  }\n\n  if (user.personal_data.repre_nacionalidad !== 'V') {\n    return null;\n  }\n\n  return (\n    <Box mb={4}>\n      <RUbicacionForm\n        control={control}\n        user={user}\n        handleSubmit={handleSubmit(onSubmit)}\n        loading={loading}\n      />\n    </Box>\n  )\n}\n","import React from 'react'\n\n// Router\nimport { useParams } from 'react-router-dom';\n\n// MUI\nimport { Box, Divider, Grid, MenuItem, Typography } from '@mui/material'\nimport LoadingButton from '@mui/lab/LoadingButton';\n\n// Form\nimport { useForm, useWatch } from 'react-hook-form';\nimport { AutoCompleteHook } from '../../../../../components/form/inputs';\nimport { SelectHook } from '../../../../../components/form/select';\n\n// Components\nimport { buscarMunicipioVE, buscarParroquiaVE, estadosVE } from '../../../../../components/Utils/LocationVE';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateData } from '../../../../../store/slices/requestStatus/async_trunk/users/updateData';\n\nexport function RUbicacionForm({ loading, control, handleSubmit, user, buttonDisable }) {\n  const repre_ubi_estado = useWatch({\n    name: 'personal_data.repre_ubi_estado',\n    control,\n    defaultValue: user.personal_data.repre_ubi_estado,\n  });\n\n  const repre_ubi_municipio = useWatch({\n    name: 'personal_data.repre_ubi_municipio',\n    control,\n    defaultValue: user.personal_data.repre_ubi_municipio,\n  });\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant='h6' component='span' className='text__bold--semi'>\n          Datos del representante\n        </Typography>\n        <Box mt={1}>\n          <Divider />\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <AutoCompleteHook\n          name='personal_data.repre_ubi_estado'\n          label='Estado'\n          size='small'\n          options={estadosVE}\n          control={control}\n          defaultValue={user.personal_data.repre_ubi_estado || ''}\n          isOptionEqualToValue={(option, value) => option === value}\n          disabled={loading}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <AutoCompleteHook\n          name='personal_data.repre_ubi_municipio'\n          label='Municipio'\n          size='small'\n          options={repre_ubi_estado ? buscarMunicipioVE(repre_ubi_estado) : []}\n          control={control}\n          defaultValue={user.personal_data.repre_ubi_municipio || ''}\n          isOptionEqualToValue={(option, value) => option === value}\n          disabled={loading || !Boolean(repre_ubi_estado)}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <AutoCompleteHook\n          name='personal_data.repre_ubi_parroquia'\n          label='Parroquia'\n          size='small'\n          options={\n            (repre_ubi_estado && repre_ubi_municipio) \n            ? \n            buscarParroquiaVE(repre_ubi_estado,repre_ubi_municipio)\n            :\n            []\n          }\n          control={control}\n          defaultValue={user.personal_data.repre_ubi_parroquia || ''}\n          isOptionEqualToValue={(option, value) => option === value}\n          disabled={loading || (!Boolean(repre_ubi_estado) || !Boolean(repre_ubi_municipio))}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <SelectHook\n          name='personal_data.repre_ubi_via'\n          label='Tipo de via'\n          defaultValue={user.personal_data.repre_ubi_via || ''}\n          control={control}\n          disabled={loading}\n          size='small'\n          fullWidth\n        >\n          <MenuItem value=''>\n            <em>Ninguno</em>\n          </MenuItem>\n          <MenuItem value=\"Aut\">Aut</MenuItem>\n          <MenuItem value=\"Av\">Av</MenuItem>\n          <MenuItem value=\"Blvr\">Blvr</MenuItem>\n          <MenuItem value=\"Calle\">Calle</MenuItem>\n          <MenuItem value=\"Callej贸n\">Callej贸n</MenuItem>\n          <MenuItem value=\"Carretera\">Carretera</MenuItem>\n          <MenuItem value=\"Manzana\">Manzana</MenuItem>\n          <MenuItem value=\"Prolongaci贸n\">Prolongaci贸n</MenuItem>\n          <MenuItem value=\"Transversal\">Transversal</MenuItem>\n          <MenuItem value=\"Vereda\">Vereda</MenuItem>\n        </SelectHook>\n      </Grid>\n      {!buttonDisable && (\n        <Grid container justifyContent='flex-end' item xs={12}>\n          <LoadingButton\n            variant='contained'\n            loading={loading}\n            disableElevation\n            onClick={handleSubmit}\n          >\n            Actualizar\n          </LoadingButton>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default function RUbicacion() {\n  const { id } = useParams();\n\n  const { userSelected, loading } = useSelector(state => ({\n    userSelected: state.requestStatus.userShow.userSelected,\n    loading: state.requestStatus.personalData.loadingRU,\n  }));\n  const dispatch = useDispatch();\n\n  const { handleSubmit, control } = useForm();\n\n  const onSubmit = submitData => {\n    // NOTA(RECKER): Reset Ubi\n    if (userSelected.personal_data.repre_nacionalidad === 'E') {\n\t\t\tsubmitData.personal_data.repre_ubi_estado = null;\n\t\t\tsubmitData.personal_data.repre_ubi_municipio = null;\n\t\t\tsubmitData.personal_data.repre_ubi_parroquia = null;\n\t\t\tsubmitData.personal_data.repre_ubi_via = null;\n\t\t}\n\n    submitData._method = 'PUT';\n\n    dispatch(updateData({submitData, id, loading: 'loadingRU'}));\n  }\n\n  if (userSelected.personal_data.repre_nacionalidad !== 'V') {\n    return null;\n  }\n\n  return (\n    <Box mb={4}>\n      <RUbicacionForm\n        control={control}\n        user={userSelected}\n        handleSubmit={handleSubmit(onSubmit)}\n        loading={loading}\n      />\n    </Box>\n  )\n}\n"],"names":["CRUbicacion","useSelector","state","user","auth","loading","gdUPD","loadingRU","dispatch","useDispatch","useForm","handleSubmit","control","handleUpdate","updateUserData","personal_data","repre_nacionalidad","mb","RUbicacionForm","submitData","repre_ubi_estado","repre_ubi_municipio","repre_ubi_parroquia","repre_ubi_via","_method","updateData","personal","buttonDisable","useWatch","name","defaultValue","container","spacing","item","xs","variant","component","className","mt","label","size","options","estadosVE","isOptionEqualToValue","option","value","disabled","buscarMunicipioVE","Boolean","buscarParroquiaVE","fullWidth","justifyContent","disableElevation","onClick","RUbicacion","id","useParams","userSelected","requestStatus","userShow","personalData"],"sourceRoot":""}